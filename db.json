{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1},{"_id":"source/img/001.svg","path":"img/001.svg","modified":1,"renderable":0},{"_id":"source/img/Unity.jpg","path":"img/Unity.jpg","modified":1,"renderable":0},{"_id":"source/img/002.png","path":"img/002.png","modified":1,"renderable":0},{"_id":"source/img/003.png","path":"img/003.png","modified":1,"renderable":0},{"_id":"source/img/004.png","path":"img/004.png","modified":1,"renderable":0},{"_id":"source/img/default.jpg","path":"img/default.jpg","modified":1,"renderable":0},{"_id":"source/img/index.jpg","path":"img/index.jpg","modified":1,"renderable":0},{"_id":"source/img/head.jpg","path":"img/head.jpg","modified":1,"renderable":0},{"_id":"source/img/icon.png","path":"img/icon.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/manifest.json","hash":"91bfe9b0570bf34df2f7761af7d6afce0759d119","modified":1655821581747},{"_id":"source/_posts/001_hexo.md","hash":"26bcc91af97f0fe2b0420cec95391959547644af","modified":1655821581691},{"_id":"source/_posts/002_unityRpg.md","hash":"fb17751ca90df4dde5573165de5ba9685667c442","modified":1655821581703},{"_id":"source/_posts/003_Inventory.md","hash":"37b34906a5152be64ded2f97ad0d8f76250bb7b6","modified":1655821581704},{"_id":"source/_posts/004_Dialog.md","hash":"8153f503e3c7b37ba7d270b8494ad47fe40c37c3","modified":1655821581706},{"_id":"source/categories/index.md","hash":"7dd0a1729da7f246a294191cce21e30f1211cf23","modified":1655821581716},{"_id":"source/img/001.svg","hash":"278ace714700f9c627a8ad14af94e8351867c5ce","modified":1655821581716},{"_id":"source/img/default.jpg","hash":"af65ad5916a8b24f21a310ad6e69acf209dd84ae","modified":1655821581736},{"_id":"source/img/head.jpg","hash":"7a14fd517484a46f5507a2850e427ebee546fe74","modified":1655821581737},{"_id":"source/tags/index.md","hash":"f9a6f9d6cb23181e21fdd866b0da49d6a04bd1bf","modified":1655821581748},{"_id":"source/img/icon.png","hash":"ab67fc3eaa4eec233fadb7d2071119b5e9027538","modified":1655821581738},{"_id":"source/about/index.md","hash":"53caad53edc36cabde4bacd23b98715bf7ce3db1","modified":1655821581715},{"_id":"source/_posts/001_hexo/image-20210123190241565.png","hash":"d152093d011c35605560189dd13441024aefe7f2","modified":1655792836000},{"_id":"source/_posts/001_hexo/image-20210123190247657.png","hash":"d152093d011c35605560189dd13441024aefe7f2","modified":1655792836000},{"_id":"source/_posts/001_hexo/image-20210123190444101.png","hash":"d152093d011c35605560189dd13441024aefe7f2","modified":1655792836000},{"_id":"source/_posts/001_hexo/image-20210123203426310.png","hash":"44bc362bfd9cf9983b487054292930a67ec909a5","modified":1655792836000},{"_id":"source/_posts/001_hexo/image-20220110162645465.png","hash":"cdd9130531a1f1ddcf5a0bc793b15bfe43a55cb8","modified":1655792836000},{"_id":"source/_posts/001_hexo/image-20220110162452660.png","hash":"91216f13985eeca8c6a5a6d43498c948a85176a1","modified":1655792836000},{"_id":"source/_posts/001_hexo/image-20220110164357577.png","hash":"e76e6099266c562f7ae6d201bf5c5e71fa9560c9","modified":1655792836000},{"_id":"source/_posts/001_hexo/image-20220110165134907.png","hash":"63dae7b6443d460c4549e96ab60b738dace807a3","modified":1655792836000},{"_id":"source/_posts/001_hexo/image-20220110165549516.png","hash":"01e3fab92d67c84b9f5c88a89fd344257255c849","modified":1655792836000},{"_id":"source/_posts/001_hexo/image-20220111114426389.png","hash":"ae315e8d5e0e6ffc8a9f326591218d6c5bbe9197","modified":1655792836000},{"_id":"source/_posts/001_hexo/image-20220111112820182.png","hash":"e26b9dc3e9abda5cd2e0f652eb4dad38d064486b","modified":1655792836000},{"_id":"source/_posts/001_hexo/image-20220111114517951.png","hash":"627d433e6626318114d5b1ccc129d950f3e41db4","modified":1655792836000},{"_id":"source/_posts/001_hexo/image-20220111115043380.png","hash":"030dde867c45888793d3e88ebecd33016e02c2b8","modified":1655792836000},{"_id":"source/_posts/003_Inventory/image-20220603143654206.png","hash":"5df177108a0c1465a66daddf005ed477b577098f","modified":1655792928000},{"_id":"source/img/003.png","hash":"892057214119497402b8b48529fc968bc3ff85b8","modified":1655821581723},{"_id":"source/img/Unity.jpg","hash":"b711c84b83e19360542fe215fd877ffb87cd3eea","modified":1655821581735},{"_id":"source/img/002.png","hash":"83720acfe094da089d24348cb7886a2fe86760ea","modified":1655821581721},{"_id":"source/_posts/004_Dialog/image-20220604181812326.png","hash":"52ea7be6317c960b254284cf21c247acd3a032c4","modified":1655792928000},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1655821581751},{"_id":"themes/butterfly/README.md","hash":"d83c496aadb40f5bf9c67bdeba527353409bc559","modified":1655821581751},{"_id":"themes/butterfly/_config.yml","hash":"a06c8a50a49d14c8b53187239f4813a1463c6c64","modified":1655821581752},{"_id":"themes/butterfly/README_CN.md","hash":"fafeccf7b611e8d16d524d27558d942cc9fe0c2f","modified":1655821581752},{"_id":"themes/butterfly/package.json","hash":"f5f4bb2afaea72ba3b8843924750fb480a29619a","modified":1655821581793},{"_id":"themes/butterfly/.github/stale.yml","hash":"79b830939587a5c029b20db6615ba73907d60bb4","modified":1655821581750},{"_id":"themes/butterfly/languages/default.yml","hash":"335731ef259a3cec2499a2d5b050025ff4bdc608","modified":1655821581753},{"_id":"themes/butterfly/languages/en.yml","hash":"a96ab1bbe74e99ca2e4d67da9d83f442eb9b73af","modified":1655821581753},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"4adf079fb0170e3a8de6ddbb0392d6d1120030c4","modified":1655821581753},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"dcb10d62249bb149af8ad78db3ee6e342c6d6be7","modified":1655821581754},{"_id":"themes/butterfly/layout/archive.pug","hash":"2d5bf4b1755f89898c579c18d601be83d2bc8ebd","modified":1655821581755},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1655821581755},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1655821581792},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1655821581792},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1655821581792},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1655821581793},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"e1043b8f149371d5a4ab0f1306eabc2988bed071","modified":1655821581749},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1655821581749},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1655821581750},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1655821581750},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1655821581796},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"6c3b7d0874fa499800a4fd49894c481b05ec750c","modified":1655821581796},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1655821581794},{"_id":"themes/butterfly/scripts/events/config.js","hash":"8c3fa850933e4165c3354dea7b82d6f738bd7186","modified":1655821581794},{"_id":"themes/butterfly/scripts/events/init.js","hash":"b3e05e3440b078f57391c113d6b0c8ecff112720","modified":1655821581794},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1655821581795},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"b92cc4648cfe5fb28c58943727823d1178b73a4a","modified":1655821581795},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1655821581796},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1655821581797},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"c445140fa16f19bf5fb617fa735504e7799d4d42","modified":1655821581797},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"384de3c04809ec5fa996e8aa0628f770cd4bff3e","modified":1655821581798},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"83bfb16ab8d440be04e1b1f889f6affa7ad65a67","modified":1655821581798},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1655821581798},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1655821581799},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"6d4cd2393945a9316339351cab588265f5c18d73","modified":1655821581799},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1655821581799},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1655821581800},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1655821581801},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1655821581800},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"420ba8b11e7316b4c09eb301d39814bc9bae9f90","modified":1655821581801},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1655821581802},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1655821581801},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1655821581756},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"ddea99847fd41323f183cd0c9dae3174c586f5b3","modified":1655821581756},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1655821581756},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"343f3cb328eb27ef04c0a4bf7fab44b1be76100a","modified":1655821581757},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"4473ba26e06a782e91ed181d0ceb83f8745aad1f","modified":1655821581763},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"bb1847f45e713cc88b1c0a97035ec01f0209c995","modified":1655821581766},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"205562ec188bfba5686c51af77486550d0927df5","modified":1655821581767},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1655821581820},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"4f41fc46410e1e3018ff87e1d1a5c28be7258119","modified":1655821581767},{"_id":"themes/butterfly/source/css/var.styl","hash":"584ef7b18d5e677eb2e62f9b139097d3b714a993","modified":1655821581821},{"_id":"themes/butterfly/source/img/404.jpg","hash":"9d92d50e9a7cd6f6e364364cbd61dc02d9962634","modified":1655821581821},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1655821581822},{"_id":"themes/butterfly/source/js/main.js","hash":"a2c1c55b5b8ec9a83cf6242ebc9ea9be95e1f0c1","modified":1655821581824},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"55a4efc7431d82bf68f6f6ebb162201e8a701833","modified":1655821581823},{"_id":"themes/butterfly/source/js/utils.js","hash":"fdb9e5b38f076953a2431b8f682388b030694b55","modified":1655821581826},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"4db1170be7a9360e2c5399d281b979da730df2a3","modified":1655821581825},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"07380718ed3af19a7e64b30e8c13726fe5983947","modified":1655821581757},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c1e45d4d0bd905ddcd2282de4fe89be92e67847d","modified":1655821581757},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1655821581758},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1655821581759},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"8a3f9e674b44e6a92d4df22baca65d9d30007dc3","modified":1655821581758},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1655821581758},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fc3e67e5ae4774d9e89964ba96beed28f34ee8f0","modified":1655821581759},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1655821581760},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1655821581760},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"dd8e6813976be64e80eba6562b54e74527ab306d","modified":1655821581763},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"2e1ab0c2ca59a1ff5a5ba9b6ef60f3e34af5430c","modified":1655821581763},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"3a2797d2744607ba6cdb5a02853851957c0f7e29","modified":1655821581761},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1655821581761},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"c65291a389a71fe4d903b44ca3083f8f4cb88655","modified":1655821581762},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"a9e56b1c41bf327859b0a7bcb8e72b458bd851b2","modified":1655821581761},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1655821581765},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1655821581762},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"e2eba0fcb8332cb333b2aff9c76664e40e2e1974","modified":1655821581765},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1655821581765},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"8f43fdeaf8cff4a35bab74b48c963786ca015620","modified":1655821581765},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"971038debf539333b1687b4a1d87cf4fc965a846","modified":1655821581764},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"9c8e65939d048a579ea08d063c0f98550376f536","modified":1655821581764},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1655821581766},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1655821581768},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1655821581767},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1655821581778},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1655821581783},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"78fea853d0ffbcb49df3aa454701476dbc8aec71","modified":1655821581783},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"7b5fea9e1c113cab4c75f9d31d8efebe70d82e7a","modified":1655821581786},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1655821581784},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1655821581787},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1655821581788},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1655821581788},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1655821581788},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"08641633d38903351a7424baf9893d9038ba057d","modified":1655821581788},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1655821581789},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"c02b1779bd0ebca6749f195be096b6ca574bfa29","modified":1655821581789},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1655821581790},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"9755cac8424dc578e9ec07dbcaa429fddbedd392","modified":1655821581790},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1655821581791},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"471b20e71a19db1f5115727082e5188200c49383","modified":1655821581790},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"62adef7998fb9bebc5891a49472cfea944a1bf7a","modified":1655821581791},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f562648de515abc873609bfe9b9f799c8cf42b72","modified":1655821581802},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"5e0e9e9b2cd3c256d52423e2278e790aa387a53a","modified":1655821581791},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"b9d7d23dc8810542b8c8ffcbfbd3694318debcc6","modified":1655821581803},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"a2aa5caf338ff5323b6ff0601ebcc09e710d8398","modified":1655821581804},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"b224bed22ce063d0d74e1f135812e16fdba87bca","modified":1655821581807},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1655821581806},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f27ad7b5d781c98bcac5c12c2d70b69b830e0374","modified":1655821581807},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1655821581807},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"e931ef81754a7b9d999fa23d134c620e68e75491","modified":1655821581808},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"f3aac52defb3497079a313e8c63ac2f7ee24dfbe","modified":1655821581808},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"844858ae87c7278996ce484c6b456db354c48764","modified":1655821581808},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1655821581809},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"9f880a6fa91784a4d3e9ffb0d4607e8a74d4d929","modified":1655821581809},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1655821581810},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1655821581810},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1655821581811},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"1c1c585ba99cb4004956b5e98fc044260b456f99","modified":1655821581810},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"e02b52bdd337c0ed3c9d3a507d1011403c38881d","modified":1655821581811},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"0bcd07ffbd2a86a1b24eaefabd7e278034b14ee2","modified":1655821581811},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1655821581812},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"1fed25162d7204480e9bcf476b3246e1717107ca","modified":1655821581812},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"d72218cb5a6bfe048ae1c92009bd815a08a53d3a","modified":1655821581813},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1655821581813},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1655821581814},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"a714776e3d585369f2285b6bb4e1564539c58d8b","modified":1655821581813},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"c42b872df237726483d93d6124b8751d4f64cf86","modified":1655821581814},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"d1398399eb7f1cc004fbcefa18f56188cc8fec8c","modified":1655821581815},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"45792c13c7c439d412b7dc597d74d24f3b598406","modified":1655821581816},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1655821581814},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1655821581816},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"cced94e70b4b90130cfa215582be2adbf883efba","modified":1655821581815},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1655821581817},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"076cd87805207c9b5612ec9771f6994287f4c169","modified":1655821581818},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"84c42716e833d2d1dd47195ea996803ffa0e58ec","modified":1655821581816},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1655821581817},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1655821581817},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1655821581818},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1655821581819},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1655821581819},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"6e20ab5f90a0dd6eb6fdca58e69961bd2f16a632","modified":1655821581824},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1655821581820},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"f72e002d56903a49c36174e77e42f88b8af8bd44","modified":1655821581825},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1655821581768},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"a18415004d03c0a1783eccac522fbcb6ce0ea1f1","modified":1655821581769},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4eebb2d94ca75809ef0cf32d70f13e9bf1e87091","modified":1655821581768},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"da9075d781baad00b647b52b0fe2018e3a602cd3","modified":1655821581769},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"38b85d216d9377ddbaa2e5867e2f03805227237c","modified":1655821581769},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1655821581770},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"6e5ccc9ea4346c71ad4cbf1e9f1cb83bb45e6f27","modified":1655821581770},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1655821581771},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"bb467bb22f3d0775b33f9eacbfc086ecb7831e78","modified":1655821581772},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1655821581771},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1655821581771},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"d5f81fd5443a1b09efb165b5f4447a35949d14ad","modified":1655821581773},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1655821581772},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"5f921c64073f73ae1f2d80969f4d3905d91396ce","modified":1655821581773},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"414f876d28f8497d6d551363a89c5c69bf1533eb","modified":1655821581775},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"a222477bddba3c646ee9b8560442c2cb204adb11","modified":1655821581774},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"3df2f59c9552a1f2e6f0d50c4ae97e72c5392b59","modified":1655821581774},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"319463fc8ff993b798f2293b659b522ad7770cf0","modified":1655821581774},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"810e8ca2669433f649329859922aabbb30d76178","modified":1655821581776},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1655821581776},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"132c94a653232b8a43dfecac057f56e6f39ed27e","modified":1655821581777},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"d48d59ebf8c0142fb3c4592a0d35874f85e6fd4c","modified":1655821581777},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1655821581777},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"e45152e4ebc3fb2462916be93f98d18f0574f2d3","modified":1655821581778},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cd1ce86441dc508e4c3dbf8b829046455ba8a6b4","modified":1655821581780},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b2ede1f6b41026ebd233ac076a405889a6eec76b","modified":1655821581781},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"16cf05cf9649322da57e9b8d316573bb65f8d8d8","modified":1655821581781},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"91a72e94743befa21a7b1c557fbb3751efb87ab0","modified":1655821581782},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"33368c0b80e4c4e78f3c7ee9bec0fed70ad838ca","modified":1655821581782},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"63ef0b2a75cf26a94c5bcd885f3a1c144451b852","modified":1655821581783},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"fdb544b0e0198faeec6a2ac239036c972446287e","modified":1655821581779},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"056756e43908519039b8bbd7a90f8c49d561eb52","modified":1655821581779},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1655821581779},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"297d34d83e7bff8ec3b8bc19bb0f4d901c35fe5a","modified":1655821581780},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"af5d3d87b736598dafcf5871863596592cacdfe1","modified":1655821581784},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1655821581785},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1655821581784},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3b5ef84744a1a8fec5a63554079008040d96f924","modified":1655821581785},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1655821581785},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1655821581786},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1655821581804},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"b45fc15c3ae7db3a0fbce0d6da74a72a95ca8a2b","modified":1655821581786},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1655821581805},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1655821581805},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1655821581806},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1655821581805},{"_id":"source/img/index.jpg","hash":"c1c2414f6eadb1793ca03e38285158978e93bc06","modified":1655821581747},{"_id":"source/img/004.png","hash":"10130759ca25daac3892b8c48f9207d0d70cf127","modified":1655821581730},{"_id":"public/manifest.json","hash":"6b3a91b1dd4fd47cf1064624cff998ad9fd7ce96","modified":1655821804882},{"_id":"public/baidusitemap.xml","hash":"bf9e0a0ee35841b27b92e4faa5921a6ec6486014","modified":1655821804882},{"_id":"public/sitemap.xml","hash":"3dcaaade066e05c22c67818a68beaef99aa933b6","modified":1655821804882},{"_id":"public/about/index.html","hash":"3801bce178df3b4a1e67cd78b12a2a70971e1f35","modified":1655821804882},{"_id":"public/categories/index.html","hash":"2d5f9d7404c7e0b4342fde25494628adf49bb1c1","modified":1655821804882},{"_id":"public/tags/index.html","hash":"8d72799c919442390b3bec4d3d1265fd6660d713","modified":1655821804882},{"_id":"public/2022/05/31/003_Inventory/index.html","hash":"0f5197e8539ad7b62820310aed864e49951d56d4","modified":1655821804882},{"_id":"public/2022/06/04/004_Dialog/index.html","hash":"12dbe018b0acee42c79deaf23908209e633de15b","modified":1655821804882},{"_id":"public/2022/05/10/002_unityRpg/index.html","hash":"16df21896ca3a9255262c1da2c1ed8a01878026a","modified":1655821804882},{"_id":"public/2022/01/10/001_hexo/index.html","hash":"10cf7ad2edb3a747a13effe4c1b80b6776bf397d","modified":1655821804882},{"_id":"public/archives/index.html","hash":"1f25ffc91f44dff3b9a19457ce7db7f6a106164e","modified":1655821804882},{"_id":"public/archives/2022/index.html","hash":"a113a4acb0ec6269bd69f56adbb789e69371990a","modified":1655821804882},{"_id":"public/archives/2022/05/index.html","hash":"12935b42a5bb407c125bd3c231e96f7ec7c6a034","modified":1655821804882},{"_id":"public/archives/2022/01/index.html","hash":"8e1e72c86d182e56d18a61d106d69d623ac2eb6a","modified":1655821804882},{"_id":"public/archives/2022/06/index.html","hash":"e95c03d211ed74470618181966e5a423b8773f6a","modified":1655821804882},{"_id":"public/categories/Hexo/index.html","hash":"8a3c08b3de8d20ec367959c70eb6aa5b57e83540","modified":1655821804882},{"_id":"public/index.html","hash":"1da57cdc88439da4a10b0c4ce7d2feb8057dcd59","modified":1655821804882},{"_id":"public/categories/Unity/index.html","hash":"bda20119a82fb501431299c0d6e066207e16ab93","modified":1655821804882},{"_id":"public/tags/Games/index.html","hash":"7545eefaa244b2f01656977f37d1cd0c590762fd","modified":1655821804882},{"_id":"public/tags/游戏制作/index.html","hash":"2550e61838d99e4cddac8ba8ba7e7ad937ab23ac","modified":1655821804882},{"_id":"public/tags/M-studio/index.html","hash":"c848746978465bee59b8ccd8fd6ac1d1f6b2da22","modified":1655821804882},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1655821804882},{"_id":"public/img/001.svg","hash":"278ace714700f9c627a8ad14af94e8351867c5ce","modified":1655821804882},{"_id":"public/img/friend_404.gif","hash":"55a4efc7431d82bf68f6f6ebb162201e8a701833","modified":1655821804882},{"_id":"public/img/404.jpg","hash":"9d92d50e9a7cd6f6e364364cbd61dc02d9962634","modified":1655821804882},{"_id":"public/img/default.jpg","hash":"af65ad5916a8b24f21a310ad6e69acf209dd84ae","modified":1655821804882},{"_id":"public/img/icon.png","hash":"ab67fc3eaa4eec233fadb7d2071119b5e9027538","modified":1655821804882},{"_id":"public/img/head.jpg","hash":"7a14fd517484a46f5507a2850e427ebee546fe74","modified":1655821804882},{"_id":"public/2022/01/10/001_hexo/image-20210123190241565.png","hash":"d152093d011c35605560189dd13441024aefe7f2","modified":1655821804882},{"_id":"public/2022/01/10/001_hexo/image-20210123190247657.png","hash":"d152093d011c35605560189dd13441024aefe7f2","modified":1655821804882},{"_id":"public/2022/01/10/001_hexo/image-20210123190444101.png","hash":"d152093d011c35605560189dd13441024aefe7f2","modified":1655821804882},{"_id":"public/2022/01/10/001_hexo/image-20210123203426310.png","hash":"44bc362bfd9cf9983b487054292930a67ec909a5","modified":1655821804882},{"_id":"public/2022/01/10/001_hexo/image-20220110162452660.png","hash":"91216f13985eeca8c6a5a6d43498c948a85176a1","modified":1655821804882},{"_id":"public/2022/01/10/001_hexo/image-20220110162645465.png","hash":"cdd9130531a1f1ddcf5a0bc793b15bfe43a55cb8","modified":1655821804882},{"_id":"public/2022/01/10/001_hexo/image-20220110164357577.png","hash":"e76e6099266c562f7ae6d201bf5c5e71fa9560c9","modified":1655821804882},{"_id":"public/2022/01/10/001_hexo/image-20220110165134907.png","hash":"63dae7b6443d460c4549e96ab60b738dace807a3","modified":1655821804882},{"_id":"public/2022/01/10/001_hexo/image-20220110165549516.png","hash":"01e3fab92d67c84b9f5c88a89fd344257255c849","modified":1655821804882},{"_id":"public/2022/01/10/001_hexo/image-20220111114426389.png","hash":"ae315e8d5e0e6ffc8a9f326591218d6c5bbe9197","modified":1655821804882},{"_id":"public/2022/01/10/001_hexo/image-20220111112820182.png","hash":"e26b9dc3e9abda5cd2e0f652eb4dad38d064486b","modified":1655821804882},{"_id":"public/2022/01/10/001_hexo/image-20220111114517951.png","hash":"627d433e6626318114d5b1ccc129d950f3e41db4","modified":1655821804882},{"_id":"public/2022/05/31/003_Inventory/image-20220603143654206.png","hash":"5df177108a0c1465a66daddf005ed477b577098f","modified":1655821804882},{"_id":"public/2022/01/10/001_hexo/image-20220111115043380.png","hash":"030dde867c45888793d3e88ebecd33016e02c2b8","modified":1655821804882},{"_id":"public/img/003.png","hash":"892057214119497402b8b48529fc968bc3ff85b8","modified":1655821804882},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1655821804882},{"_id":"public/js/search/algolia.js","hash":"ce8131b712dca80f289015aef75f86e727f62981","modified":1655821804882},{"_id":"public/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1655821804882},{"_id":"public/js/search/local-search.js","hash":"3071a4208fdf89ad7e0031536dd6ffa7bc951e4d","modified":1655821804882},{"_id":"public/css/index.css","hash":"7dffbf8c69c652d7911ef0f0f9773d93f021b739","modified":1655821804882},{"_id":"public/js/main.js","hash":"04efcbd28b37875cfec88eb87cab7256a9ebb327","modified":1655821804882},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1655821804882},{"_id":"public/img/Unity.jpg","hash":"b711c84b83e19360542fe215fd877ffb87cd3eea","modified":1655821804882},{"_id":"public/img/002.png","hash":"83720acfe094da089d24348cb7886a2fe86760ea","modified":1655821804882},{"_id":"public/2022/06/04/004_Dialog/image-20220604181812326.png","hash":"52ea7be6317c960b254284cf21c247acd3a032c4","modified":1655821804882},{"_id":"public/img/index.jpg","hash":"c1c2414f6eadb1793ca03e38285158978e93bc06","modified":1655821804882},{"_id":"public/img/004.png","hash":"10130759ca25daac3892b8c48f9207d0d70cf127","modified":1655821804882}],"Category":[{"name":"Hexo","_id":"cl4o9jzie0006isv9bo5633n3"},{"name":"Unity","_id":"cl4o9jzil000aisv97ytucirq"}],"Data":[],"Page":[{"title":"about","date":"2022-01-06T12:12:50.000Z","_content":"\n### Thanks Hello World\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-01-06 20:12:50\n---\n\n### Thanks Hello World\n","updated":"2022-06-21T14:26:21.715Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl4o9jzhv0000isv9abqm09um","content":"<h3 id=\"Thanks-Hello-World\"><a href=\"#Thanks-Hello-World\" class=\"headerlink\" title=\"Thanks Hello World\"></a>Thanks Hello World</h3>","site":{"data":{}},"cover":"/img/index.jpg","excerpt":"","more":"<h3 id=\"Thanks-Hello-World\"><a href=\"#Thanks-Hello-World\" class=\"headerlink\" title=\"Thanks Hello World\"></a>Thanks Hello World</h3>"},{"title":"categories","date":"2022-01-20T04:09:30.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-01-20 12:09:30\ntype: \"categories\"\n---\n","updated":"2022-06-21T14:26:21.716Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cl4o9jzi00001isv9aylc918h","content":"","site":{"data":{}},"cover":"/img/index.jpg","excerpt":"","more":""},{"_content":"{\n    \"dir\": \"ltr\",\n    \"lang\": \"en\",\n    \"name\": \"XLJZT\",\n    \"short_name\": \"XLJZT\",\n    \"scope\": \"/\",\n    \"display\": \"fullscreen\",\n    \"start_url\": \"https://xljzt.github.io/\",\n    \"background_color\": \"transparent\",\n    \"theme_color\": \"transparent\",\n    \"description\": \"\",\n    \"orientation\": \"any\",\n    \"related_applications\": [],\n    \"prefer_related_applications\": false,\n    \"icons\": [],\n    \"url\": \"https://xljzt.github.io/\",\n    \"screenshots\": []\n}","source":"manifest.json","raw":"{\n    \"dir\": \"ltr\",\n    \"lang\": \"en\",\n    \"name\": \"XLJZT\",\n    \"short_name\": \"XLJZT\",\n    \"scope\": \"/\",\n    \"display\": \"fullscreen\",\n    \"start_url\": \"https://xljzt.github.io/\",\n    \"background_color\": \"transparent\",\n    \"theme_color\": \"transparent\",\n    \"description\": \"\",\n    \"orientation\": \"any\",\n    \"related_applications\": [],\n    \"prefer_related_applications\": false,\n    \"icons\": [],\n    \"url\": \"https://xljzt.github.io/\",\n    \"screenshots\": []\n}","date":"2022-06-21T14:26:21.747Z","updated":"2022-06-21T14:26:21.747Z","path":"manifest.json","layout":"false","title":"","comments":1,"_id":"cl4o9jzi20002isv9h6o8duic","content":"{\"dir\":\"ltr\",\"lang\":\"en\",\"name\":\"XLJZT\",\"short_name\":\"XLJZT\",\"scope\":\"/\",\"display\":\"fullscreen\",\"start_url\":\"https://xljzt.github.io/\",\"background_color\":\"transparent\",\"theme_color\":\"transparent\",\"description\":\"\",\"orientation\":\"any\",\"related_applications\":[],\"prefer_related_applications\":false,\"icons\":[],\"url\":\"https://xljzt.github.io/\",\"screenshots\":[]}","site":{"data":{}},"cover":"/img/index.jpg","excerpt":"","more":"{\"dir\":\"ltr\",\"lang\":\"en\",\"name\":\"XLJZT\",\"short_name\":\"XLJZT\",\"scope\":\"/\",\"display\":\"fullscreen\",\"start_url\":\"https://xljzt.github.io/\",\"background_color\":\"transparent\",\"theme_color\":\"transparent\",\"description\":\"\",\"orientation\":\"any\",\"related_applications\":[],\"prefer_related_applications\":false,\"icons\":[],\"url\":\"https://xljzt.github.io/\",\"screenshots\":[]}"},{"title":"标签","date":"2022-02-06T05:21:46.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2022-02-06 13:21:46\ntype: \"tags\"\n---\n","updated":"2022-06-21T14:26:21.748Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cl4o9jzib0004isv94bgd7rim","content":"","site":{"data":{}},"cover":"/img/index.jpg","excerpt":"","more":""}],"Post":[{"title":"记录一下安装hexo的过程","date":"2022-01-09T16:00:00.000Z","top_image":"/img/001.svg","cover":"/img/001.svg","_content":"\n\n\n### 记录一下安装hexo的过程\n\n（防止以后遗忘 不知道咋弄）\n\n#### 安装hexo\n\n首先安装好git 和 node js\n\n```\n$ npm install -g hexo-cli\nor\n$ npm install hexo\n```\n\n完成之后用 **`hexo -v`** 查看版本\n\n接下来初始化 `hexo`\n\n```\n$ hexo init 文件名\n$ cd 文件名\n$ npm install\n```\n\n新建完成之后会有如下文件夹\n\n![image-20220110162452660](image-20220110162452660.png)\n\n```\n$ hexo g\n$ hexo s\n```\n\n之后便可以进入到初始博客\n\n![image-20220110162645465](image-20220110162645465.png)\n\n#### GitHub或Gitee 创建新库\n\nTIP: 在GitHub上注册的仓库名为  `相同的用户名.github.io`\n\n​\t\tGitee上为`相同的用户名`\n\n\n\n#### 将hexo部署到GitHub或Gitee上\n\n先安装deploy-git\n\n```\n$ npm install hexo-deployer-git --save\n```\n\n在**`_config.yml`**文件中最后修改\n\n```yaml\ndeploy:\n- type: 'git'\n  repo: https://github.com/username/username.github.io.git\n  branch: blog\n- type: 'git'\n  repo: https://gitee.com/username/username.git\n  branch: blog\n```\n\n然后执行命令\n\n```\n$ hexo clean\n$ hexo g\n$ hexo d\n```\n\n其中 `hexo clean`清除了你之前生成的东西，也可以不加。\n`hexo generate` 顾名思义，生成静态文章，可以用 `hexo g`缩写\n`hexo deploy` 部署文章，可以用`hexo d`缩写\n\n部署结束\n\n#### 修改主题\n\n我选择的是 [Hexo Theme Cupertino](https://github.com/MrWillCom/hexo-theme-cupertino)\n\n![image-20220110164357577](image-20220110164357577.png)\n\n完全符合我的审美\n\n进入主题文件\n\n```\n$ cd themes\n$ git clone https://github.com/MrWillCom/hexo-theme-cupertino.git\n```\n\n修改全局配置文件 `_config.yml`\n\n```yaml\ntheme: hexo-theme-cupertino\n```\n\n修改原作者的链接\n\n![image-20220110165134907](image-20220110165134907.png)\n\n`添加浏览器图标png放到 文件名/source 下`\n\n修改全局配置文件\n\n```yaml\nsubtitle:''\ndescription:''\n```\n\n这是现实在主页的两行字体 作者源码解释在此\n\n![image-20220110165549516](image-20220110165549516.png)\n\n至此主题部分配置已结束\n\n#### 关于图片插入的问题\n\n我看到一个插件非常中意 但是安装的时候出现问题就一直没能装上\n\n**[hexo-easy-images](https://github.com/boboidream/hexo-easy-images#hexo-easy-images)**\n\n然后对比使用了**[hexo-filter-image](https://github.com/JoeyBling/hexo-filter-image)** 和 **[hexo-asset-image](https://github.com/xcodebuild/hexo-asset-image)** 之后我选择了使用后者\n\n接下来是我的使用方案\n\n#### 安装  **[hexo-asset-image](https://github.com/xcodebuild/hexo-asset-image)**\n\n```\nnpm install hexo-asset-image --save\n```\n\n源文件`/node_modules/hexo-asset-image/index.js`里的代码有错误 需要进行修改为以下代码\n\n```js\n'use strict';\nvar cheerio = require('cheerio');\n\n// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string\nfunction getPosition(str, m, i) {\n  return str.split(m, i).join(m).length;\n}\n\nvar version = String(hexo.version).split('.');\nhexo.extend.filter.register('after_post_render', function(data){\n  var config = hexo.config;\n  if(config.post_asset_folder){\n        var link = data.permalink;\n    if(version.length > 0 && Number(version[0]) == 3)\n       var beginPos = getPosition(link, '/', 1) + 1;\n    else\n       var beginPos = getPosition(link, '/', 3) + 1;\n    // In hexo 3.1.1, the permalink of \"about\" page is like \".../about/index.html\".\n    var endPos = link.lastIndexOf('/') + 1;\n    link = link.substring(beginPos, endPos);\n\n    var toprocess = ['excerpt', 'more', 'content'];\n    for(var i = 0; i < toprocess.length; i++){\n      var key = toprocess[i];\n \n      var $ = cheerio.load(data[key], {\n        ignoreWhitespace: false,\n        xmlMode: false,\n        lowerCaseTags: false,\n        decodeEntities: false\n      });\n\n      $('img').each(function(){\n        if ($(this).attr('src')){\n            // For windows style path, we replace '\\' to '/'.\n            var src = $(this).attr('src').replace('\\\\', '/');\n            if(!/http[s]*.*|\\/\\/.*/.test(src) &&\n               !/^\\s*\\//.test(src)) {\n              // For \"about\" page, the first part of \"src\" can't be removed.\n              // In addition, to support multi-level local directory.\n              var linkArray = link.split('/').filter(function(elem){\n                return elem != '';\n              });\n              var srcArray = src.split('/').filter(function(elem){\n                return elem != '' && elem != '.';\n              });\n              if(srcArray.length > 1)\n                srcArray.shift();\n              src = srcArray.join('/');\n              $(this).attr('src', config.root + link + src);\n              console.info&&console.info(\"update link as:-->\"+config.root + link + src);\n            }\n        }else{\n            console.info&&console.info(\"no src attr, skipped...\");\n            console.info&&console.info($(this));\n        }\n      });\n      data[key] = $.html();\n    }\n  }\n});\n```\n\n\n\n#### 食用方法\n\n在写markdown文件时设置好图像的问题，我用的是typora更改图片设置如下图\n\n![image-20220111114426389](image-20220111114426389.png)\n\n这样就会将图片和文件放到一个文件夹下\n\n![image-20220111114517951](image-20220111114517951.png)\n\n然后使用命令\n\n```yaml\nhexo new 记录一下安装hexo的过程\n```\n\n或者手动在  `文件/source/_post/ `下创建相同名字的文件\n\n然后将写好的markdown文件的图片放入文件夹里 将md文件放到外面\n\n![image-20220111115043380](image-20220111115043380.png)\n\n本人建议直接将编辑好的markdown文件夹复制到 `文件/source/_post/ ` 然后将`.md`文件给拉到和文件夹同一层级，形成上图的层级格式 \n\n#### TIP\n\n> 文件夹里只有图片\n\n#### 修改url\n\n`_Config.yml`\n\n```yaml\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\n\n#修改url是因为github不加载css和js\nurl: https://username.github.io\nroot: /\n\n```\n\n> 记得上传源文件到GitHub或Gitee上\n>\n> 将themes的主题里的`.git`删掉 因为github不能嵌套上传\n>\n> 建议将page放入一个分支 源码放入一个分支\n\n\n\n \n\n**如果我的看不懂可以建议看一下[这个链接](https://blog.csdn.net/sinat_37781304/article/details/82729029) 我做的时候学习的这个作者才做出来的给了我不少启发**\n\n第一篇文章到此结束！！！🥳🥳🥳\n\n\n\n# 2022.5.13 Update\n\n选择了新的主题，主题相较于之前的更加丰富，并且从github page迁移到了vercel\n","source":"_posts/001_hexo.md","raw":"---\ntitle: 记录一下安装hexo的过程\ndate: 2022-1-10\ntop_image: /img/001.svg\ncover: /img/001.svg\ncategories: Hexo\n---\n\n\n\n### 记录一下安装hexo的过程\n\n（防止以后遗忘 不知道咋弄）\n\n#### 安装hexo\n\n首先安装好git 和 node js\n\n```\n$ npm install -g hexo-cli\nor\n$ npm install hexo\n```\n\n完成之后用 **`hexo -v`** 查看版本\n\n接下来初始化 `hexo`\n\n```\n$ hexo init 文件名\n$ cd 文件名\n$ npm install\n```\n\n新建完成之后会有如下文件夹\n\n![image-20220110162452660](image-20220110162452660.png)\n\n```\n$ hexo g\n$ hexo s\n```\n\n之后便可以进入到初始博客\n\n![image-20220110162645465](image-20220110162645465.png)\n\n#### GitHub或Gitee 创建新库\n\nTIP: 在GitHub上注册的仓库名为  `相同的用户名.github.io`\n\n​\t\tGitee上为`相同的用户名`\n\n\n\n#### 将hexo部署到GitHub或Gitee上\n\n先安装deploy-git\n\n```\n$ npm install hexo-deployer-git --save\n```\n\n在**`_config.yml`**文件中最后修改\n\n```yaml\ndeploy:\n- type: 'git'\n  repo: https://github.com/username/username.github.io.git\n  branch: blog\n- type: 'git'\n  repo: https://gitee.com/username/username.git\n  branch: blog\n```\n\n然后执行命令\n\n```\n$ hexo clean\n$ hexo g\n$ hexo d\n```\n\n其中 `hexo clean`清除了你之前生成的东西，也可以不加。\n`hexo generate` 顾名思义，生成静态文章，可以用 `hexo g`缩写\n`hexo deploy` 部署文章，可以用`hexo d`缩写\n\n部署结束\n\n#### 修改主题\n\n我选择的是 [Hexo Theme Cupertino](https://github.com/MrWillCom/hexo-theme-cupertino)\n\n![image-20220110164357577](image-20220110164357577.png)\n\n完全符合我的审美\n\n进入主题文件\n\n```\n$ cd themes\n$ git clone https://github.com/MrWillCom/hexo-theme-cupertino.git\n```\n\n修改全局配置文件 `_config.yml`\n\n```yaml\ntheme: hexo-theme-cupertino\n```\n\n修改原作者的链接\n\n![image-20220110165134907](image-20220110165134907.png)\n\n`添加浏览器图标png放到 文件名/source 下`\n\n修改全局配置文件\n\n```yaml\nsubtitle:''\ndescription:''\n```\n\n这是现实在主页的两行字体 作者源码解释在此\n\n![image-20220110165549516](image-20220110165549516.png)\n\n至此主题部分配置已结束\n\n#### 关于图片插入的问题\n\n我看到一个插件非常中意 但是安装的时候出现问题就一直没能装上\n\n**[hexo-easy-images](https://github.com/boboidream/hexo-easy-images#hexo-easy-images)**\n\n然后对比使用了**[hexo-filter-image](https://github.com/JoeyBling/hexo-filter-image)** 和 **[hexo-asset-image](https://github.com/xcodebuild/hexo-asset-image)** 之后我选择了使用后者\n\n接下来是我的使用方案\n\n#### 安装  **[hexo-asset-image](https://github.com/xcodebuild/hexo-asset-image)**\n\n```\nnpm install hexo-asset-image --save\n```\n\n源文件`/node_modules/hexo-asset-image/index.js`里的代码有错误 需要进行修改为以下代码\n\n```js\n'use strict';\nvar cheerio = require('cheerio');\n\n// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string\nfunction getPosition(str, m, i) {\n  return str.split(m, i).join(m).length;\n}\n\nvar version = String(hexo.version).split('.');\nhexo.extend.filter.register('after_post_render', function(data){\n  var config = hexo.config;\n  if(config.post_asset_folder){\n        var link = data.permalink;\n    if(version.length > 0 && Number(version[0]) == 3)\n       var beginPos = getPosition(link, '/', 1) + 1;\n    else\n       var beginPos = getPosition(link, '/', 3) + 1;\n    // In hexo 3.1.1, the permalink of \"about\" page is like \".../about/index.html\".\n    var endPos = link.lastIndexOf('/') + 1;\n    link = link.substring(beginPos, endPos);\n\n    var toprocess = ['excerpt', 'more', 'content'];\n    for(var i = 0; i < toprocess.length; i++){\n      var key = toprocess[i];\n \n      var $ = cheerio.load(data[key], {\n        ignoreWhitespace: false,\n        xmlMode: false,\n        lowerCaseTags: false,\n        decodeEntities: false\n      });\n\n      $('img').each(function(){\n        if ($(this).attr('src')){\n            // For windows style path, we replace '\\' to '/'.\n            var src = $(this).attr('src').replace('\\\\', '/');\n            if(!/http[s]*.*|\\/\\/.*/.test(src) &&\n               !/^\\s*\\//.test(src)) {\n              // For \"about\" page, the first part of \"src\" can't be removed.\n              // In addition, to support multi-level local directory.\n              var linkArray = link.split('/').filter(function(elem){\n                return elem != '';\n              });\n              var srcArray = src.split('/').filter(function(elem){\n                return elem != '' && elem != '.';\n              });\n              if(srcArray.length > 1)\n                srcArray.shift();\n              src = srcArray.join('/');\n              $(this).attr('src', config.root + link + src);\n              console.info&&console.info(\"update link as:-->\"+config.root + link + src);\n            }\n        }else{\n            console.info&&console.info(\"no src attr, skipped...\");\n            console.info&&console.info($(this));\n        }\n      });\n      data[key] = $.html();\n    }\n  }\n});\n```\n\n\n\n#### 食用方法\n\n在写markdown文件时设置好图像的问题，我用的是typora更改图片设置如下图\n\n![image-20220111114426389](image-20220111114426389.png)\n\n这样就会将图片和文件放到一个文件夹下\n\n![image-20220111114517951](image-20220111114517951.png)\n\n然后使用命令\n\n```yaml\nhexo new 记录一下安装hexo的过程\n```\n\n或者手动在  `文件/source/_post/ `下创建相同名字的文件\n\n然后将写好的markdown文件的图片放入文件夹里 将md文件放到外面\n\n![image-20220111115043380](image-20220111115043380.png)\n\n本人建议直接将编辑好的markdown文件夹复制到 `文件/source/_post/ ` 然后将`.md`文件给拉到和文件夹同一层级，形成上图的层级格式 \n\n#### TIP\n\n> 文件夹里只有图片\n\n#### 修改url\n\n`_Config.yml`\n\n```yaml\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\n\n#修改url是因为github不加载css和js\nurl: https://username.github.io\nroot: /\n\n```\n\n> 记得上传源文件到GitHub或Gitee上\n>\n> 将themes的主题里的`.git`删掉 因为github不能嵌套上传\n>\n> 建议将page放入一个分支 源码放入一个分支\n\n\n\n \n\n**如果我的看不懂可以建议看一下[这个链接](https://blog.csdn.net/sinat_37781304/article/details/82729029) 我做的时候学习的这个作者才做出来的给了我不少启发**\n\n第一篇文章到此结束！！！🥳🥳🥳\n\n\n\n# 2022.5.13 Update\n\n选择了新的主题，主题相较于之前的更加丰富，并且从github page迁移到了vercel\n","slug":"001_hexo","published":1,"updated":"2022-06-21T14:26:21.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4o9jzi70003isv9d3rm2zck","content":"<h3 id=\"记录一下安装hexo的过程\"><a href=\"#记录一下安装hexo的过程\" class=\"headerlink\" title=\"记录一下安装hexo的过程\"></a>记录一下安装hexo的过程</h3><p>（防止以后遗忘 不知道咋弄）</p>\n<h4 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h4><p>首先安装好git 和 node js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br><span class=\"line\">or</span><br><span class=\"line\">$ npm install hexo</span><br></pre></td></tr></table></figure>\n\n<p>完成之后用 <strong><code>hexo -v</code></strong> 查看版本</p>\n<p>接下来初始化 <code>hexo</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init 文件名</span><br><span class=\"line\">$ cd 文件名</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n\n<p>新建完成之后会有如下文件夹</p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220110162452660.png\" alt=\"image-20220110162452660\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br><span class=\"line\">$ hexo s</span><br></pre></td></tr></table></figure>\n\n<p>之后便可以进入到初始博客</p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220110162645465.png\" alt=\"image-20220110162645465\"></p>\n<h4 id=\"GitHub或Gitee-创建新库\"><a href=\"#GitHub或Gitee-创建新库\" class=\"headerlink\" title=\"GitHub或Gitee 创建新库\"></a>GitHub或Gitee 创建新库</h4><p>TIP: 在GitHub上注册的仓库名为  <code>相同的用户名.github.io</code></p>\n<p>​        Gitee上为<code>相同的用户名</code></p>\n<h4 id=\"将hexo部署到GitHub或Gitee上\"><a href=\"#将hexo部署到GitHub或Gitee上\" class=\"headerlink\" title=\"将hexo部署到GitHub或Gitee上\"></a>将hexo部署到GitHub或Gitee上</h4><p>先安装deploy-git</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>在**<code>_config.yml</code>**文件中最后修改</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">&#x27;git&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/username/username.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">blog</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">&#x27;git&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://gitee.com/username/username.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">blog</span></span><br></pre></td></tr></table></figure>\n\n<p>然后执行命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br><span class=\"line\">$ hexo g</span><br><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure>\n\n<p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br><code>hexo generate</code> 顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写<br><code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写</p>\n<p>部署结束</p>\n<h4 id=\"修改主题\"><a href=\"#修改主题\" class=\"headerlink\" title=\"修改主题\"></a>修改主题</h4><p>我选择的是 <a href=\"https://github.com/MrWillCom/hexo-theme-cupertino\">Hexo Theme Cupertino</a></p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220110164357577.png\" alt=\"image-20220110164357577\"></p>\n<p>完全符合我的审美</p>\n<p>进入主题文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd themes</span><br><span class=\"line\">$ git clone https://github.com/MrWillCom/hexo-theme-cupertino.git</span><br></pre></td></tr></table></figure>\n\n<p>修改全局配置文件 <code>_config.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">hexo-theme-cupertino</span></span><br></pre></td></tr></table></figure>\n\n<p>修改原作者的链接</p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220110165134907.png\" alt=\"image-20220110165134907\"></p>\n<p><code>添加浏览器图标png放到 文件名/source 下</code></p>\n<p>修改全局配置文件</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">subtitle:&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">description:&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>这是现实在主页的两行字体 作者源码解释在此</p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220110165549516.png\" alt=\"image-20220110165549516\"></p>\n<p>至此主题部分配置已结束</p>\n<h4 id=\"关于图片插入的问题\"><a href=\"#关于图片插入的问题\" class=\"headerlink\" title=\"关于图片插入的问题\"></a>关于图片插入的问题</h4><p>我看到一个插件非常中意 但是安装的时候出现问题就一直没能装上</p>\n<p><strong><a href=\"https://github.com/boboidream/hexo-easy-images#hexo-easy-images\">hexo-easy-images</a></strong></p>\n<p>然后对比使用了**<a href=\"https://github.com/JoeyBling/hexo-filter-image\">hexo-filter-image</a>** 和 <strong><a href=\"https://github.com/xcodebuild/hexo-asset-image\">hexo-asset-image</a></strong> 之后我选择了使用后者</p>\n<p>接下来是我的使用方案</p>\n<h4 id=\"安装-hexo-asset-image\"><a href=\"#安装-hexo-asset-image\" class=\"headerlink\" title=\"安装  hexo-asset-image\"></a>安装  <strong><a href=\"https://github.com/xcodebuild/hexo-asset-image\">hexo-asset-image</a></strong></h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>\n\n<p>源文件<code>/node_modules/hexo-asset-image/index.js</code>里的代码有错误 需要进行修改为以下代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;cheerio&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getPosition</span>(<span class=\"params\">str, m, i</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.split(m, i).join(m).length;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> version = <span class=\"built_in\">String</span>(hexo.version).split(<span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">&#x27;after_post_render&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> config = hexo.config;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(config.post_asset_folder)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> link = data.permalink;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(version.length &gt; <span class=\"number\">0</span> &amp;&amp; <span class=\"built_in\">Number</span>(version[<span class=\"number\">0</span>]) == <span class=\"number\">3</span>)</span><br><span class=\"line\">       <span class=\"keyword\">var</span> beginPos = getPosition(link, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"number\">1</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">       <span class=\"keyword\">var</span> beginPos = getPosition(link, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"number\">3</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> endPos = link.lastIndexOf(<span class=\"string\">&#x27;/&#x27;</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    link = link.substring(beginPos, endPos);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> toprocess = [<span class=\"string\">&#x27;excerpt&#x27;</span>, <span class=\"string\">&#x27;more&#x27;</span>, <span class=\"string\">&#x27;content&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; toprocess.length; i++)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> key = toprocess[i];</span><br><span class=\"line\"> </span><br><span class=\"line\">      <span class=\"keyword\">var</span> $ = cheerio.load(data[key], &#123;</span><br><span class=\"line\">        <span class=\"attr\">ignoreWhitespace</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">xmlMode</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">lowerCaseTags</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">decodeEntities</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      $(<span class=\"string\">&#x27;img&#x27;</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($(<span class=\"built_in\">this</span>).attr(<span class=\"string\">&#x27;src&#x27;</span>))&#123;</span><br><span class=\"line\">            <span class=\"comment\">// For windows style path, we replace &#x27;\\&#x27; to &#x27;/&#x27;.</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> src = $(<span class=\"built_in\">this</span>).attr(<span class=\"string\">&#x27;src&#x27;</span>).replace(<span class=\"string\">&#x27;\\\\&#x27;</span>, <span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!<span class=\"regexp\">/http[s]*.*|\\/\\/.*/</span>.test(src) &amp;&amp;</span><br><span class=\"line\">               !<span class=\"regexp\">/^\\s*\\//</span>.test(src)) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class=\"line\">              <span class=\"comment\">// In addition, to support multi-level local directory.</span></span><br><span class=\"line\">              <span class=\"keyword\">var</span> linkArray = link.split(<span class=\"string\">&#x27;/&#x27;</span>).filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">elem</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> elem != <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">              <span class=\"keyword\">var</span> srcArray = src.split(<span class=\"string\">&#x27;/&#x27;</span>).filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">elem</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> elem != <span class=\"string\">&#x27;&#x27;</span> &amp;&amp; elem != <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">              <span class=\"keyword\">if</span>(srcArray.length &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\">                srcArray.shift();</span><br><span class=\"line\">              src = srcArray.join(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">              $(<span class=\"built_in\">this</span>).attr(<span class=\"string\">&#x27;src&#x27;</span>, config.root + link + src);</span><br><span class=\"line\">              <span class=\"built_in\">console</span>.info&amp;&amp;<span class=\"built_in\">console</span>.info(<span class=\"string\">&quot;update link as:--&gt;&quot;</span>+config.root + link + src);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.info&amp;&amp;<span class=\"built_in\">console</span>.info(<span class=\"string\">&quot;no src attr, skipped...&quot;</span>);</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.info&amp;&amp;<span class=\"built_in\">console</span>.info($(<span class=\"built_in\">this</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      data[key] = $.html();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"食用方法\"><a href=\"#食用方法\" class=\"headerlink\" title=\"食用方法\"></a>食用方法</h4><p>在写markdown文件时设置好图像的问题，我用的是typora更改图片设置如下图</p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220111114426389.png\" alt=\"image-20220111114426389\"></p>\n<p>这样就会将图片和文件放到一个文件夹下</p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220111114517951.png\" alt=\"image-20220111114517951\"></p>\n<p>然后使用命令</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">hexo</span> <span class=\"string\">new</span> <span class=\"string\">记录一下安装hexo的过程</span></span><br></pre></td></tr></table></figure>\n\n<p>或者手动在  <code>文件/source/_post/ </code>下创建相同名字的文件</p>\n<p>然后将写好的markdown文件的图片放入文件夹里 将md文件放到外面</p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220111115043380.png\" alt=\"image-20220111115043380\"></p>\n<p>本人建议直接将编辑好的markdown文件夹复制到 <code>文件/source/_post/ </code> 然后将<code>.md</code>文件给拉到和文件夹同一层级，形成上图的层级格式 </p>\n<h4 id=\"TIP\"><a href=\"#TIP\" class=\"headerlink\" title=\"TIP\"></a>TIP</h4><blockquote>\n<p>文件夹里只有图片</p>\n</blockquote>\n<h4 id=\"修改url\"><a href=\"#修改url\" class=\"headerlink\" title=\"修改url\"></a>修改url</h4><p><code>_Config.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#修改url是因为github不加载css和js</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://username.github.io</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>记得上传源文件到GitHub或Gitee上</p>\n<p>将themes的主题里的<code>.git</code>删掉 因为github不能嵌套上传</p>\n<p>建议将page放入一个分支 源码放入一个分支</p>\n</blockquote>\n<p><strong>如果我的看不懂可以建议看一下<a href=\"https://blog.csdn.net/sinat_37781304/article/details/82729029\">这个链接</a> 我做的时候学习的这个作者才做出来的给了我不少启发</strong></p>\n<p>第一篇文章到此结束！！！🥳🥳🥳</p>\n<h1 id=\"2022-5-13-Update\"><a href=\"#2022-5-13-Update\" class=\"headerlink\" title=\"2022.5.13 Update\"></a>2022.5.13 Update</h1><p>选择了新的主题，主题相较于之前的更加丰富，并且从github page迁移到了vercel</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"记录一下安装hexo的过程\"><a href=\"#记录一下安装hexo的过程\" class=\"headerlink\" title=\"记录一下安装hexo的过程\"></a>记录一下安装hexo的过程</h3><p>（防止以后遗忘 不知道咋弄）</p>\n<h4 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h4><p>首先安装好git 和 node js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br><span class=\"line\">or</span><br><span class=\"line\">$ npm install hexo</span><br></pre></td></tr></table></figure>\n\n<p>完成之后用 <strong><code>hexo -v</code></strong> 查看版本</p>\n<p>接下来初始化 <code>hexo</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init 文件名</span><br><span class=\"line\">$ cd 文件名</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n\n<p>新建完成之后会有如下文件夹</p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220110162452660.png\" alt=\"image-20220110162452660\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br><span class=\"line\">$ hexo s</span><br></pre></td></tr></table></figure>\n\n<p>之后便可以进入到初始博客</p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220110162645465.png\" alt=\"image-20220110162645465\"></p>\n<h4 id=\"GitHub或Gitee-创建新库\"><a href=\"#GitHub或Gitee-创建新库\" class=\"headerlink\" title=\"GitHub或Gitee 创建新库\"></a>GitHub或Gitee 创建新库</h4><p>TIP: 在GitHub上注册的仓库名为  <code>相同的用户名.github.io</code></p>\n<p>​        Gitee上为<code>相同的用户名</code></p>\n<h4 id=\"将hexo部署到GitHub或Gitee上\"><a href=\"#将hexo部署到GitHub或Gitee上\" class=\"headerlink\" title=\"将hexo部署到GitHub或Gitee上\"></a>将hexo部署到GitHub或Gitee上</h4><p>先安装deploy-git</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>在**<code>_config.yml</code>**文件中最后修改</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">&#x27;git&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/username/username.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">blog</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">&#x27;git&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://gitee.com/username/username.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">blog</span></span><br></pre></td></tr></table></figure>\n\n<p>然后执行命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br><span class=\"line\">$ hexo g</span><br><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure>\n\n<p>其中 <code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br><code>hexo generate</code> 顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写<br><code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写</p>\n<p>部署结束</p>\n<h4 id=\"修改主题\"><a href=\"#修改主题\" class=\"headerlink\" title=\"修改主题\"></a>修改主题</h4><p>我选择的是 <a href=\"https://github.com/MrWillCom/hexo-theme-cupertino\">Hexo Theme Cupertino</a></p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220110164357577.png\" alt=\"image-20220110164357577\"></p>\n<p>完全符合我的审美</p>\n<p>进入主题文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd themes</span><br><span class=\"line\">$ git clone https://github.com/MrWillCom/hexo-theme-cupertino.git</span><br></pre></td></tr></table></figure>\n\n<p>修改全局配置文件 <code>_config.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">hexo-theme-cupertino</span></span><br></pre></td></tr></table></figure>\n\n<p>修改原作者的链接</p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220110165134907.png\" alt=\"image-20220110165134907\"></p>\n<p><code>添加浏览器图标png放到 文件名/source 下</code></p>\n<p>修改全局配置文件</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">subtitle:&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">description:&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>这是现实在主页的两行字体 作者源码解释在此</p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220110165549516.png\" alt=\"image-20220110165549516\"></p>\n<p>至此主题部分配置已结束</p>\n<h4 id=\"关于图片插入的问题\"><a href=\"#关于图片插入的问题\" class=\"headerlink\" title=\"关于图片插入的问题\"></a>关于图片插入的问题</h4><p>我看到一个插件非常中意 但是安装的时候出现问题就一直没能装上</p>\n<p><strong><a href=\"https://github.com/boboidream/hexo-easy-images#hexo-easy-images\">hexo-easy-images</a></strong></p>\n<p>然后对比使用了**<a href=\"https://github.com/JoeyBling/hexo-filter-image\">hexo-filter-image</a>** 和 <strong><a href=\"https://github.com/xcodebuild/hexo-asset-image\">hexo-asset-image</a></strong> 之后我选择了使用后者</p>\n<p>接下来是我的使用方案</p>\n<h4 id=\"安装-hexo-asset-image\"><a href=\"#安装-hexo-asset-image\" class=\"headerlink\" title=\"安装  hexo-asset-image\"></a>安装  <strong><a href=\"https://github.com/xcodebuild/hexo-asset-image\">hexo-asset-image</a></strong></h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>\n\n<p>源文件<code>/node_modules/hexo-asset-image/index.js</code>里的代码有错误 需要进行修改为以下代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;cheerio&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getPosition</span>(<span class=\"params\">str, m, i</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> str.split(m, i).join(m).length;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> version = <span class=\"built_in\">String</span>(hexo.version).split(<span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">&#x27;after_post_render&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> config = hexo.config;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(config.post_asset_folder)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> link = data.permalink;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(version.length &gt; <span class=\"number\">0</span> &amp;&amp; <span class=\"built_in\">Number</span>(version[<span class=\"number\">0</span>]) == <span class=\"number\">3</span>)</span><br><span class=\"line\">       <span class=\"keyword\">var</span> beginPos = getPosition(link, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"number\">1</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">       <span class=\"keyword\">var</span> beginPos = getPosition(link, <span class=\"string\">&#x27;/&#x27;</span>, <span class=\"number\">3</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> endPos = link.lastIndexOf(<span class=\"string\">&#x27;/&#x27;</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    link = link.substring(beginPos, endPos);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> toprocess = [<span class=\"string\">&#x27;excerpt&#x27;</span>, <span class=\"string\">&#x27;more&#x27;</span>, <span class=\"string\">&#x27;content&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; toprocess.length; i++)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> key = toprocess[i];</span><br><span class=\"line\"> </span><br><span class=\"line\">      <span class=\"keyword\">var</span> $ = cheerio.load(data[key], &#123;</span><br><span class=\"line\">        <span class=\"attr\">ignoreWhitespace</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">xmlMode</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">lowerCaseTags</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">decodeEntities</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      $(<span class=\"string\">&#x27;img&#x27;</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($(<span class=\"built_in\">this</span>).attr(<span class=\"string\">&#x27;src&#x27;</span>))&#123;</span><br><span class=\"line\">            <span class=\"comment\">// For windows style path, we replace &#x27;\\&#x27; to &#x27;/&#x27;.</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> src = $(<span class=\"built_in\">this</span>).attr(<span class=\"string\">&#x27;src&#x27;</span>).replace(<span class=\"string\">&#x27;\\\\&#x27;</span>, <span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!<span class=\"regexp\">/http[s]*.*|\\/\\/.*/</span>.test(src) &amp;&amp;</span><br><span class=\"line\">               !<span class=\"regexp\">/^\\s*\\//</span>.test(src)) &#123;</span><br><span class=\"line\">              <span class=\"comment\">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class=\"line\">              <span class=\"comment\">// In addition, to support multi-level local directory.</span></span><br><span class=\"line\">              <span class=\"keyword\">var</span> linkArray = link.split(<span class=\"string\">&#x27;/&#x27;</span>).filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">elem</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> elem != <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">              <span class=\"keyword\">var</span> srcArray = src.split(<span class=\"string\">&#x27;/&#x27;</span>).filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">elem</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> elem != <span class=\"string\">&#x27;&#x27;</span> &amp;&amp; elem != <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">              <span class=\"keyword\">if</span>(srcArray.length &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\">                srcArray.shift();</span><br><span class=\"line\">              src = srcArray.join(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">              $(<span class=\"built_in\">this</span>).attr(<span class=\"string\">&#x27;src&#x27;</span>, config.root + link + src);</span><br><span class=\"line\">              <span class=\"built_in\">console</span>.info&amp;&amp;<span class=\"built_in\">console</span>.info(<span class=\"string\">&quot;update link as:--&gt;&quot;</span>+config.root + link + src);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.info&amp;&amp;<span class=\"built_in\">console</span>.info(<span class=\"string\">&quot;no src attr, skipped...&quot;</span>);</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.info&amp;&amp;<span class=\"built_in\">console</span>.info($(<span class=\"built_in\">this</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      data[key] = $.html();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"食用方法\"><a href=\"#食用方法\" class=\"headerlink\" title=\"食用方法\"></a>食用方法</h4><p>在写markdown文件时设置好图像的问题，我用的是typora更改图片设置如下图</p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220111114426389.png\" alt=\"image-20220111114426389\"></p>\n<p>这样就会将图片和文件放到一个文件夹下</p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220111114517951.png\" alt=\"image-20220111114517951\"></p>\n<p>然后使用命令</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">hexo</span> <span class=\"string\">new</span> <span class=\"string\">记录一下安装hexo的过程</span></span><br></pre></td></tr></table></figure>\n\n<p>或者手动在  <code>文件/source/_post/ </code>下创建相同名字的文件</p>\n<p>然后将写好的markdown文件的图片放入文件夹里 将md文件放到外面</p>\n<p><img src=\"/2022/01/10/001_hexo/image-20220111115043380.png\" alt=\"image-20220111115043380\"></p>\n<p>本人建议直接将编辑好的markdown文件夹复制到 <code>文件/source/_post/ </code> 然后将<code>.md</code>文件给拉到和文件夹同一层级，形成上图的层级格式 </p>\n<h4 id=\"TIP\"><a href=\"#TIP\" class=\"headerlink\" title=\"TIP\"></a>TIP</h4><blockquote>\n<p>文件夹里只有图片</p>\n</blockquote>\n<h4 id=\"修改url\"><a href=\"#修改url\" class=\"headerlink\" title=\"修改url\"></a>修改url</h4><p><code>_Config.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#修改url是因为github不加载css和js</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://username.github.io</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>记得上传源文件到GitHub或Gitee上</p>\n<p>将themes的主题里的<code>.git</code>删掉 因为github不能嵌套上传</p>\n<p>建议将page放入一个分支 源码放入一个分支</p>\n</blockquote>\n<p><strong>如果我的看不懂可以建议看一下<a href=\"https://blog.csdn.net/sinat_37781304/article/details/82729029\">这个链接</a> 我做的时候学习的这个作者才做出来的给了我不少启发</strong></p>\n<p>第一篇文章到此结束！！！🥳🥳🥳</p>\n<h1 id=\"2022-5-13-Update\"><a href=\"#2022-5-13-Update\" class=\"headerlink\" title=\"2022.5.13 Update\"></a>2022.5.13 Update</h1><p>选择了新的主题，主题相较于之前的更加丰富，并且从github page迁移到了vercel</p>\n"},{"title":"关于Inventory的制作","description":null,"date":"2022-05-30T16:00:00.000Z","top_image":"/img/003.png","cover":"/img/003.png","_content":"\n# Introduce\n\n首先还是要感谢麦扣老师，[视频链接](https://www.bilibili.com/video/BV1YJ41197SU?p=2)。\n\n制作之后的(简陋)界面。\n\n![image-20220603143654206](image-20220603143654206.png)\n\n# UI界面\n\n**UI层级**\n\n- Canvas  `BagManager.cs`\n  - Bag  `MoveBag.cs`\n    - Title  标题\n    - Exit   右上角 ”×“\n    - Grid  物品格\n    - Info   物品介绍\n\n> Grid 通过使用GridLayoutGroup组件进行排列组合\n\n**预制体Slot的制作**\n\nSlot在这里作为每个格子显示的整体，移动拖拽点击显示等功能都是通过这个Slot。\n\n- Slot  `Slot.cs`\n  - Item  Button/`ItemOnDrag.cs`\n    - ItemImage  显示的图像\n    - Number  显示数量\n\n`Slot.cs`\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class Slot : MonoBehaviour\n{\n    public int slotId;\n    public Item item;\n\n    public Image image;\n\n    public Text num;\n\n    public GameObject itemInSlot;\n\n    public string slotInfo;\n    public void ItemOnClick()\n    {\n        BagManager.instance.UpdateInfo(slotInfo);\n    }\n\n    public void SetItem(Item item)\n    {\n        if (item == null)\n        {\n            itemInSlot.SetActive(false);\n            return;\n        }\n        //赋值\n        image.sprite = item.sprite;\n        num.text = item.holdNum.ToString();\n        slotInfo = item.info;\n    }\n}\n\n```\n\n\n\n# ScriptableObject存储\n\n存储物品的属性:`Item.cs`\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\n//创建新的菜单\n[CreateAssetMenu(fileName = \"New Item\",menuName = \"Item/item\")]\n\npublic class Item : ScriptableObject\n{\n    public string _name;//物品名字\n    public Sprite sprite;//物品图片\n    public int holdNum;//持有数量\n    \n    //使得文本框变大\n    [TextArea]\n    public string  info;//物品介绍信息\n}\n\n```\n\n背包的存储:`Bag.cs`\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName =\"New Bag\",menuName =\"Item/bag\")]\npublic class Bag : ScriptableObject\n{\n    //创建列表，存储物品\n    public List<Item> list = new List<Item>();\n}\n\n```\n\n物品添加拾取功能`shiqu.cs`\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class Shiqu : MonoBehaviour\n{\n    public Item item;\n\n    public Bag bag;\n\n    private void OnTriggerEnter2D(Collider2D collision)\n    {\n        if (collision.gameObject.CompareTag(\"Player\"))\n        {\n            //Debug.Log(\"item\" + item.holdNum);\n            if (bag.list.Contains(item))\n            {\n                item.holdNum += 1;\n                //Debug.Log(\"bag:\" + bag.list[0].holdNum);\n            }\n            else\n            {\n                //bag.list.Add(item);\n\n                //如果有空位则添加\n                for (int i = 0; i < bag.list.Count; i++)\n                {\n                    if (bag.list[i] == null)\n                    {\n                        bag.list[i] = item;\n                        break;\n                    }\n                }\n\n            }\n\n            Destroy(gameObject);\n        }\n        BagManager.instance.Refresh();\n    }\n}\n\n```\n\n# 背包显示\n\n主要思想是当玩家拾取物品、打开背包之后，都会进行一次刷新。\n\n`BagManager.cs`\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class BagManager : MonoBehaviour\n{\n    public static BagManager instance;\n\n    public Bag bag;\n    public GameObject slotGrid;\n    //public Slot slot;\n    public GameObject emptySlot;\n\n    public Text info;\n\n    //显示当前物品的列表，从bag里获取数据\n    public List<GameObject> slots = new List<GameObject>();\n\n    private void Awake()\n    {\n        if (instance != null)\n            Destroy(this);\n        instance = this;\n    }\n\n    private void OnEnable()\n    {\n        Refresh();\n        info.text = \"\";\n    }\n    public void UpdateInfo(string itemInfo)\n    {\n        info.text = itemInfo;\n    }\n\n    /*生成格子，有多少物品生成多少格子\n    public void CreateSolt(Item item)\n    {\n        Slot newslot = Instantiate(slot, instance.slotGrid.transform.position, Quaternion.identity);\n\n        newslot.gameObject.transform.SetParent(instance.slotGrid.transform,false);\n\n        newslot.image.sprite = item.sprite;\n        newslot.item = item;\n        newslot.num.text = item.holdNum.ToString();\n    }\n    */\n    public void Refresh()\n    {\n        //先清空原物品对象和存储物品数据的列表\n        for (int i = 0; i < slotGrid.transform.childCount; i++)\n        {\n            if (slotGrid.transform.childCount == 0)\n                break;\n            //删除子集的空物体\n            Destroy(slotGrid.transform.GetChild(i).gameObject);\n            //清空列表\n            slots.Clear();\n        }\n        //重新生成\n        for (int i = 0; i < bag.list.Count; i++)\n        {\n            //CreateSolt(bag.list[i]);\n\n            //添加空白格并设置父级\n            slots.Add(Instantiate(emptySlot));\n            //设置false会使得加载的时候图片不被缩放\n            slots[i].transform.SetParent(slotGrid.transform,false);\n            //设置图片 数量\n            slots[i].GetComponent<Slot>().SetItem(bag.list[i]);\n            //设置物品的编号\n            slots[i].GetComponent<Slot>().slotId = i;\n        }\n    }\n}\n\n```\n\n# 物品拖拽与数据转换\n\n当物品进行拖拽时，先将其父级更改为父级的父级，防止出现遮挡的问题，然后根据射线遮挡判断鼠标移动的位置。\n\n> Slot的Item添加两个组件：\n>\n> Canvas Group：BlockRaycasts开启，当鼠标移动的时候知道移动的位置\n>\n> LayoutElement：IgnoreLayout开启，更改父级元素时，不会跳到进入到排序行列\n\n`ItemOnDrag.cs`\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n//引用\nusing UnityEngine.EventSystems;\n\n//使用三个接口\npublic class ItemOnDrag : MonoBehaviour, IBeginDragHandler, IDragHandler, IEndDragHandler\n{\n    //移动的物体的初始父级\n    public Transform originParent;\n\n    public Bag bag;\n    int currentItemId;\n    public void OnBeginDrag(PointerEventData eventData)\n    {\n        originParent = transform.parent;\n        currentItemId = originParent.GetComponent<Slot>().slotId;\n        //更换父级，使其置于上层不被遮挡\n        transform.SetParent(transform.parent.parent);\n        transform.position = eventData.position;\n        //修改鼠标移动的物体的遮挡属性\n        GetComponent<CanvasGroup>().blocksRaycasts = false;\n    }\n\n    public void OnDrag(PointerEventData eventData)\n    {\n        transform.position = eventData.position;\n        Debug.Log(eventData.pointerCurrentRaycast.gameObject.name);\n    }\n\n    public void OnEndDrag(PointerEventData eventData)\n    {\n        //判断是否属于设置的界面外\n        if (eventData.pointerCurrentRaycast.gameObject != null)\n        {\n            //鼠标射线碰撞到的物体,可能碰到图片或文字\n            if (eventData.pointerCurrentRaycast.gameObject.name == \"ItemImage\" || eventData.pointerCurrentRaycast.gameObject.name == \"Number\")\n            {\n                //更换鼠标移动物体的位置和父级\n                transform.SetParent(eventData.pointerCurrentRaycast.gameObject.transform.parent.parent);\n                transform.position = eventData.pointerCurrentRaycast.gameObject.transform.parent.parent.position;\n                //更换两个物体信息\n                var temp = bag.list[currentItemId];\n                bag.list[currentItemId] = bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent<Slot>().slotId];\n                bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent<Slot>().slotId] = temp;\n                //更换当前鼠标位置物体的位置和父级为原物体的位置与父级\n                eventData.pointerCurrentRaycast.gameObject.transform.parent.position = originParent.position;\n                eventData.pointerCurrentRaycast.gameObject.transform.parent.SetParent(originParent);\n\n                GetComponent<CanvasGroup>().blocksRaycasts = true;\n                return;\n            }\n            //如果是空值，则交换空值的位置\n            //更换当前鼠标位置物体的位置和父级为原物体的位置与父级\n            //eventData.pointerCurrentRaycast.gameObject.transform.GetChild(0).SetParent(originParent);\n            //eventData.pointerCurrentRaycast.gameObject.transform.GetChild(0).position = originParent.position;\n            if (eventData.pointerCurrentRaycast.gameObject.name == \"Slot(Clone)\")\n            {\n                transform.SetParent(eventData.pointerCurrentRaycast.gameObject.transform);\n                transform.position = eventData.pointerCurrentRaycast.gameObject.transform.position;\n\n                bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent<Slot>().slotId] = bag.list[currentItemId];\n                //判断是不是同一个位置\n                //同一位置则不能设置为null\n                if (eventData.pointerCurrentRaycast.gameObject.GetComponentInParent<Slot>().slotId != currentItemId)\n                    bag.list[currentItemId] = null;\n\n                GetComponent<CanvasGroup>().blocksRaycasts = true;\n                return;\n            }\n        }\n        //如果是则返回原位置\n        transform.SetParent(originParent);\n        transform.position = originParent.position;\n        GetComponent<CanvasGroup>().blocksRaycasts = true;\n\n\n    }\n}\n\n```\n\n# 窗口移动\n\n`MoveBag.cs`\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.EventSystems;\n\npublic class MoveBag : MonoBehaviour,IDragHandler\n{\n    RectTransform rectTransform;\n\n    private void Awake()\n    {\n        rectTransform = GetComponent<RectTransform>();\n    }\n    public void OnDrag(PointerEventData eventData)\n    {\n        //移动anchor为鼠标移动的距离\n        //调试的时候可能会不跟手，build之后不会出现这种情况\n        rectTransform.anchoredPosition += eventData.delta;\n    }\n\n    // Start is called before the first frame update\n\n}\n\n```\n\n","source":"_posts/003_Inventory.md","raw":"---\ntitle: 关于Inventory的制作\ndescription: \ndate: 2022-5-31\ntop_image: /img/003.png\ncover: /img/003.png\ncategories: \n- Unity\ntag: \n- Games\n- 游戏制作\n- M_studio\n\n---\n\n# Introduce\n\n首先还是要感谢麦扣老师，[视频链接](https://www.bilibili.com/video/BV1YJ41197SU?p=2)。\n\n制作之后的(简陋)界面。\n\n![image-20220603143654206](image-20220603143654206.png)\n\n# UI界面\n\n**UI层级**\n\n- Canvas  `BagManager.cs`\n  - Bag  `MoveBag.cs`\n    - Title  标题\n    - Exit   右上角 ”×“\n    - Grid  物品格\n    - Info   物品介绍\n\n> Grid 通过使用GridLayoutGroup组件进行排列组合\n\n**预制体Slot的制作**\n\nSlot在这里作为每个格子显示的整体，移动拖拽点击显示等功能都是通过这个Slot。\n\n- Slot  `Slot.cs`\n  - Item  Button/`ItemOnDrag.cs`\n    - ItemImage  显示的图像\n    - Number  显示数量\n\n`Slot.cs`\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class Slot : MonoBehaviour\n{\n    public int slotId;\n    public Item item;\n\n    public Image image;\n\n    public Text num;\n\n    public GameObject itemInSlot;\n\n    public string slotInfo;\n    public void ItemOnClick()\n    {\n        BagManager.instance.UpdateInfo(slotInfo);\n    }\n\n    public void SetItem(Item item)\n    {\n        if (item == null)\n        {\n            itemInSlot.SetActive(false);\n            return;\n        }\n        //赋值\n        image.sprite = item.sprite;\n        num.text = item.holdNum.ToString();\n        slotInfo = item.info;\n    }\n}\n\n```\n\n\n\n# ScriptableObject存储\n\n存储物品的属性:`Item.cs`\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\n//创建新的菜单\n[CreateAssetMenu(fileName = \"New Item\",menuName = \"Item/item\")]\n\npublic class Item : ScriptableObject\n{\n    public string _name;//物品名字\n    public Sprite sprite;//物品图片\n    public int holdNum;//持有数量\n    \n    //使得文本框变大\n    [TextArea]\n    public string  info;//物品介绍信息\n}\n\n```\n\n背包的存储:`Bag.cs`\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName =\"New Bag\",menuName =\"Item/bag\")]\npublic class Bag : ScriptableObject\n{\n    //创建列表，存储物品\n    public List<Item> list = new List<Item>();\n}\n\n```\n\n物品添加拾取功能`shiqu.cs`\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class Shiqu : MonoBehaviour\n{\n    public Item item;\n\n    public Bag bag;\n\n    private void OnTriggerEnter2D(Collider2D collision)\n    {\n        if (collision.gameObject.CompareTag(\"Player\"))\n        {\n            //Debug.Log(\"item\" + item.holdNum);\n            if (bag.list.Contains(item))\n            {\n                item.holdNum += 1;\n                //Debug.Log(\"bag:\" + bag.list[0].holdNum);\n            }\n            else\n            {\n                //bag.list.Add(item);\n\n                //如果有空位则添加\n                for (int i = 0; i < bag.list.Count; i++)\n                {\n                    if (bag.list[i] == null)\n                    {\n                        bag.list[i] = item;\n                        break;\n                    }\n                }\n\n            }\n\n            Destroy(gameObject);\n        }\n        BagManager.instance.Refresh();\n    }\n}\n\n```\n\n# 背包显示\n\n主要思想是当玩家拾取物品、打开背包之后，都会进行一次刷新。\n\n`BagManager.cs`\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class BagManager : MonoBehaviour\n{\n    public static BagManager instance;\n\n    public Bag bag;\n    public GameObject slotGrid;\n    //public Slot slot;\n    public GameObject emptySlot;\n\n    public Text info;\n\n    //显示当前物品的列表，从bag里获取数据\n    public List<GameObject> slots = new List<GameObject>();\n\n    private void Awake()\n    {\n        if (instance != null)\n            Destroy(this);\n        instance = this;\n    }\n\n    private void OnEnable()\n    {\n        Refresh();\n        info.text = \"\";\n    }\n    public void UpdateInfo(string itemInfo)\n    {\n        info.text = itemInfo;\n    }\n\n    /*生成格子，有多少物品生成多少格子\n    public void CreateSolt(Item item)\n    {\n        Slot newslot = Instantiate(slot, instance.slotGrid.transform.position, Quaternion.identity);\n\n        newslot.gameObject.transform.SetParent(instance.slotGrid.transform,false);\n\n        newslot.image.sprite = item.sprite;\n        newslot.item = item;\n        newslot.num.text = item.holdNum.ToString();\n    }\n    */\n    public void Refresh()\n    {\n        //先清空原物品对象和存储物品数据的列表\n        for (int i = 0; i < slotGrid.transform.childCount; i++)\n        {\n            if (slotGrid.transform.childCount == 0)\n                break;\n            //删除子集的空物体\n            Destroy(slotGrid.transform.GetChild(i).gameObject);\n            //清空列表\n            slots.Clear();\n        }\n        //重新生成\n        for (int i = 0; i < bag.list.Count; i++)\n        {\n            //CreateSolt(bag.list[i]);\n\n            //添加空白格并设置父级\n            slots.Add(Instantiate(emptySlot));\n            //设置false会使得加载的时候图片不被缩放\n            slots[i].transform.SetParent(slotGrid.transform,false);\n            //设置图片 数量\n            slots[i].GetComponent<Slot>().SetItem(bag.list[i]);\n            //设置物品的编号\n            slots[i].GetComponent<Slot>().slotId = i;\n        }\n    }\n}\n\n```\n\n# 物品拖拽与数据转换\n\n当物品进行拖拽时，先将其父级更改为父级的父级，防止出现遮挡的问题，然后根据射线遮挡判断鼠标移动的位置。\n\n> Slot的Item添加两个组件：\n>\n> Canvas Group：BlockRaycasts开启，当鼠标移动的时候知道移动的位置\n>\n> LayoutElement：IgnoreLayout开启，更改父级元素时，不会跳到进入到排序行列\n\n`ItemOnDrag.cs`\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n//引用\nusing UnityEngine.EventSystems;\n\n//使用三个接口\npublic class ItemOnDrag : MonoBehaviour, IBeginDragHandler, IDragHandler, IEndDragHandler\n{\n    //移动的物体的初始父级\n    public Transform originParent;\n\n    public Bag bag;\n    int currentItemId;\n    public void OnBeginDrag(PointerEventData eventData)\n    {\n        originParent = transform.parent;\n        currentItemId = originParent.GetComponent<Slot>().slotId;\n        //更换父级，使其置于上层不被遮挡\n        transform.SetParent(transform.parent.parent);\n        transform.position = eventData.position;\n        //修改鼠标移动的物体的遮挡属性\n        GetComponent<CanvasGroup>().blocksRaycasts = false;\n    }\n\n    public void OnDrag(PointerEventData eventData)\n    {\n        transform.position = eventData.position;\n        Debug.Log(eventData.pointerCurrentRaycast.gameObject.name);\n    }\n\n    public void OnEndDrag(PointerEventData eventData)\n    {\n        //判断是否属于设置的界面外\n        if (eventData.pointerCurrentRaycast.gameObject != null)\n        {\n            //鼠标射线碰撞到的物体,可能碰到图片或文字\n            if (eventData.pointerCurrentRaycast.gameObject.name == \"ItemImage\" || eventData.pointerCurrentRaycast.gameObject.name == \"Number\")\n            {\n                //更换鼠标移动物体的位置和父级\n                transform.SetParent(eventData.pointerCurrentRaycast.gameObject.transform.parent.parent);\n                transform.position = eventData.pointerCurrentRaycast.gameObject.transform.parent.parent.position;\n                //更换两个物体信息\n                var temp = bag.list[currentItemId];\n                bag.list[currentItemId] = bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent<Slot>().slotId];\n                bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent<Slot>().slotId] = temp;\n                //更换当前鼠标位置物体的位置和父级为原物体的位置与父级\n                eventData.pointerCurrentRaycast.gameObject.transform.parent.position = originParent.position;\n                eventData.pointerCurrentRaycast.gameObject.transform.parent.SetParent(originParent);\n\n                GetComponent<CanvasGroup>().blocksRaycasts = true;\n                return;\n            }\n            //如果是空值，则交换空值的位置\n            //更换当前鼠标位置物体的位置和父级为原物体的位置与父级\n            //eventData.pointerCurrentRaycast.gameObject.transform.GetChild(0).SetParent(originParent);\n            //eventData.pointerCurrentRaycast.gameObject.transform.GetChild(0).position = originParent.position;\n            if (eventData.pointerCurrentRaycast.gameObject.name == \"Slot(Clone)\")\n            {\n                transform.SetParent(eventData.pointerCurrentRaycast.gameObject.transform);\n                transform.position = eventData.pointerCurrentRaycast.gameObject.transform.position;\n\n                bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent<Slot>().slotId] = bag.list[currentItemId];\n                //判断是不是同一个位置\n                //同一位置则不能设置为null\n                if (eventData.pointerCurrentRaycast.gameObject.GetComponentInParent<Slot>().slotId != currentItemId)\n                    bag.list[currentItemId] = null;\n\n                GetComponent<CanvasGroup>().blocksRaycasts = true;\n                return;\n            }\n        }\n        //如果是则返回原位置\n        transform.SetParent(originParent);\n        transform.position = originParent.position;\n        GetComponent<CanvasGroup>().blocksRaycasts = true;\n\n\n    }\n}\n\n```\n\n# 窗口移动\n\n`MoveBag.cs`\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.EventSystems;\n\npublic class MoveBag : MonoBehaviour,IDragHandler\n{\n    RectTransform rectTransform;\n\n    private void Awake()\n    {\n        rectTransform = GetComponent<RectTransform>();\n    }\n    public void OnDrag(PointerEventData eventData)\n    {\n        //移动anchor为鼠标移动的距离\n        //调试的时候可能会不跟手，build之后不会出现这种情况\n        rectTransform.anchoredPosition += eventData.delta;\n    }\n\n    // Start is called before the first frame update\n\n}\n\n```\n\n","slug":"003_Inventory","published":1,"updated":"2022-06-21T14:26:21.704Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4o9jzic0005isv9f3ktffid","content":"<h1 id=\"Introduce\"><a href=\"#Introduce\" class=\"headerlink\" title=\"Introduce\"></a>Introduce</h1><p>首先还是要感谢麦扣老师，<a href=\"https://www.bilibili.com/video/BV1YJ41197SU?p=2\">视频链接</a>。</p>\n<p>制作之后的(简陋)界面。</p>\n<p><img src=\"/2022/05/31/003_Inventory/image-20220603143654206.png\" alt=\"image-20220603143654206\"></p>\n<h1 id=\"UI界面\"><a href=\"#UI界面\" class=\"headerlink\" title=\"UI界面\"></a>UI界面</h1><p><strong>UI层级</strong></p>\n<ul>\n<li>Canvas  <code>BagManager.cs</code><ul>\n<li>Bag  <code>MoveBag.cs</code><ul>\n<li>Title  标题</li>\n<li>Exit   右上角 ”×“</li>\n<li>Grid  物品格</li>\n<li>Info   物品介绍</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Grid 通过使用GridLayoutGroup组件进行排列组合</p>\n</blockquote>\n<p><strong>预制体Slot的制作</strong></p>\n<p>Slot在这里作为每个格子显示的整体，移动拖拽点击显示等功能都是通过这个Slot。</p>\n<ul>\n<li>Slot  <code>Slot.cs</code><ul>\n<li>Item  Button/<code>ItemOnDrag.cs</code><ul>\n<li>ItemImage  显示的图像</li>\n<li>Number  显示数量</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><code>Slot.cs</code></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.UI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Slot</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> slotId;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Item item;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Image image;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Text num;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject itemInSlot;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> slotInfo;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ItemOnClick</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        BagManager.instance.UpdateInfo(slotInfo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">SetItem</span>(<span class=\"params\">Item item</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (item == <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            itemInSlot.SetActive(<span class=\"literal\">false</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//赋值</span></span><br><span class=\"line\">        image.sprite = item.sprite;</span><br><span class=\"line\">        num.text = item.holdNum.ToString();</span><br><span class=\"line\">        slotInfo = item.info;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"ScriptableObject存储\"><a href=\"#ScriptableObject存储\" class=\"headerlink\" title=\"ScriptableObject存储\"></a>ScriptableObject存储</h1><p>存储物品的属性:<code>Item.cs</code></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建新的菜单</span></span><br><span class=\"line\">[<span class=\"meta\">CreateAssetMenu(fileName = <span class=\"meta-string\">&quot;New Item&quot;</span>,menuName = <span class=\"meta-string\">&quot;Item/item&quot;</span>)</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Item</span> : <span class=\"title\">ScriptableObject</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> _name;<span class=\"comment\">//物品名字</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Sprite sprite;<span class=\"comment\">//物品图片</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> holdNum;<span class=\"comment\">//持有数量</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//使得文本框变大</span></span><br><span class=\"line\">    [<span class=\"meta\">TextArea</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span>  info;<span class=\"comment\">//物品介绍信息</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>背包的存储:<code>Bag.cs</code></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"meta\">CreateAssetMenu(fileName =<span class=\"meta-string\">&quot;New Bag&quot;</span>,menuName =<span class=\"meta-string\">&quot;Item/bag&quot;</span>)</span>]</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Bag</span> : <span class=\"title\">ScriptableObject</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建列表，存储物品</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">List</span>&lt;<span class=\"title\">Item</span>&gt; list</span> = <span class=\"keyword\">new</span> List&lt;Item&gt;();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>物品添加拾取功能<code>shiqu.cs</code></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Shiqu</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Item item;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Bag bag;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnTriggerEnter2D</span>(<span class=\"params\">Collider2D collision</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (collision.gameObject.CompareTag(<span class=\"string\">&quot;Player&quot;</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//Debug.Log(&quot;item&quot; + item.holdNum);</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (bag.list.Contains(item))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                item.holdNum += <span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"comment\">//Debug.Log(&quot;bag:&quot; + bag.list[0].holdNum);</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//bag.list.Add(item);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//如果有空位则添加</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; bag.list.Count; i++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (bag.list[i] == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        bag.list[i] = item;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            Destroy(gameObject);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        BagManager.instance.Refresh();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"背包显示\"><a href=\"#背包显示\" class=\"headerlink\" title=\"背包显示\"></a>背包显示</h1><p>主要思想是当玩家拾取物品、打开背包之后，都会进行一次刷新。</p>\n<p><code>BagManager.cs</code></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.UI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">BagManager</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> BagManager instance;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Bag bag;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject slotGrid;</span><br><span class=\"line\">    <span class=\"comment\">//public Slot slot;</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject emptySlot;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Text info;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//显示当前物品的列表，从bag里获取数据</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">List</span>&lt;<span class=\"title\">GameObject</span>&gt; slots</span> = <span class=\"keyword\">new</span> List&lt;GameObject&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (instance != <span class=\"literal\">null</span>)</span><br><span class=\"line\">            Destroy(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        instance = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEnable</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Refresh();</span><br><span class=\"line\">        info.text = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">UpdateInfo</span>(<span class=\"params\"><span class=\"built_in\">string</span> itemInfo</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        info.text = itemInfo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*生成格子，有多少物品生成多少格子</span></span><br><span class=\"line\"><span class=\"comment\">    public void CreateSolt(Item item)</span></span><br><span class=\"line\"><span class=\"comment\">    &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        Slot newslot = Instantiate(slot, instance.slotGrid.transform.position, Quaternion.identity);</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        newslot.gameObject.transform.SetParent(instance.slotGrid.transform,false);</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        newslot.image.sprite = item.sprite;</span></span><br><span class=\"line\"><span class=\"comment\">        newslot.item = item;</span></span><br><span class=\"line\"><span class=\"comment\">        newslot.num.text = item.holdNum.ToString();</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Refresh</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//先清空原物品对象和存储物品数据的列表</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; slotGrid.transform.childCount; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (slotGrid.transform.childCount == <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"comment\">//删除子集的空物体</span></span><br><span class=\"line\">            Destroy(slotGrid.transform.GetChild(i).gameObject);</span><br><span class=\"line\">            <span class=\"comment\">//清空列表</span></span><br><span class=\"line\">            slots.Clear();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//重新生成</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; bag.list.Count; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//CreateSolt(bag.list[i]);</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//添加空白格并设置父级</span></span><br><span class=\"line\">            slots.Add(Instantiate(emptySlot));</span><br><span class=\"line\">            <span class=\"comment\">//设置false会使得加载的时候图片不被缩放</span></span><br><span class=\"line\">            slots[i].transform.SetParent(slotGrid.transform,<span class=\"literal\">false</span>);</span><br><span class=\"line\">            <span class=\"comment\">//设置图片 数量</span></span><br><span class=\"line\">            slots[i].GetComponent&lt;Slot&gt;().SetItem(bag.list[i]);</span><br><span class=\"line\">            <span class=\"comment\">//设置物品的编号</span></span><br><span class=\"line\">            slots[i].GetComponent&lt;Slot&gt;().slotId = i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"物品拖拽与数据转换\"><a href=\"#物品拖拽与数据转换\" class=\"headerlink\" title=\"物品拖拽与数据转换\"></a>物品拖拽与数据转换</h1><p>当物品进行拖拽时，先将其父级更改为父级的父级，防止出现遮挡的问题，然后根据射线遮挡判断鼠标移动的位置。</p>\n<blockquote>\n<p>Slot的Item添加两个组件：</p>\n<p>Canvas Group：BlockRaycasts开启，当鼠标移动的时候知道移动的位置</p>\n<p>LayoutElement：IgnoreLayout开启，更改父级元素时，不会跳到进入到排序行列</p>\n</blockquote>\n<p><code>ItemOnDrag.cs</code></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"comment\">//引用</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.EventSystems;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用三个接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ItemOnDrag</span> : <span class=\"title\">MonoBehaviour</span>, <span class=\"title\">IBeginDragHandler</span>, <span class=\"title\">IDragHandler</span>, <span class=\"title\">IEndDragHandler</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//移动的物体的初始父级</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Transform originParent;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Bag bag;</span><br><span class=\"line\">    <span class=\"built_in\">int</span> currentItemId;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnBeginDrag</span>(<span class=\"params\">PointerEventData eventData</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        originParent = transform.parent;</span><br><span class=\"line\">        currentItemId = originParent.GetComponent&lt;Slot&gt;().slotId;</span><br><span class=\"line\">        <span class=\"comment\">//更换父级，使其置于上层不被遮挡</span></span><br><span class=\"line\">        transform.SetParent(transform.parent.parent);</span><br><span class=\"line\">        transform.position = eventData.position;</span><br><span class=\"line\">        <span class=\"comment\">//修改鼠标移动的物体的遮挡属性</span></span><br><span class=\"line\">        GetComponent&lt;CanvasGroup&gt;().blocksRaycasts = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnDrag</span>(<span class=\"params\">PointerEventData eventData</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        transform.position = eventData.position;</span><br><span class=\"line\">        Debug.Log(eventData.pointerCurrentRaycast.gameObject.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEndDrag</span>(<span class=\"params\">PointerEventData eventData</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//判断是否属于设置的界面外</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (eventData.pointerCurrentRaycast.gameObject != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//鼠标射线碰撞到的物体,可能碰到图片或文字</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (eventData.pointerCurrentRaycast.gameObject.name == <span class=\"string\">&quot;ItemImage&quot;</span> || eventData.pointerCurrentRaycast.gameObject.name == <span class=\"string\">&quot;Number&quot;</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//更换鼠标移动物体的位置和父级</span></span><br><span class=\"line\">                transform.SetParent(eventData.pointerCurrentRaycast.gameObject.transform.parent.parent);</span><br><span class=\"line\">                transform.position = eventData.pointerCurrentRaycast.gameObject.transform.parent.parent.position;</span><br><span class=\"line\">                <span class=\"comment\">//更换两个物体信息</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> temp = bag.list[currentItemId];</span><br><span class=\"line\">                bag.list[currentItemId] = bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent&lt;Slot&gt;().slotId];</span><br><span class=\"line\">                bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent&lt;Slot&gt;().slotId] = temp;</span><br><span class=\"line\">                <span class=\"comment\">//更换当前鼠标位置物体的位置和父级为原物体的位置与父级</span></span><br><span class=\"line\">                eventData.pointerCurrentRaycast.gameObject.transform.parent.position = originParent.position;</span><br><span class=\"line\">                eventData.pointerCurrentRaycast.gameObject.transform.parent.SetParent(originParent);</span><br><span class=\"line\"></span><br><span class=\"line\">                GetComponent&lt;CanvasGroup&gt;().blocksRaycasts = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//如果是空值，则交换空值的位置</span></span><br><span class=\"line\">            <span class=\"comment\">//更换当前鼠标位置物体的位置和父级为原物体的位置与父级</span></span><br><span class=\"line\">            <span class=\"comment\">//eventData.pointerCurrentRaycast.gameObject.transform.GetChild(0).SetParent(originParent);</span></span><br><span class=\"line\">            <span class=\"comment\">//eventData.pointerCurrentRaycast.gameObject.transform.GetChild(0).position = originParent.position;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (eventData.pointerCurrentRaycast.gameObject.name == <span class=\"string\">&quot;Slot(Clone)&quot;</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                transform.SetParent(eventData.pointerCurrentRaycast.gameObject.transform);</span><br><span class=\"line\">                transform.position = eventData.pointerCurrentRaycast.gameObject.transform.position;</span><br><span class=\"line\"></span><br><span class=\"line\">                bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent&lt;Slot&gt;().slotId] = bag.list[currentItemId];</span><br><span class=\"line\">                <span class=\"comment\">//判断是不是同一个位置</span></span><br><span class=\"line\">                <span class=\"comment\">//同一位置则不能设置为null</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (eventData.pointerCurrentRaycast.gameObject.GetComponentInParent&lt;Slot&gt;().slotId != currentItemId)</span><br><span class=\"line\">                    bag.list[currentItemId] = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                GetComponent&lt;CanvasGroup&gt;().blocksRaycasts = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//如果是则返回原位置</span></span><br><span class=\"line\">        transform.SetParent(originParent);</span><br><span class=\"line\">        transform.position = originParent.position;</span><br><span class=\"line\">        GetComponent&lt;CanvasGroup&gt;().blocksRaycasts = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"窗口移动\"><a href=\"#窗口移动\" class=\"headerlink\" title=\"窗口移动\"></a>窗口移动</h1><p><code>MoveBag.cs</code></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.EventSystems;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">MoveBag</span> : <span class=\"title\">MonoBehaviour</span>,<span class=\"title\">IDragHandler</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    RectTransform rectTransform;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        rectTransform = GetComponent&lt;RectTransform&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnDrag</span>(<span class=\"params\">PointerEventData eventData</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//移动anchor为鼠标移动的距离</span></span><br><span class=\"line\">        <span class=\"comment\">//调试的时候可能会不跟手，build之后不会出现这种情况</span></span><br><span class=\"line\">        rectTransform.anchoredPosition += eventData.delta;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Start is called before the first frame update</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Introduce\"><a href=\"#Introduce\" class=\"headerlink\" title=\"Introduce\"></a>Introduce</h1><p>首先还是要感谢麦扣老师，<a href=\"https://www.bilibili.com/video/BV1YJ41197SU?p=2\">视频链接</a>。</p>\n<p>制作之后的(简陋)界面。</p>\n<p><img src=\"/2022/05/31/003_Inventory/image-20220603143654206.png\" alt=\"image-20220603143654206\"></p>\n<h1 id=\"UI界面\"><a href=\"#UI界面\" class=\"headerlink\" title=\"UI界面\"></a>UI界面</h1><p><strong>UI层级</strong></p>\n<ul>\n<li>Canvas  <code>BagManager.cs</code><ul>\n<li>Bag  <code>MoveBag.cs</code><ul>\n<li>Title  标题</li>\n<li>Exit   右上角 ”×“</li>\n<li>Grid  物品格</li>\n<li>Info   物品介绍</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Grid 通过使用GridLayoutGroup组件进行排列组合</p>\n</blockquote>\n<p><strong>预制体Slot的制作</strong></p>\n<p>Slot在这里作为每个格子显示的整体，移动拖拽点击显示等功能都是通过这个Slot。</p>\n<ul>\n<li>Slot  <code>Slot.cs</code><ul>\n<li>Item  Button/<code>ItemOnDrag.cs</code><ul>\n<li>ItemImage  显示的图像</li>\n<li>Number  显示数量</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><code>Slot.cs</code></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.UI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Slot</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> slotId;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Item item;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Image image;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Text num;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject itemInSlot;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> slotInfo;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ItemOnClick</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        BagManager.instance.UpdateInfo(slotInfo);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">SetItem</span>(<span class=\"params\">Item item</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (item == <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            itemInSlot.SetActive(<span class=\"literal\">false</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//赋值</span></span><br><span class=\"line\">        image.sprite = item.sprite;</span><br><span class=\"line\">        num.text = item.holdNum.ToString();</span><br><span class=\"line\">        slotInfo = item.info;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"ScriptableObject存储\"><a href=\"#ScriptableObject存储\" class=\"headerlink\" title=\"ScriptableObject存储\"></a>ScriptableObject存储</h1><p>存储物品的属性:<code>Item.cs</code></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建新的菜单</span></span><br><span class=\"line\">[<span class=\"meta\">CreateAssetMenu(fileName = <span class=\"meta-string\">&quot;New Item&quot;</span>,menuName = <span class=\"meta-string\">&quot;Item/item&quot;</span>)</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Item</span> : <span class=\"title\">ScriptableObject</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> _name;<span class=\"comment\">//物品名字</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Sprite sprite;<span class=\"comment\">//物品图片</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> holdNum;<span class=\"comment\">//持有数量</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//使得文本框变大</span></span><br><span class=\"line\">    [<span class=\"meta\">TextArea</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span>  info;<span class=\"comment\">//物品介绍信息</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>背包的存储:<code>Bag.cs</code></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"meta\">CreateAssetMenu(fileName =<span class=\"meta-string\">&quot;New Bag&quot;</span>,menuName =<span class=\"meta-string\">&quot;Item/bag&quot;</span>)</span>]</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Bag</span> : <span class=\"title\">ScriptableObject</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建列表，存储物品</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">List</span>&lt;<span class=\"title\">Item</span>&gt; list</span> = <span class=\"keyword\">new</span> List&lt;Item&gt;();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>物品添加拾取功能<code>shiqu.cs</code></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Shiqu</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Item item;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Bag bag;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnTriggerEnter2D</span>(<span class=\"params\">Collider2D collision</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (collision.gameObject.CompareTag(<span class=\"string\">&quot;Player&quot;</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//Debug.Log(&quot;item&quot; + item.holdNum);</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (bag.list.Contains(item))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                item.holdNum += <span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"comment\">//Debug.Log(&quot;bag:&quot; + bag.list[0].holdNum);</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//bag.list.Add(item);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//如果有空位则添加</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; bag.list.Count; i++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (bag.list[i] == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        bag.list[i] = item;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            Destroy(gameObject);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        BagManager.instance.Refresh();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"背包显示\"><a href=\"#背包显示\" class=\"headerlink\" title=\"背包显示\"></a>背包显示</h1><p>主要思想是当玩家拾取物品、打开背包之后，都会进行一次刷新。</p>\n<p><code>BagManager.cs</code></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.UI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">BagManager</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> BagManager instance;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Bag bag;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject slotGrid;</span><br><span class=\"line\">    <span class=\"comment\">//public Slot slot;</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject emptySlot;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Text info;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//显示当前物品的列表，从bag里获取数据</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">List</span>&lt;<span class=\"title\">GameObject</span>&gt; slots</span> = <span class=\"keyword\">new</span> List&lt;GameObject&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (instance != <span class=\"literal\">null</span>)</span><br><span class=\"line\">            Destroy(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        instance = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEnable</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Refresh();</span><br><span class=\"line\">        info.text = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">UpdateInfo</span>(<span class=\"params\"><span class=\"built_in\">string</span> itemInfo</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        info.text = itemInfo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*生成格子，有多少物品生成多少格子</span></span><br><span class=\"line\"><span class=\"comment\">    public void CreateSolt(Item item)</span></span><br><span class=\"line\"><span class=\"comment\">    &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        Slot newslot = Instantiate(slot, instance.slotGrid.transform.position, Quaternion.identity);</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        newslot.gameObject.transform.SetParent(instance.slotGrid.transform,false);</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        newslot.image.sprite = item.sprite;</span></span><br><span class=\"line\"><span class=\"comment\">        newslot.item = item;</span></span><br><span class=\"line\"><span class=\"comment\">        newslot.num.text = item.holdNum.ToString();</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Refresh</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//先清空原物品对象和存储物品数据的列表</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; slotGrid.transform.childCount; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (slotGrid.transform.childCount == <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"comment\">//删除子集的空物体</span></span><br><span class=\"line\">            Destroy(slotGrid.transform.GetChild(i).gameObject);</span><br><span class=\"line\">            <span class=\"comment\">//清空列表</span></span><br><span class=\"line\">            slots.Clear();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//重新生成</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; bag.list.Count; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//CreateSolt(bag.list[i]);</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//添加空白格并设置父级</span></span><br><span class=\"line\">            slots.Add(Instantiate(emptySlot));</span><br><span class=\"line\">            <span class=\"comment\">//设置false会使得加载的时候图片不被缩放</span></span><br><span class=\"line\">            slots[i].transform.SetParent(slotGrid.transform,<span class=\"literal\">false</span>);</span><br><span class=\"line\">            <span class=\"comment\">//设置图片 数量</span></span><br><span class=\"line\">            slots[i].GetComponent&lt;Slot&gt;().SetItem(bag.list[i]);</span><br><span class=\"line\">            <span class=\"comment\">//设置物品的编号</span></span><br><span class=\"line\">            slots[i].GetComponent&lt;Slot&gt;().slotId = i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"物品拖拽与数据转换\"><a href=\"#物品拖拽与数据转换\" class=\"headerlink\" title=\"物品拖拽与数据转换\"></a>物品拖拽与数据转换</h1><p>当物品进行拖拽时，先将其父级更改为父级的父级，防止出现遮挡的问题，然后根据射线遮挡判断鼠标移动的位置。</p>\n<blockquote>\n<p>Slot的Item添加两个组件：</p>\n<p>Canvas Group：BlockRaycasts开启，当鼠标移动的时候知道移动的位置</p>\n<p>LayoutElement：IgnoreLayout开启，更改父级元素时，不会跳到进入到排序行列</p>\n</blockquote>\n<p><code>ItemOnDrag.cs</code></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"comment\">//引用</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.EventSystems;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用三个接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ItemOnDrag</span> : <span class=\"title\">MonoBehaviour</span>, <span class=\"title\">IBeginDragHandler</span>, <span class=\"title\">IDragHandler</span>, <span class=\"title\">IEndDragHandler</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//移动的物体的初始父级</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Transform originParent;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Bag bag;</span><br><span class=\"line\">    <span class=\"built_in\">int</span> currentItemId;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnBeginDrag</span>(<span class=\"params\">PointerEventData eventData</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        originParent = transform.parent;</span><br><span class=\"line\">        currentItemId = originParent.GetComponent&lt;Slot&gt;().slotId;</span><br><span class=\"line\">        <span class=\"comment\">//更换父级，使其置于上层不被遮挡</span></span><br><span class=\"line\">        transform.SetParent(transform.parent.parent);</span><br><span class=\"line\">        transform.position = eventData.position;</span><br><span class=\"line\">        <span class=\"comment\">//修改鼠标移动的物体的遮挡属性</span></span><br><span class=\"line\">        GetComponent&lt;CanvasGroup&gt;().blocksRaycasts = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnDrag</span>(<span class=\"params\">PointerEventData eventData</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        transform.position = eventData.position;</span><br><span class=\"line\">        Debug.Log(eventData.pointerCurrentRaycast.gameObject.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEndDrag</span>(<span class=\"params\">PointerEventData eventData</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//判断是否属于设置的界面外</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (eventData.pointerCurrentRaycast.gameObject != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//鼠标射线碰撞到的物体,可能碰到图片或文字</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (eventData.pointerCurrentRaycast.gameObject.name == <span class=\"string\">&quot;ItemImage&quot;</span> || eventData.pointerCurrentRaycast.gameObject.name == <span class=\"string\">&quot;Number&quot;</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//更换鼠标移动物体的位置和父级</span></span><br><span class=\"line\">                transform.SetParent(eventData.pointerCurrentRaycast.gameObject.transform.parent.parent);</span><br><span class=\"line\">                transform.position = eventData.pointerCurrentRaycast.gameObject.transform.parent.parent.position;</span><br><span class=\"line\">                <span class=\"comment\">//更换两个物体信息</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> temp = bag.list[currentItemId];</span><br><span class=\"line\">                bag.list[currentItemId] = bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent&lt;Slot&gt;().slotId];</span><br><span class=\"line\">                bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent&lt;Slot&gt;().slotId] = temp;</span><br><span class=\"line\">                <span class=\"comment\">//更换当前鼠标位置物体的位置和父级为原物体的位置与父级</span></span><br><span class=\"line\">                eventData.pointerCurrentRaycast.gameObject.transform.parent.position = originParent.position;</span><br><span class=\"line\">                eventData.pointerCurrentRaycast.gameObject.transform.parent.SetParent(originParent);</span><br><span class=\"line\"></span><br><span class=\"line\">                GetComponent&lt;CanvasGroup&gt;().blocksRaycasts = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//如果是空值，则交换空值的位置</span></span><br><span class=\"line\">            <span class=\"comment\">//更换当前鼠标位置物体的位置和父级为原物体的位置与父级</span></span><br><span class=\"line\">            <span class=\"comment\">//eventData.pointerCurrentRaycast.gameObject.transform.GetChild(0).SetParent(originParent);</span></span><br><span class=\"line\">            <span class=\"comment\">//eventData.pointerCurrentRaycast.gameObject.transform.GetChild(0).position = originParent.position;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (eventData.pointerCurrentRaycast.gameObject.name == <span class=\"string\">&quot;Slot(Clone)&quot;</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                transform.SetParent(eventData.pointerCurrentRaycast.gameObject.transform);</span><br><span class=\"line\">                transform.position = eventData.pointerCurrentRaycast.gameObject.transform.position;</span><br><span class=\"line\"></span><br><span class=\"line\">                bag.list[eventData.pointerCurrentRaycast.gameObject.GetComponentInParent&lt;Slot&gt;().slotId] = bag.list[currentItemId];</span><br><span class=\"line\">                <span class=\"comment\">//判断是不是同一个位置</span></span><br><span class=\"line\">                <span class=\"comment\">//同一位置则不能设置为null</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (eventData.pointerCurrentRaycast.gameObject.GetComponentInParent&lt;Slot&gt;().slotId != currentItemId)</span><br><span class=\"line\">                    bag.list[currentItemId] = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                GetComponent&lt;CanvasGroup&gt;().blocksRaycasts = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//如果是则返回原位置</span></span><br><span class=\"line\">        transform.SetParent(originParent);</span><br><span class=\"line\">        transform.position = originParent.position;</span><br><span class=\"line\">        GetComponent&lt;CanvasGroup&gt;().blocksRaycasts = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"窗口移动\"><a href=\"#窗口移动\" class=\"headerlink\" title=\"窗口移动\"></a>窗口移动</h1><p><code>MoveBag.cs</code></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.EventSystems;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">MoveBag</span> : <span class=\"title\">MonoBehaviour</span>,<span class=\"title\">IDragHandler</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    RectTransform rectTransform;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        rectTransform = GetComponent&lt;RectTransform&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnDrag</span>(<span class=\"params\">PointerEventData eventData</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//移动anchor为鼠标移动的距离</span></span><br><span class=\"line\">        <span class=\"comment\">//调试的时候可能会不跟手，build之后不会出现这种情况</span></span><br><span class=\"line\">        rectTransform.anchoredPosition += eventData.delta;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Start is called before the first frame update</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"3DURP游戏制作笔记","date":"2022-05-09T16:00:00.000Z","description":null,"top_image":"/img/002.png","cover":"/img/002.png","_content":"\n# 3DURP游戏制作笔记\n\n> 感谢麦扣老师！！！\n>\n> [b站地址](https://space.bilibili.com/370283072)\n>\n> 这些是我跟着学习敲得代码，有些可能不一样，完全复制肯定会有问题，主要用来给学习的同学纠错\n\n\n\n### 游戏的创建与地图的铺设\n\n使用到的插件有**Pro Grids**,**ProBuilder**,**PloyBrush**\n\n1. 使用到的地图模板为正常模板，然后在Project文件夹中新建URP。\n\n2. 右上角Edit > Project Setting\n   1. 将Graphics的Scirptable Render Pipeline Settings修改为创建的**UniversalRenderPiepelineAsset**\n   2. Quality的Rendering修改为创建的**UniversalRenderPiepelineAsset**\n\n3. 使用素材时，升级素材的URP。Edit > Render Pipeline > Universal Render Pipeline > Upgrade Project Materials To UniversalRP Materials\n\n4. 光照的设置 Windows > Rendering >Lighting。在Scene窗口生成一个New Lighting Settings。Lighting Mode一般为Baked Indirect（简介烘焙），Lightmapper一般选择为GPU，取消勾选Auto Generate，然后进行Generate Lighting。\n\n   > 如果发生场景颜色发生改变，不是原本的颜色，可以在Lighting > Environment里选择 Environment Lighting > Source 设置为Color。\n\n5. 调整摄像机的技巧：Ctrl + Shift + F，调整物体坐标轴吸附 V键。\n\n6. 导入插件**PloyBrush**并且在导入时将Sample中的URP文件一并导入。 \n\n   > 使用Ploybrush的笔刷刷颜色的时候，发现刷不上颜色的原因是，物体的材质并没有使用Ploybrush的shader创建的材质，用shader创建一个新的材质并修改物体的材质（拖拽也可以），然后进行颜色的涂抹\n\n7. 平台的大小和少数的顶点影响了地图的创作，所以需要**Probuilder**来生成更精致的地图平台\n\n   > 同时按住**Ctrl**和**Alt**键点击Icon的齿轮，会调出单独的设置\n   >\n   > 使用**Center Pivot**可以调整中心点\n   >\n   > 关于如何使用preview package：Edit > Project Setting > Package manager ,**Enable Preview Packages**\n\n### 地图的烘Bake\n\n窗口在 Window > AI > Navigation\n\n1. 设置地面为Navigation static，在Navigation > Object里的Navigation Area 设置为Walkable。\n\n   > - 选中物体之后，在Inspector窗口里，第一行有选择是否为Static，下拉可选择类型\n   > - 选中物体之后，在Navigation > Object里设置Navigation static为**true**\n\n2. 选中不可移动的物体，比如树木石头等，批量设置为Navigation static，特殊的除外。\n3. 为角色添加Navigation agent 组件，设置人物的圆柱体大小以及宽度。\n4. 在Navigation > Bake 里同样设置为人物的圆柱体大小以及宽度等其他数据，然后点击bake，在地图上显示为蓝色的为可walk区域。\n5. 如果有物体可以移动，并且不想发生穿模效果，可选择添加组件Nav Mesh Obstacle,设置Carve为**True**，就会在地面同时切割出一部分，人物不可walk的区域。\n\n### 鼠标控制移动以及贴图\n\n**所有管理类都不要忘了在游戏里创建一个空对象，添加上脚本**\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing System;\n\n\npublic class MouseManager : SingleTon<MouseManager>\n{\n\n\t//事务委托\n    public event Action<Vector3> OnMouseClicked;\n    public event Action<GameObject> OnClickedEnemy;\n\n    RaycastHit hitInfo;\n\t//鼠标贴图\n    public Texture2D point, doorway, attack, target, arrow;\n    \n    protected override void Awake()\n    {\n        base.Awake();\n    }\n\n    void Update()\n    {\n        SetCursorTexture();\n        MouseControl();\n    }\n\n    void SetCursorTexture()\n    {\n        Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);\n        if(Physics.Raycast(ray,out hitInfo))\n        {\n            //切换鼠标贴图\n            switch (hitInfo.collider.gameObject.tag)\n            {\n                case \"Ground\":\n                    Cursor.SetCursor(target, new Vector2(16, 16),CursorMode.Auto);\n                    break;\n                case \"Enemy\":\n                    Cursor.SetCursor(attack, new Vector2(2, 2), CursorMode.Auto);\n                    break;\n                case \"Attackable\":\n                    Cursor.SetCursor(attack, new Vector2(2, 2), CursorMode.Auto);\n                    break;\n                case \"Portal\":\n                    Cursor.SetCursor(doorway, new Vector2(2, 2), CursorMode.Auto);\n                    break;\n            }\n        }\n    }\n\n    void MouseControl()\n    {\n        if (Input.GetMouseButtonDown(0) && hitInfo.collider != null)\n        {\n            if (hitInfo.collider.gameObject.CompareTag(\"Ground\"))\n            {\n                OnMouseClicked?.Invoke(hitInfo.point);\n            }else if (hitInfo.collider.gameObject.CompareTag(\"Enemy\"))\n            {\n                OnClickedEnemy?.Invoke(hitInfo.collider.gameObject);\n            }\n            else if (hitInfo.collider.gameObject.CompareTag(\"Attackable\"))\n            {\n                OnClickedEnemy?.Invoke(hitInfo.collider.gameObject);\n            }\n            else if (hitInfo.collider.gameObject.CompareTag(\"Portal\"))\n            {\n                OnMouseClicked?.Invoke(hitInfo.point);\n            }\n        }\n    }\n}\n\n```\n\n**关于鼠标的贴图**\n\n鼠标贴图为**Texture**,一般为无背景的图片，加载到Unity之后，选中贴图并把Texture type修改为**Cursor**。\n\n### Cineramachine\n\n选中Main camera，Gameobject > Align View to Selected,将主相机锁定视角\n\n状态栏Cineramachine选择一个合适的摄像机 ，当前选择的为CinemachineVirtualCanmera,取消主摄像机的Audio Listener，Body选择Framing Transposer,Aim选择Nothing\n\nFollow 选择为人物对象 ，如果人物坐标轴在下方，可以在人物对象里新建一个空物体，然后将坐标轴移动到人物中心位置，将物体拖拽到**Follow**。\n\n> **BODY**\n>\n> - Do Nothing：不移动虚拟相机\n> - Framing Transposer：跟随目标移动，并在屏幕空间保持相机和跟随目标的相对位置。\n> - Hard Lock to Target：虚拟相机和跟随目标使用相同位置。\n> - Orbital Transposer：相机和跟随目标的相对位置是可变的，还能接收用户的输入。常见于玩家控制的相机。\n> - Tracked Dolly：相机沿着预先设置的轨道移动。\n> - Transposer：跟随目标移动，并在世界空间保持相机和跟随目标的相对位置固定。\n>\n> **AIM**\n>\n> - Do Nothing: 不控制相机的旋转。\n> - Composer: 保持目标物体在镜头内\n> - Group Composer: 保持多个目标在镜头内\n>\n> - Hard Look At: 保持目标在镜头的中心\n> - POV: 基于玩家的输入旋转相机\n\n**添加环境迷雾**\n\nWindow > Rendering > Lighting > Environment > Fog设置为True\n\n> 如果Sence场景没有显示Fog，则需要在窗口中打开Fog开关\n>\n> Mode：Linear 为最近最远处能见度\n\n**Global** **Volume**\n\n对场景进行后处理，add 其他功能对场景进行渲染\n\n> 如果场景没有显示出效果，在Main Camera > Rendering > Post Peocessing 设置为True\n\n### 遮挡剔除\n\n\n\n通过**Shader**创建材质放入到URP的 UniversalRenderPipelineAsset_Renderer ，新建Add Renderer Feature,选择被遮挡的Layer Mask，可以多选，然后设置被遮挡后的材质，Depth设置为True，Depth Test设置为Greater。当被遮挡物体层级Greater时，显示被遮挡后的材质。\n\n同样Add Renderer Feature，选择相同被遮挡的Layer Mask，其他不做修改，当不被遮挡时显示原有材质\n\n**关于遮挡材质的制作**\n\nshader创建：Project > 右键 > Shader > URP >UnLit Shader Graph\n\n> Graph Inspector > Grapj Settings > Universal > Alpha Clip,打开Alpha透明通道\n\n1. 使用Fresnel Effect 制作遮挡的效果，通过新建变量Color修改颜色。通过Multiply混合，传给Base color。\n2. Dither制作噪点效果，新建Float修改Dither的X值，out传给Fragment > Alpha通道\n3. 创建Flaot 修改Alpha Threshold。\n4. 选择Shader创建材质\n\n**关于鼠标射线遮挡**\n\n- 选中遮挡的物体，设置层级为Ignore Raycast\n- 关闭遮挡物体的Mesh Collider\n\n### EnemyController\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.AI;\n\npublic enum EnemyStates {GUARD,PARTOL,CHASE,DEAD }\n//通过代码添加组件\n[RequireComponent(typeof(NavMeshAgent))]\n[RequireComponent(typeof(CharacterStats))]\n\n//使用接口\npublic class EnemyController : MonoBehaviour,IEndGameObserver\n{\n    NavMeshAgent agent;\n    EnemyStates enemyStates;\n    Animator anim;\n    protected CharacterStats characterStats;\n    Collider coll;\n    //攻击范围 \n    public float sightRadius;\n    //巡逻范围\n    public float partolRadius;\n    public bool isGuard;\n    //巡逻停留时间\n    public float lookAtTime;\n    float remainLookAtTime;\n    float speed;\n    //cd时间\n    float lastAttackTime;\n    //下一个前往的巡逻点\n    Vector3 wayPoint;\n    //起始点\n    Vector3 guardPoint;\n    Quaternion guardRotation;\n    protected GameObject attackTarget;\n    bool isWalk, isChase, isFollow, isDie;\n    bool playerDie;\n    private void Awake()\n    {\n        agent = GetComponent<NavMeshAgent>();\n        anim = GetComponent<Animator>();\n        characterStats = GetComponent<CharacterStats>();\n        coll = GetComponent<Collider>();\n        //保存原有速度；\n        speed = agent.speed;\n        guardPoint = transform.position;\n        remainLookAtTime = lookAtTime;\n        lastAttackTime = characterStats.CoolDown;\n        guardRotation = transform.rotation;\n    }\n    void Start()\n    {\n        if (isGuard)\n        {\n            enemyStates = EnemyStates.GUARD;\n        }\n        else\n        {\n            enemyStates = EnemyStates.PARTOL;\n            GetNewPartolPoint();\n        }\n        //将对象添加进gamemanager里，用于广播\n        GameManager.Instance.AddObserver(this);\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        if (characterStats.CurrentHealth == 0)\n        {\n            isDie = true;\n        }\n        if (!playerDie)\n        {\n            SwitchStates();\n            SwitchAnim();\n            if (lastAttackTime > 0f)\n            {\n                lastAttackTime -= Time.deltaTime;\n            }\n        }\n    }\n    \n    //private void OnEnable()\n    //{\n    //    Gamemanager.Instance.AddObserver(this);\n    //}\n\n    private void OnDisable()\n    {\n        if (!GameManager.isInitialized) return;\n        GameManager.Instance.RemoveObserver(this);\n    }\n\n    void SwitchStates()\n    {\n        if (isDie)\n        {\n            enemyStates = EnemyStates.DEAD;\n        }\n        else if (FindPlayer())\n        {\n            enemyStates = EnemyStates.CHASE;\n            \n        }\n        switch (enemyStates)\n        {\n            case EnemyStates.GUARD:\n                isChase = false;\n                isWalk = false;\n                if (transform.position!=guardPoint)\n                {\n                    isWalk = true;\n                    agent.isStopped = false;\n                    agent.destination = guardPoint;\n                    if(Vector3.SqrMagnitude(guardPoint - transform.position) <= agent.stoppingDistance)\n                    {\n                        isWalk = false;\n                        agent.isStopped = true;\n                        //旋转会初始的角度\n                        Quaternion.Lerp(transform.rotation, guardRotation, 0.1f);\n                    }\n                }\n                break;\n            case EnemyStates.PARTOL:\n                isChase = false;\n                agent.speed = speed * 0.5f;\n                if (Vector3.Distance(transform.position, wayPoint) <= 1)\n                {\n                    isWalk = false;\n                    if (remainLookAtTime < 0f)\n                    {\n                        GetNewPartolPoint();\n                        remainLookAtTime = lookAtTime;\n                    }\n                    else\n                        remainLookAtTime -= Time.deltaTime;\n                }\n                else\n                {\n                    isWalk = true;\n                    agent.destination = wayPoint;\n                }\n                break;\n            case EnemyStates.CHASE:\n\n                agent.speed = speed;\n                isWalk = false;\n                isChase = true;\n                //脱战\n                if (!FindPlayer())\n                {\n                    isFollow = false;\n                    agent.destination = transform.position;\n                    if (remainLookAtTime > 0)\n                    {\n                        remainLookAtTime -= Time.deltaTime;\n                    }\n                    else\n                    {\n                        if (isGuard)\n                        {\n                            enemyStates = EnemyStates.GUARD;\n                        }\n                        else\n                        {\n                            enemyStates = EnemyStates.PARTOL;\n                        }\n                    }\n                }\n                else\n                {\n                    //追击\n                    isFollow = true;\n                    agent.isStopped = false;\n                    agent.destination = attackTarget.transform.position;\n                    //判断是否追击到\n                    if (TargetInAttackRange() || TargetInSkillRange())\n                    {\n                        isFollow = false;\n                        agent.isStopped = true;\n                        if (lastAttackTime < 0f)\n                        {\n                            lastAttackTime = characterStats.CoolDown;\n                            //暴击判断\n                            characterStats.isCritical = Random.value < characterStats.CriticalChance;\n                            \n                            Attack();\n                        }\n                    }\n                }\n\n                break;\n            case EnemyStates.DEAD:\n                //enemy死亡时不会发生继续攻击的情况\n                coll.enabled = false;\n                \n                //agent.enabled = false;\n                //设置之后不会阻挡Player行动\n                agent.radius = 0f;\n                Destroy(gameObject, 2f);\n                break;\n            default:\n                break;\n        }\n    }\n    void Attack()\n    {\n        transform.LookAt(attackTarget.transform);\n        anim.SetBool(\"Critical\", characterStats.isCritical);\n        if (TargetInAttackRange())\n        {\n            anim.SetTrigger(\"Attack\");\n        }\n        if(TargetInSkillRange())\n        {\n            anim.SetTrigger(\"Skill\");\n        }\n    }\n\n    bool FindPlayer()\n    {\n        Collider[] colliderNum = Physics.OverlapSphere(transform.position, sightRadius);\n        foreach (var collider in colliderNum)\n        {\n            \n            if (collider.gameObject.CompareTag(\"Player\"))\n            {\n                attackTarget = collider.gameObject;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    void SwitchAnim()\n    {\n        anim.SetBool(\"Walk\", isWalk);\n        anim.SetBool(\"Chase\", isChase);\n        anim.SetBool(\"Follow\", isFollow);\n        anim.SetBool(\"Die\", isDie);\n    }\n\n    private void OnDrawGizmosSelected()\n    {\n        //画出攻击范围圈\n        Gizmos.color = Color.green;\n        Gizmos.DrawWireSphere(transform.position, sightRadius);\n    }\n    \n    void GetNewPartolPoint()\n    {\n        float ran_x = Random.Range(-partolRadius, partolRadius);\n        float ran_z = Random.Range(-partolRadius, partolRadius);\n        //不修改高度，防止坑坑洼洼的地面\n        //guardPoint是为了随机在初始位置点的随机移动\n        wayPoint = new Vector3(guardPoint.x + ran_x, transform.position.y, guardPoint.z + ran_z);\n        NavMeshHit hit;\n        //NavMesh.SamplePosition（）方法的最后一位为窗口 Navigation > Area的序列，从1开始\n        //方法为 在waypoint的sightRadius范围内寻找1层级（可移动到）的点\n        //方法返回的为True和False\n        wayPoint = NavMesh.SamplePosition(wayPoint, out hit, sightRadius,1) ? hit.position : transform.position;\n        \n\n    }\n    bool TargetInAttackRange()\n    {\n        if (attackTarget != null)\n        {\n            return Vector3.Distance(attackTarget.transform.position, transform.position) < characterStats.AttackRange;\n        }\n        else\n        {\n            return false;\n        }\n    }\n    bool TargetInSkillRange()\n    {\n        if (attackTarget != null)\n        {\n            return Vector3.Distance(attackTarget.transform.position, transform.position) < characterStats.SkillRange;\n        }\n        else\n        {\n            return false;\n        }\n    }\n    void Hit()\n    {\n        if (attackTarget != null && transform.IsFacingTarget(attackTarget.transform))\n        {\n            var targetStats = attackTarget.GetComponent<CharacterStats>();\n            characterStats.TakeDamage(characterStats, targetStats);\n        }\n    }\n\n    public void EndsNotify()\n    {\n        isChase = false;\n        isWalk = false;\n        attackTarget = null;\n        playerDie = true;\n        anim.SetBool(\"Victory\", true);\n    }\n}\n\n```\n\n### PlayController\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.AI;\n\npublic class PlayerController : MonoBehaviour\n{\n    public float lastAttackTime;\n    //攻击目标对象\n    GameObject attackTarget;\n    CharacterStats characterStats;\n    NavMeshAgent agent;\n    Animator anim;\n    bool isDie;\n    float stopDistance;\n    private void Awake()\n    {\n        agent = GetComponent<NavMeshAgent>();\n        anim = GetComponent<Animator>();\n        characterStats = GetComponent<CharacterStats>();\n\n    }\n\n    private void Start()\n    {\n        //添加事件\n        MouseManager.Instance.OnMouseClicked += MoveToTarget;\n        MouseManager.Instance.OnClickedEnemy += EventAttack;\n        \n\t\t//注册Gamemanager的广播\n        GameManager.Instance.RigisterPlayer(characterStats);\n        stopDistance = agent.stoppingDistance;\n    }\n    private void Update()\n    {\n        isDie = characterStats.CurrentHealth == 0;\n        if (isDie)\n        {\n            GameManager.Instance.NotifyObservers();\n        }\n        AnimationChange();\n        if(lastAttackTime>0f)\n            lastAttackTime -= Time.deltaTime;\n    }\n    void MoveToTarget(Vector3 target)\n    {\n        if (isDie) return;\n        agent.isStopped = false;\n        agent.stoppingDistance = stopDistance;\n        StopAllCoroutines();\n        agent.destination = target;\n    }\n\n    void AnimationChange()\n    {\n        anim.SetFloat(\"Speed\", agent.velocity.sqrMagnitude);\n        anim.SetBool(\"Die\", isDie);\n    }\n\n    void EventAttack(GameObject target)\n    {\n        if (isDie) return;\n\n        if (target != null)\n        {\n            attackTarget = target;\n            StartCoroutine(\"MoveToAttackTarget\");\n        }\n    }\n    //动画事件\n    void Hit()\n    {\n        if (attackTarget.CompareTag(\"Attackable\"))\n        {\n            if (attackTarget.GetComponent<Rock>())\n            {\n                //在空中也可以击飞\n                attackTarget.GetComponent<Rock>().rockStates = Rock.RockStates.HitEnemy;\n                //赋予初始速度，防止fixudate时修改rock状态\n                attackTarget.GetComponent<Rigidbody>().velocity = Vector3.one;\n                attackTarget.GetComponent<Rigidbody>().AddForce(transform.forward * 20f,ForceMode.Impulse);\n\n            }\n        }\n        else\n        {\n            var targetStats = attackTarget.GetComponent<CharacterStats>();\n            characterStats.TakeDamage(characterStats, targetStats);\n        }\n    }\n    IEnumerator MoveToAttackTarget()\n    {\n        agent.stoppingDistance = characterStats.AttackRange;\n        agent.isStopped = false;\n        while (Vector3.Distance(attackTarget.transform.position, transform.position) > characterStats.AttackRange)\n        {\n            agent.destination = attackTarget.transform.position;\n            yield return null;\n        }\n        agent.isStopped = true;\n        if (lastAttackTime < 0)\n        {\n            transform.LookAt(attackTarget.transform.position);\n            //暴击率的计算\n            characterStats.isCritical = Random.value < characterStats.CriticalChance;\n            anim.SetBool(\"Critical\",characterStats.isCritical);\n            anim.SetTrigger(\"Attack\");\n            //重置冷却时间\n            lastAttackTime = characterStats.CoolDown;\n        }\n    }\n}\n\n```\n\n### CharacterStats\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing System;\npublic class CharacterStats : MonoBehaviour\n{\n\n    public event Action<int, int> UpdateHealthBarOnAttack;\n\n    public Character_SO templateData;\n    public Character_SO character;\n    public AttackSO attackSO;\n    [HideInInspector]\n    public bool isCritical;\n\n    private void Awake()\n    {\n        //用模板为character生成一组数据，防止多个enemy访问同一组数据\n        if (templateData != null)\n        {\n            character = Instantiate(templateData);\n        }\n    }\n    public int MaxHealth\n    {\n        get { if (character != null) { return character.maxHealth; } else { return 0; } }\n        set { character.maxHealth = value; }\n    }\n    public int CurrentHealth\n    {\n        get { if (character != null) { return character.currentHealth; } else { return 0; } }\n        set { character.currentHealth = value; }\n    }\n    public int BaseDefence\n    {\n        get { if (character != null) { return character.baseDefence; } else { return 0; } }\n        set { character.baseDefence = value; }\n    }\n    public int CurrentDefence\n    {\n        get { if (character != null) { return character.currentDefence; } else { return 0; } }\n        set { character.currentDefence = value; }\n    }\n    public float AttackRange { get {  return attackSO.attackRange; } }\n    public float SkillRange { get { return attackSO.skillRange; } }\n    public float CoolDown { get { return attackSO.coolDown; } }\n    public float MinDamage { get { return attackSO.minDamage; } }\n    public float MaxDamage { get { return attackSO.maxDamage; } }\n\n    public float CriticalMultiplier { get { return attackSO.criticalMultiplier; } }\n    public float CriticalChance { get { return attackSO.criticalChance; } }\n    \n    public void TakeDamage(CharacterStats attacker,CharacterStats defender)\n    {\n        int damage = Mathf.Max(attacker.CurrentDamage() - defender.CurrentDefence, 0);\n        defender.CurrentHealth = Mathf.Max(defender.CurrentHealth - damage, 0);\n        //defender受伤的动画 暴击才会有\n        if (attacker.isCritical)\n        {\n            defender.GetComponent<Animator>().SetTrigger(\"Hit\");\n        }\n\t\t//修改防御者血条\n        defender.UpdateHealthBarOnAttack?.Invoke(defender.CurrentHealth, defender.MaxHealth);\n        if (defender.CurrentHealth <= 0)\n        {\n            //更新攻击者经验\n            attacker.character.UpdateExp(defender.character.killPoint);\n        }\n    }\n\n    public void TakeDamage(int damage,CharacterStats defender)\n    {\n        int currentDamage = Mathf.Max(damage - defender.CurrentDefence, 0);\n        defender.CurrentHealth = Mathf.Max(defender.CurrentHealth - currentDamage, 0);\n        UpdateHealthBarOnAttack?.Invoke(defender.CurrentHealth, defender.MaxHealth);\n\n    }\n\n    int CurrentDamage()\n    {\n        float damage = UnityEngine.Random.Range(MinDamage, MaxDamage); ;\n        if (isCritical)\n        {\n            damage *= CriticalMultiplier;\n            Debug.Log(\"暴击：\" + damage);\n\n        }\n        return (int)damage;\n    }\n}\n\n```\n\n**Character_SO**\n\n```csharp\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\n\n//filename为创建的文件的文件名，menuName为文件夹目录层级名字\n[CreateAssetMenu(fileName = \"New Data\", menuName = \"Character Stats/Data\")]\n\npublic class Character_SO : ScriptableObject\n{\n    [Header(\"Stats Info\")]\n    public int maxHealth;\n    public int currentHealth;\n    public int baseDefence;\n    public int currentDefence;\n\n    [Header(\"Kill\")]\n    public int killPoint;\n\n    [Header(\"Level\")]\n    public int currentLevel;\n    public int maxLevel;\n    public int baseExp;\n    public int currentExp;\n    public float levelBuff;\n\n    public void UpdateExp(int point)\n    {\n        currentExp += point;\n        if (currentExp >= baseExp)\n        {\n            currentExp -= baseExp;\n            LevelUP();\n        }\n    }\n\n    private void LevelUP()\n    {\n        currentLevel = Mathf.Clamp(currentLevel + 1, 0, maxLevel);\n        baseExp += (int)(baseExp * LevelMultiplier);\n        maxHealth = (int)(maxHealth * LevelMultiplier);\n        currentHealth = maxHealth;\n    }\n    public float LevelMultiplier\n    {\n        get {return 1+(currentLevel-1)*levelBuff ; }\n    }\n}\n\n```\n\n**Attack_SO**\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName =\"New Attack\",menuName =\"Attack/Attack Data\")]\npublic class AttackSO : ScriptableObject\n{\n    [Header(\"Attack Info\")]\n    public float attackRange;\n    public float skillRange;\n    public float coolDown;\n    public int minDamage;\n    public int maxDamage;\n    public float criticalMultiplier;\n    public float criticalChance;\n    \n}\n\n```\n\n### 泛型单例模式Singleton\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class SingleTon<T> : MonoBehaviour where T:SingleTon<T>\n{\n    private static T instance;\n\n    public static T Instance\n    {\n        get { return instance; }\n    }\n\n    protected virtual void Awake()\n    {\n        if (instance != null)\n        {\n            Destroy(gameObject);\n        }\n        else\n        {\n            instance = (T)this;\n        }\n    }\n    public static bool isInitialized\n    {\n         get { return instance != null; }\n    }\n}\n\n```\n\n### 接口Observer Pattern\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic interface IEndGameObserver\n{\n    //只定义，不实现留给使用的实现这个方法\n    void EndsNotify();\n}\n\n```\n\n### GameManger\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class GameManager : SingleTon<GameManager>\n{\n    public CharacterStats playerStats;\n\t\n    //接口类型\n    List<IEndGameObserver> endGameObeverses = new List<IEndGameObserver>();\n    \n    protected override void Awake()\n    {\n        base.Awake();\n    }\n    public void RigisterPlayer(CharacterStats characterStats)\n    {\n        playerStats = characterStats;\n    }\n\n    public void AddObserver(IEndGameObserver observer)\n    {\n        endGameObeverses.Add(observer);\n    }\n    public void RemoveObserver(IEndGameObserver observer)\n    {\n        endGameObeverses.Remove(observer);\n    }\n\n    public void NotifyObservers()\n    {\n        //遍历添加进来的对象\n        //挨个调用EndsNotify（）方法\n        foreach (var observer in endGameObeverses)\n        {\n            observer.EndsNotify();\n        }\n    }\n}\n\n```\n\n### 设置兽人Grunt\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.AI;\n\n//继承于EnemyController\npublic class Grunt : EnemyController\n{\n    [Header(\"GRUNT推力\")]\n    public float kickForce = 15f;\n    //动画事件\n    void KickOff()\n    {\n        if (attackTarget != null)\n        {\n            transform.LookAt(attackTarget.transform);\n            Vector3 direction = attackTarget.transform.position - transform.position;\n            direction.Normalize();\n            //打断player行动，进行击退\n            attackTarget.GetComponent<NavMeshAgent>().isStopped = true;\n            attackTarget.GetComponent<NavMeshAgent>().velocity = direction * kickForce;\n            attackTarget.GetComponent<Animator>().SetTrigger(\"Dizzy\");\n        }\n    }\n}\n\n```\n\n### 拓展方法Extension Method\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\n//拓展方法 \npublic static class ExtensionMethod \n{\n    private const float dotThreshold = 0.5f;\n\n    //拓展的是this后面的方法,后面的为方法所需要的函数\n    //使用方法 :transform.IsFacingTarget(target)\n    public static bool IsFacingTarget(this Transform transform,Transform target)\n    {\n        //向量OA-OB=BA;O为原点；\n        Vector3 vectorToTarget = target.position - transform.position;\n        vectorToTarget.Normalize();\n        //vector3.dot 为看向的方向与vectortoTarget的方向的夹角，正对着为1，背对着为-1，左右为0；\n        float dot = Vector3.Dot(transform.forward, vectorToTarget);\n        return dot >= dotThreshold;\n    }\n\n}\n```\n\n### 石头人Golem\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.AI;\n\npublic class Golem : EnemyController\n{\n    [Header(\"GRUNT推力\")]\n    public float kickForce = 25f;\n\n    public GameObject rockPerfab;\n    public Transform handTransform;\n    //animation event\n    void KickOff()\n    {\n        if (attackTarget != null && transform.IsFacingTarget(attackTarget.transform))\n        {\n            var targetStats = attackTarget.GetComponent<CharacterStats>();\n            Vector3 direction = attackTarget.transform.position - transform.position;\n            direction.Normalize();\n            transform.LookAt(attackTarget.transform);\n            attackTarget.GetComponent<NavMeshAgent>().isStopped = true;\n            attackTarget.GetComponent<NavMeshAgent>().velocity = direction * kickForce;\n            attackTarget.GetComponent<Animator>().SetTrigger(\"Dizzy\");\n            characterStats.TakeDamage(characterStats, targetStats);\n        }\n    }\n    //animation event\n    void ThrowRock()\n    {\n        if (attackTarget != null)\n        {\n            GameObject rock = Instantiate(rockPerfab, handTransform.position, Quaternion.identity);\n            rock.GetComponent<Rock>().target = attackTarget;\n        }\n    }\n}\n\n```\n\n### 扔石头\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.AI;\nusing UnityEngine.Animations;\n\npublic class Rock : MonoBehaviour\n{\n    public enum RockStates { HitPlayer,HitEnemy,HitNothing}\n    public RockStates rockStates;\n\n    public GameObject target;\n    public GameObject rockBreak;\n    public float force;\n    public int damage;\n    Vector3 direction;\n    Rigidbody rb;\n    void Start()\n    {\n        rb = GetComponent<Rigidbody>();\n        rb.velocity = Vector3.one;\n        rockStates = RockStates.HitPlayer;\n        FlyToTarget();\n    }\n\n    private void FixedUpdate()\n    {\n        if (rb.velocity.sqrMagnitude < 0.5f)\n        {\n            rockStates = RockStates.HitNothing;\n        }\n    }\n   \n    void FlyToTarget()\n    {\n        if (target == null)\n            target = FindObjectOfType<PlayerController>().gameObject;\n        direction = (target.transform.position - transform.position+Vector3.up ).normalized;\n        rb.AddForce(direction * force, ForceMode.Impulse);\n    }\n\n    private void OnCollisionEnter(Collision collision)\n    {\n        switch (rockStates)\n        {\n            case RockStates.HitPlayer:\n                if (collision.collider.CompareTag(\"Player\"))\n                {\n                    collision.gameObject.GetComponent<NavMeshAgent>().isStopped = true;\n                    collision.gameObject.GetComponent<NavMeshAgent>().velocity = direction * force;\n                    collision.gameObject.GetComponent<Animator>().SetTrigger(\"Dizzy\");\n\n                    rockStates = RockStates.HitNothing;\n                    collision.gameObject.GetComponent<CharacterStats>().TakeDamage(damage, collision.gameObject.GetComponent<CharacterStats>());\n                }\n                break;\n            case RockStates.HitEnemy:\n                //如果有这个组件返回true；\n                if (collision.gameObject.GetComponent<Golem>())\n                {\n                    collision.gameObject.GetComponent<CharacterStats>().TakeDamage(damage, collision.gameObject.GetComponent<CharacterStats>());\n                    \n                    //攻击石头人之后，石头碎裂生成粒子特效\n                    Instantiate(rockBreak, transform.position, Quaternion.identity);\n                    Destroy(gameObject);\n                }\n                break;\n            case RockStates.HitNothing:\n                break;\n            default:\n                break;\n        }\n\n\n    }\n}\n\n```\n\n**粒子特效**\n\nHierarchy > Effects > Particle System\n\n### 血条显示 HealthBar\n\n**挂载在enemy身上**\n\n```csharp\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\npublic class HealthBar : MonoBehaviour\n{\n    public GameObject healthBarUiPerfab;\n\t//血条的位置，enemy设置一个空对象，调整位置为头部上方\n    public Transform barPoint;\n    //是否一直显示 显示的时长\n    public bool alwaysVisible;\n    public float visibleTime;\n    float timeLeft;\n\n    Image healthSlider;\n    Transform UIBar;\n    Transform cam;\n    CharacterStats currentStats;\n\n    private void Awake()\n    {\n        //获取组件\n        currentStats = GetComponent<CharacterStats>();\n        //添加事务\n        currentStats.UpdateHealthBarOnAttack += UpdateHealthBar;\n    }\n    private void OnEnable()\n    {\n        cam = Camera.main.transform;\n        foreach (Canvas canvas in FindObjectsOfType<Canvas>())\n        {\n            if (canvas.renderMode == RenderMode.WorldSpace)\n            {\n                UIBar = Instantiate(healthBarUiPerfab, canvas.transform).transform;\n                healthSlider = UIBar.GetChild(0).GetComponent<Image>();\n                UIBar.gameObject.SetActive(alwaysVisible);\n            }\n        }\n\n    }\n\n    private void UpdateHealthBar(int currentHealth, int Maxhealth)\n    {\n        if (currentHealth <= 0)\n            Destroy(UIBar.gameObject);\n\n        UIBar.gameObject.SetActive(true);\n        //攻击时重置显示剩余时间\n        timeLeft = visibleTime;\n        float sliderPercent = (float)currentHealth / Maxhealth;\n        //image Type设置为Filled，fillmethod设置为Horizontal\n        healthSlider.fillAmount = sliderPercent;\n\n    }\n    private void LateUpdate()\n    {\n        if (UIBar != null)\n        {\n            //位置\n            UIBar.position = barPoint.position;\n            //ui的方向与摄像机的方向相反\n            UIBar.forward = -cam.forward;\n\n            if (timeLeft <= 0f&&!alwaysVisible)\n            {\n                UIBar.gameObject.SetActive(false);\n            }\n            else\n            {\n                timeLeft -= Time.deltaTime;\n\n            }\n        }\n\n\n    }\n}\n\n```\n\n### PlayerUI\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class PlayHealthBar : MonoBehaviour\n{\n    Text level;\n    Image healthSlider;\n    Image expSlider;\n\n    private void Awake()\n    {\n        level = transform.GetChild(2).GetComponent<Text>();\n        healthSlider = transform.GetChild(0).GetChild(0).GetComponent<Image>();\n        expSlider = transform.GetChild(1).GetChild(0).GetComponent<Image>();\n    }\n\n    private void LateUpdate()\n    {\n        level.text = \"Level  \" + GameManager.Instance.playerStats.character.currentLevel.ToString(\"00\");\n\n        UpdateHealth();\n\n        UpdateExp();\n    }\n\n    void UpdateHealth()\n    {\n        float sliderPercent = (float)GameManager.Instance.playerStats.CurrentHealth / GameManager.Instance.playerStats.MaxHealth;\n        healthSlider.fillAmount = sliderPercent;\n    }\n    void UpdateExp()\n    {\n        float sliderPercent = (float)GameManager.Instance.playerStats.character.currentExp / GameManager.Instance.playerStats.character.baseExp;\n        expSlider.fillAmount = sliderPercent;\n    }\n}\n\n```\n\n>设置ui时，首先需要调整Canvas的Scaler\n>\n>UI Scale Mode设置为Scale With Screen Size,Match设置为0.5，同时兼顾高度和宽度\n\n>\n>\n>Canvas有个Canvas Group组件，可以设置取消阻挡射线\n>\n>也可以通过调整Alpha的值去做转场\n\n### 传送门\n\n使用lit shader\n\nshader制作成材质，创建一个3D > plane，拖拽赋予这个材质，并生成一个传送点位置\n\n枚举类\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class TransitionDestination : MonoBehaviour\n{\n    public enum DestinationTag { Enter,A,B,C}\n\n    public DestinationTag destinationTag;\n}\n\n```\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class TransiationPoint : MonoBehaviour\n{\n    public enum TransitionType { SameScence,DifferentScence}\n\n    [Header(\"Transition Info\")]\n    public string scenceName;\n    public TransitionType transitionType;\n    //枚举终点编号\n    public TransitionDestination.DestinationTag destinationTag;\n\n    bool canTrans;\n\n    private void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.E) && canTrans)\n        {\n            ScenceController.Instance.TransitionToDestination(this);\n        }\n    }\n    private void OnTriggerStay(Collider other)\n    {\n        if (other.CompareTag(\"Player\"))\n        {\n            canTrans = true;\n        }\n    }\n    private void OnTriggerExit(Collider other)\n    {\n        if (other.CompareTag(\"Player\"))\n        {\n            canTrans = false;\n        }\n    }\n}\n\n```\n\n实现场景转换\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.SceneManagement;\n\nusing UnityEngine.AI;\n\npublic class ScenceController : SingleTon<ScenceController>\n{\n    GameObject player;\n    NavMeshAgent playerAgent;\n    public void TransitionToDestination(TransiationPoint transiationPoint)\n    {\n        switch (transiationPoint.transitionType)\n        {\n            case TransiationPoint.TransitionType.SameScence:\n                StartCoroutine(Transition(SceneManager.GetActiveScene().name, transiationPoint.destinationTag));\n                break;\n            case TransiationPoint.TransitionType.DifferentScence:\n                break;\n            default:\n                break;\n        }\n    }\n\n    IEnumerator Transition(string scenceName,TransitionDestination.DestinationTag destinationTag)\n    {\n        player = GameManager.Instance.playerStats.gameObject;\n\n        playerAgent = player.GetComponent<NavMeshAgent>();\n        playerAgent.isStopped = true;\n\n       //设置位置与方向transform.SetPositionAndRotation（）\n        player.transform.SetPositionAndRotation(GetDestination(destinationTag).transform.position, GetDestination(destinationTag).transform.rotation);\n        yield return null;\n    }\n\t\n    //遍历获取终点的信息\n    TransitionDestination GetDestination(TransitionDestination.DestinationTag destinationTag)\n    {\n        var entrances = FindObjectsOfType<TransitionDestination>();\n        foreach (var item in entrances)\n        {\n            if (item.destinationTag == destinationTag)\n            {\n                return item;\n            }\n        }\n        return null;\n    }\n}\n\n```\n\n### 保存数据\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class SaveManager : SingleTon<SaveManager>\n{\n\n\n    private void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.K))\n        {\n            Save(GameManager.Instance.playerStats.character, GameManager.Instance.playerStats.name);\n            Debug.Log(GameManager.Instance.playerStats.name);\n        }\n        if (Input.GetKeyDown(KeyCode.L))\n        {\n            Load(GameManager.Instance.playerStats.character, GameManager.Instance.playerStats.name);\n            \n        }\n    }\n\n    public void Save(object data,string key)\n    {\n        //数据转成json\n        var jsonData = JsonUtility.ToJson(data, true);\n        //json转成二进制\n        PlayerPrefs.SetString(key, jsonData);\n        PlayerPrefs.Save();\n    }\n    public void Load(object data, string key)\n    {\n        if (PlayerPrefs.HasKey(key))\n        {\n            //PlayerPrefs.GetString(key)将二进制转为json，覆盖到data上\n            JsonUtility.FromJsonOverwrite(PlayerPrefs.GetString(key), data);\n            Debug.Log(\"111\");\n\n        }\n    }\n}\n\n```\n\n","source":"_posts/002_unityRpg.md","raw":"---\ntitle: 3DURP游戏制作笔记\ndate: 2022-5-10\ndescription:\ntop_image: /img/002.png\ncover: /img/002.png\ncategories: \n- Unity\ntags: \n- Games\n- 游戏制作\n- M_studio\n---\n\n# 3DURP游戏制作笔记\n\n> 感谢麦扣老师！！！\n>\n> [b站地址](https://space.bilibili.com/370283072)\n>\n> 这些是我跟着学习敲得代码，有些可能不一样，完全复制肯定会有问题，主要用来给学习的同学纠错\n\n\n\n### 游戏的创建与地图的铺设\n\n使用到的插件有**Pro Grids**,**ProBuilder**,**PloyBrush**\n\n1. 使用到的地图模板为正常模板，然后在Project文件夹中新建URP。\n\n2. 右上角Edit > Project Setting\n   1. 将Graphics的Scirptable Render Pipeline Settings修改为创建的**UniversalRenderPiepelineAsset**\n   2. Quality的Rendering修改为创建的**UniversalRenderPiepelineAsset**\n\n3. 使用素材时，升级素材的URP。Edit > Render Pipeline > Universal Render Pipeline > Upgrade Project Materials To UniversalRP Materials\n\n4. 光照的设置 Windows > Rendering >Lighting。在Scene窗口生成一个New Lighting Settings。Lighting Mode一般为Baked Indirect（简介烘焙），Lightmapper一般选择为GPU，取消勾选Auto Generate，然后进行Generate Lighting。\n\n   > 如果发生场景颜色发生改变，不是原本的颜色，可以在Lighting > Environment里选择 Environment Lighting > Source 设置为Color。\n\n5. 调整摄像机的技巧：Ctrl + Shift + F，调整物体坐标轴吸附 V键。\n\n6. 导入插件**PloyBrush**并且在导入时将Sample中的URP文件一并导入。 \n\n   > 使用Ploybrush的笔刷刷颜色的时候，发现刷不上颜色的原因是，物体的材质并没有使用Ploybrush的shader创建的材质，用shader创建一个新的材质并修改物体的材质（拖拽也可以），然后进行颜色的涂抹\n\n7. 平台的大小和少数的顶点影响了地图的创作，所以需要**Probuilder**来生成更精致的地图平台\n\n   > 同时按住**Ctrl**和**Alt**键点击Icon的齿轮，会调出单独的设置\n   >\n   > 使用**Center Pivot**可以调整中心点\n   >\n   > 关于如何使用preview package：Edit > Project Setting > Package manager ,**Enable Preview Packages**\n\n### 地图的烘Bake\n\n窗口在 Window > AI > Navigation\n\n1. 设置地面为Navigation static，在Navigation > Object里的Navigation Area 设置为Walkable。\n\n   > - 选中物体之后，在Inspector窗口里，第一行有选择是否为Static，下拉可选择类型\n   > - 选中物体之后，在Navigation > Object里设置Navigation static为**true**\n\n2. 选中不可移动的物体，比如树木石头等，批量设置为Navigation static，特殊的除外。\n3. 为角色添加Navigation agent 组件，设置人物的圆柱体大小以及宽度。\n4. 在Navigation > Bake 里同样设置为人物的圆柱体大小以及宽度等其他数据，然后点击bake，在地图上显示为蓝色的为可walk区域。\n5. 如果有物体可以移动，并且不想发生穿模效果，可选择添加组件Nav Mesh Obstacle,设置Carve为**True**，就会在地面同时切割出一部分，人物不可walk的区域。\n\n### 鼠标控制移动以及贴图\n\n**所有管理类都不要忘了在游戏里创建一个空对象，添加上脚本**\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing System;\n\n\npublic class MouseManager : SingleTon<MouseManager>\n{\n\n\t//事务委托\n    public event Action<Vector3> OnMouseClicked;\n    public event Action<GameObject> OnClickedEnemy;\n\n    RaycastHit hitInfo;\n\t//鼠标贴图\n    public Texture2D point, doorway, attack, target, arrow;\n    \n    protected override void Awake()\n    {\n        base.Awake();\n    }\n\n    void Update()\n    {\n        SetCursorTexture();\n        MouseControl();\n    }\n\n    void SetCursorTexture()\n    {\n        Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);\n        if(Physics.Raycast(ray,out hitInfo))\n        {\n            //切换鼠标贴图\n            switch (hitInfo.collider.gameObject.tag)\n            {\n                case \"Ground\":\n                    Cursor.SetCursor(target, new Vector2(16, 16),CursorMode.Auto);\n                    break;\n                case \"Enemy\":\n                    Cursor.SetCursor(attack, new Vector2(2, 2), CursorMode.Auto);\n                    break;\n                case \"Attackable\":\n                    Cursor.SetCursor(attack, new Vector2(2, 2), CursorMode.Auto);\n                    break;\n                case \"Portal\":\n                    Cursor.SetCursor(doorway, new Vector2(2, 2), CursorMode.Auto);\n                    break;\n            }\n        }\n    }\n\n    void MouseControl()\n    {\n        if (Input.GetMouseButtonDown(0) && hitInfo.collider != null)\n        {\n            if (hitInfo.collider.gameObject.CompareTag(\"Ground\"))\n            {\n                OnMouseClicked?.Invoke(hitInfo.point);\n            }else if (hitInfo.collider.gameObject.CompareTag(\"Enemy\"))\n            {\n                OnClickedEnemy?.Invoke(hitInfo.collider.gameObject);\n            }\n            else if (hitInfo.collider.gameObject.CompareTag(\"Attackable\"))\n            {\n                OnClickedEnemy?.Invoke(hitInfo.collider.gameObject);\n            }\n            else if (hitInfo.collider.gameObject.CompareTag(\"Portal\"))\n            {\n                OnMouseClicked?.Invoke(hitInfo.point);\n            }\n        }\n    }\n}\n\n```\n\n**关于鼠标的贴图**\n\n鼠标贴图为**Texture**,一般为无背景的图片，加载到Unity之后，选中贴图并把Texture type修改为**Cursor**。\n\n### Cineramachine\n\n选中Main camera，Gameobject > Align View to Selected,将主相机锁定视角\n\n状态栏Cineramachine选择一个合适的摄像机 ，当前选择的为CinemachineVirtualCanmera,取消主摄像机的Audio Listener，Body选择Framing Transposer,Aim选择Nothing\n\nFollow 选择为人物对象 ，如果人物坐标轴在下方，可以在人物对象里新建一个空物体，然后将坐标轴移动到人物中心位置，将物体拖拽到**Follow**。\n\n> **BODY**\n>\n> - Do Nothing：不移动虚拟相机\n> - Framing Transposer：跟随目标移动，并在屏幕空间保持相机和跟随目标的相对位置。\n> - Hard Lock to Target：虚拟相机和跟随目标使用相同位置。\n> - Orbital Transposer：相机和跟随目标的相对位置是可变的，还能接收用户的输入。常见于玩家控制的相机。\n> - Tracked Dolly：相机沿着预先设置的轨道移动。\n> - Transposer：跟随目标移动，并在世界空间保持相机和跟随目标的相对位置固定。\n>\n> **AIM**\n>\n> - Do Nothing: 不控制相机的旋转。\n> - Composer: 保持目标物体在镜头内\n> - Group Composer: 保持多个目标在镜头内\n>\n> - Hard Look At: 保持目标在镜头的中心\n> - POV: 基于玩家的输入旋转相机\n\n**添加环境迷雾**\n\nWindow > Rendering > Lighting > Environment > Fog设置为True\n\n> 如果Sence场景没有显示Fog，则需要在窗口中打开Fog开关\n>\n> Mode：Linear 为最近最远处能见度\n\n**Global** **Volume**\n\n对场景进行后处理，add 其他功能对场景进行渲染\n\n> 如果场景没有显示出效果，在Main Camera > Rendering > Post Peocessing 设置为True\n\n### 遮挡剔除\n\n\n\n通过**Shader**创建材质放入到URP的 UniversalRenderPipelineAsset_Renderer ，新建Add Renderer Feature,选择被遮挡的Layer Mask，可以多选，然后设置被遮挡后的材质，Depth设置为True，Depth Test设置为Greater。当被遮挡物体层级Greater时，显示被遮挡后的材质。\n\n同样Add Renderer Feature，选择相同被遮挡的Layer Mask，其他不做修改，当不被遮挡时显示原有材质\n\n**关于遮挡材质的制作**\n\nshader创建：Project > 右键 > Shader > URP >UnLit Shader Graph\n\n> Graph Inspector > Grapj Settings > Universal > Alpha Clip,打开Alpha透明通道\n\n1. 使用Fresnel Effect 制作遮挡的效果，通过新建变量Color修改颜色。通过Multiply混合，传给Base color。\n2. Dither制作噪点效果，新建Float修改Dither的X值，out传给Fragment > Alpha通道\n3. 创建Flaot 修改Alpha Threshold。\n4. 选择Shader创建材质\n\n**关于鼠标射线遮挡**\n\n- 选中遮挡的物体，设置层级为Ignore Raycast\n- 关闭遮挡物体的Mesh Collider\n\n### EnemyController\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.AI;\n\npublic enum EnemyStates {GUARD,PARTOL,CHASE,DEAD }\n//通过代码添加组件\n[RequireComponent(typeof(NavMeshAgent))]\n[RequireComponent(typeof(CharacterStats))]\n\n//使用接口\npublic class EnemyController : MonoBehaviour,IEndGameObserver\n{\n    NavMeshAgent agent;\n    EnemyStates enemyStates;\n    Animator anim;\n    protected CharacterStats characterStats;\n    Collider coll;\n    //攻击范围 \n    public float sightRadius;\n    //巡逻范围\n    public float partolRadius;\n    public bool isGuard;\n    //巡逻停留时间\n    public float lookAtTime;\n    float remainLookAtTime;\n    float speed;\n    //cd时间\n    float lastAttackTime;\n    //下一个前往的巡逻点\n    Vector3 wayPoint;\n    //起始点\n    Vector3 guardPoint;\n    Quaternion guardRotation;\n    protected GameObject attackTarget;\n    bool isWalk, isChase, isFollow, isDie;\n    bool playerDie;\n    private void Awake()\n    {\n        agent = GetComponent<NavMeshAgent>();\n        anim = GetComponent<Animator>();\n        characterStats = GetComponent<CharacterStats>();\n        coll = GetComponent<Collider>();\n        //保存原有速度；\n        speed = agent.speed;\n        guardPoint = transform.position;\n        remainLookAtTime = lookAtTime;\n        lastAttackTime = characterStats.CoolDown;\n        guardRotation = transform.rotation;\n    }\n    void Start()\n    {\n        if (isGuard)\n        {\n            enemyStates = EnemyStates.GUARD;\n        }\n        else\n        {\n            enemyStates = EnemyStates.PARTOL;\n            GetNewPartolPoint();\n        }\n        //将对象添加进gamemanager里，用于广播\n        GameManager.Instance.AddObserver(this);\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        if (characterStats.CurrentHealth == 0)\n        {\n            isDie = true;\n        }\n        if (!playerDie)\n        {\n            SwitchStates();\n            SwitchAnim();\n            if (lastAttackTime > 0f)\n            {\n                lastAttackTime -= Time.deltaTime;\n            }\n        }\n    }\n    \n    //private void OnEnable()\n    //{\n    //    Gamemanager.Instance.AddObserver(this);\n    //}\n\n    private void OnDisable()\n    {\n        if (!GameManager.isInitialized) return;\n        GameManager.Instance.RemoveObserver(this);\n    }\n\n    void SwitchStates()\n    {\n        if (isDie)\n        {\n            enemyStates = EnemyStates.DEAD;\n        }\n        else if (FindPlayer())\n        {\n            enemyStates = EnemyStates.CHASE;\n            \n        }\n        switch (enemyStates)\n        {\n            case EnemyStates.GUARD:\n                isChase = false;\n                isWalk = false;\n                if (transform.position!=guardPoint)\n                {\n                    isWalk = true;\n                    agent.isStopped = false;\n                    agent.destination = guardPoint;\n                    if(Vector3.SqrMagnitude(guardPoint - transform.position) <= agent.stoppingDistance)\n                    {\n                        isWalk = false;\n                        agent.isStopped = true;\n                        //旋转会初始的角度\n                        Quaternion.Lerp(transform.rotation, guardRotation, 0.1f);\n                    }\n                }\n                break;\n            case EnemyStates.PARTOL:\n                isChase = false;\n                agent.speed = speed * 0.5f;\n                if (Vector3.Distance(transform.position, wayPoint) <= 1)\n                {\n                    isWalk = false;\n                    if (remainLookAtTime < 0f)\n                    {\n                        GetNewPartolPoint();\n                        remainLookAtTime = lookAtTime;\n                    }\n                    else\n                        remainLookAtTime -= Time.deltaTime;\n                }\n                else\n                {\n                    isWalk = true;\n                    agent.destination = wayPoint;\n                }\n                break;\n            case EnemyStates.CHASE:\n\n                agent.speed = speed;\n                isWalk = false;\n                isChase = true;\n                //脱战\n                if (!FindPlayer())\n                {\n                    isFollow = false;\n                    agent.destination = transform.position;\n                    if (remainLookAtTime > 0)\n                    {\n                        remainLookAtTime -= Time.deltaTime;\n                    }\n                    else\n                    {\n                        if (isGuard)\n                        {\n                            enemyStates = EnemyStates.GUARD;\n                        }\n                        else\n                        {\n                            enemyStates = EnemyStates.PARTOL;\n                        }\n                    }\n                }\n                else\n                {\n                    //追击\n                    isFollow = true;\n                    agent.isStopped = false;\n                    agent.destination = attackTarget.transform.position;\n                    //判断是否追击到\n                    if (TargetInAttackRange() || TargetInSkillRange())\n                    {\n                        isFollow = false;\n                        agent.isStopped = true;\n                        if (lastAttackTime < 0f)\n                        {\n                            lastAttackTime = characterStats.CoolDown;\n                            //暴击判断\n                            characterStats.isCritical = Random.value < characterStats.CriticalChance;\n                            \n                            Attack();\n                        }\n                    }\n                }\n\n                break;\n            case EnemyStates.DEAD:\n                //enemy死亡时不会发生继续攻击的情况\n                coll.enabled = false;\n                \n                //agent.enabled = false;\n                //设置之后不会阻挡Player行动\n                agent.radius = 0f;\n                Destroy(gameObject, 2f);\n                break;\n            default:\n                break;\n        }\n    }\n    void Attack()\n    {\n        transform.LookAt(attackTarget.transform);\n        anim.SetBool(\"Critical\", characterStats.isCritical);\n        if (TargetInAttackRange())\n        {\n            anim.SetTrigger(\"Attack\");\n        }\n        if(TargetInSkillRange())\n        {\n            anim.SetTrigger(\"Skill\");\n        }\n    }\n\n    bool FindPlayer()\n    {\n        Collider[] colliderNum = Physics.OverlapSphere(transform.position, sightRadius);\n        foreach (var collider in colliderNum)\n        {\n            \n            if (collider.gameObject.CompareTag(\"Player\"))\n            {\n                attackTarget = collider.gameObject;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    void SwitchAnim()\n    {\n        anim.SetBool(\"Walk\", isWalk);\n        anim.SetBool(\"Chase\", isChase);\n        anim.SetBool(\"Follow\", isFollow);\n        anim.SetBool(\"Die\", isDie);\n    }\n\n    private void OnDrawGizmosSelected()\n    {\n        //画出攻击范围圈\n        Gizmos.color = Color.green;\n        Gizmos.DrawWireSphere(transform.position, sightRadius);\n    }\n    \n    void GetNewPartolPoint()\n    {\n        float ran_x = Random.Range(-partolRadius, partolRadius);\n        float ran_z = Random.Range(-partolRadius, partolRadius);\n        //不修改高度，防止坑坑洼洼的地面\n        //guardPoint是为了随机在初始位置点的随机移动\n        wayPoint = new Vector3(guardPoint.x + ran_x, transform.position.y, guardPoint.z + ran_z);\n        NavMeshHit hit;\n        //NavMesh.SamplePosition（）方法的最后一位为窗口 Navigation > Area的序列，从1开始\n        //方法为 在waypoint的sightRadius范围内寻找1层级（可移动到）的点\n        //方法返回的为True和False\n        wayPoint = NavMesh.SamplePosition(wayPoint, out hit, sightRadius,1) ? hit.position : transform.position;\n        \n\n    }\n    bool TargetInAttackRange()\n    {\n        if (attackTarget != null)\n        {\n            return Vector3.Distance(attackTarget.transform.position, transform.position) < characterStats.AttackRange;\n        }\n        else\n        {\n            return false;\n        }\n    }\n    bool TargetInSkillRange()\n    {\n        if (attackTarget != null)\n        {\n            return Vector3.Distance(attackTarget.transform.position, transform.position) < characterStats.SkillRange;\n        }\n        else\n        {\n            return false;\n        }\n    }\n    void Hit()\n    {\n        if (attackTarget != null && transform.IsFacingTarget(attackTarget.transform))\n        {\n            var targetStats = attackTarget.GetComponent<CharacterStats>();\n            characterStats.TakeDamage(characterStats, targetStats);\n        }\n    }\n\n    public void EndsNotify()\n    {\n        isChase = false;\n        isWalk = false;\n        attackTarget = null;\n        playerDie = true;\n        anim.SetBool(\"Victory\", true);\n    }\n}\n\n```\n\n### PlayController\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.AI;\n\npublic class PlayerController : MonoBehaviour\n{\n    public float lastAttackTime;\n    //攻击目标对象\n    GameObject attackTarget;\n    CharacterStats characterStats;\n    NavMeshAgent agent;\n    Animator anim;\n    bool isDie;\n    float stopDistance;\n    private void Awake()\n    {\n        agent = GetComponent<NavMeshAgent>();\n        anim = GetComponent<Animator>();\n        characterStats = GetComponent<CharacterStats>();\n\n    }\n\n    private void Start()\n    {\n        //添加事件\n        MouseManager.Instance.OnMouseClicked += MoveToTarget;\n        MouseManager.Instance.OnClickedEnemy += EventAttack;\n        \n\t\t//注册Gamemanager的广播\n        GameManager.Instance.RigisterPlayer(characterStats);\n        stopDistance = agent.stoppingDistance;\n    }\n    private void Update()\n    {\n        isDie = characterStats.CurrentHealth == 0;\n        if (isDie)\n        {\n            GameManager.Instance.NotifyObservers();\n        }\n        AnimationChange();\n        if(lastAttackTime>0f)\n            lastAttackTime -= Time.deltaTime;\n    }\n    void MoveToTarget(Vector3 target)\n    {\n        if (isDie) return;\n        agent.isStopped = false;\n        agent.stoppingDistance = stopDistance;\n        StopAllCoroutines();\n        agent.destination = target;\n    }\n\n    void AnimationChange()\n    {\n        anim.SetFloat(\"Speed\", agent.velocity.sqrMagnitude);\n        anim.SetBool(\"Die\", isDie);\n    }\n\n    void EventAttack(GameObject target)\n    {\n        if (isDie) return;\n\n        if (target != null)\n        {\n            attackTarget = target;\n            StartCoroutine(\"MoveToAttackTarget\");\n        }\n    }\n    //动画事件\n    void Hit()\n    {\n        if (attackTarget.CompareTag(\"Attackable\"))\n        {\n            if (attackTarget.GetComponent<Rock>())\n            {\n                //在空中也可以击飞\n                attackTarget.GetComponent<Rock>().rockStates = Rock.RockStates.HitEnemy;\n                //赋予初始速度，防止fixudate时修改rock状态\n                attackTarget.GetComponent<Rigidbody>().velocity = Vector3.one;\n                attackTarget.GetComponent<Rigidbody>().AddForce(transform.forward * 20f,ForceMode.Impulse);\n\n            }\n        }\n        else\n        {\n            var targetStats = attackTarget.GetComponent<CharacterStats>();\n            characterStats.TakeDamage(characterStats, targetStats);\n        }\n    }\n    IEnumerator MoveToAttackTarget()\n    {\n        agent.stoppingDistance = characterStats.AttackRange;\n        agent.isStopped = false;\n        while (Vector3.Distance(attackTarget.transform.position, transform.position) > characterStats.AttackRange)\n        {\n            agent.destination = attackTarget.transform.position;\n            yield return null;\n        }\n        agent.isStopped = true;\n        if (lastAttackTime < 0)\n        {\n            transform.LookAt(attackTarget.transform.position);\n            //暴击率的计算\n            characterStats.isCritical = Random.value < characterStats.CriticalChance;\n            anim.SetBool(\"Critical\",characterStats.isCritical);\n            anim.SetTrigger(\"Attack\");\n            //重置冷却时间\n            lastAttackTime = characterStats.CoolDown;\n        }\n    }\n}\n\n```\n\n### CharacterStats\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing System;\npublic class CharacterStats : MonoBehaviour\n{\n\n    public event Action<int, int> UpdateHealthBarOnAttack;\n\n    public Character_SO templateData;\n    public Character_SO character;\n    public AttackSO attackSO;\n    [HideInInspector]\n    public bool isCritical;\n\n    private void Awake()\n    {\n        //用模板为character生成一组数据，防止多个enemy访问同一组数据\n        if (templateData != null)\n        {\n            character = Instantiate(templateData);\n        }\n    }\n    public int MaxHealth\n    {\n        get { if (character != null) { return character.maxHealth; } else { return 0; } }\n        set { character.maxHealth = value; }\n    }\n    public int CurrentHealth\n    {\n        get { if (character != null) { return character.currentHealth; } else { return 0; } }\n        set { character.currentHealth = value; }\n    }\n    public int BaseDefence\n    {\n        get { if (character != null) { return character.baseDefence; } else { return 0; } }\n        set { character.baseDefence = value; }\n    }\n    public int CurrentDefence\n    {\n        get { if (character != null) { return character.currentDefence; } else { return 0; } }\n        set { character.currentDefence = value; }\n    }\n    public float AttackRange { get {  return attackSO.attackRange; } }\n    public float SkillRange { get { return attackSO.skillRange; } }\n    public float CoolDown { get { return attackSO.coolDown; } }\n    public float MinDamage { get { return attackSO.minDamage; } }\n    public float MaxDamage { get { return attackSO.maxDamage; } }\n\n    public float CriticalMultiplier { get { return attackSO.criticalMultiplier; } }\n    public float CriticalChance { get { return attackSO.criticalChance; } }\n    \n    public void TakeDamage(CharacterStats attacker,CharacterStats defender)\n    {\n        int damage = Mathf.Max(attacker.CurrentDamage() - defender.CurrentDefence, 0);\n        defender.CurrentHealth = Mathf.Max(defender.CurrentHealth - damage, 0);\n        //defender受伤的动画 暴击才会有\n        if (attacker.isCritical)\n        {\n            defender.GetComponent<Animator>().SetTrigger(\"Hit\");\n        }\n\t\t//修改防御者血条\n        defender.UpdateHealthBarOnAttack?.Invoke(defender.CurrentHealth, defender.MaxHealth);\n        if (defender.CurrentHealth <= 0)\n        {\n            //更新攻击者经验\n            attacker.character.UpdateExp(defender.character.killPoint);\n        }\n    }\n\n    public void TakeDamage(int damage,CharacterStats defender)\n    {\n        int currentDamage = Mathf.Max(damage - defender.CurrentDefence, 0);\n        defender.CurrentHealth = Mathf.Max(defender.CurrentHealth - currentDamage, 0);\n        UpdateHealthBarOnAttack?.Invoke(defender.CurrentHealth, defender.MaxHealth);\n\n    }\n\n    int CurrentDamage()\n    {\n        float damage = UnityEngine.Random.Range(MinDamage, MaxDamage); ;\n        if (isCritical)\n        {\n            damage *= CriticalMultiplier;\n            Debug.Log(\"暴击：\" + damage);\n\n        }\n        return (int)damage;\n    }\n}\n\n```\n\n**Character_SO**\n\n```csharp\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\n\n//filename为创建的文件的文件名，menuName为文件夹目录层级名字\n[CreateAssetMenu(fileName = \"New Data\", menuName = \"Character Stats/Data\")]\n\npublic class Character_SO : ScriptableObject\n{\n    [Header(\"Stats Info\")]\n    public int maxHealth;\n    public int currentHealth;\n    public int baseDefence;\n    public int currentDefence;\n\n    [Header(\"Kill\")]\n    public int killPoint;\n\n    [Header(\"Level\")]\n    public int currentLevel;\n    public int maxLevel;\n    public int baseExp;\n    public int currentExp;\n    public float levelBuff;\n\n    public void UpdateExp(int point)\n    {\n        currentExp += point;\n        if (currentExp >= baseExp)\n        {\n            currentExp -= baseExp;\n            LevelUP();\n        }\n    }\n\n    private void LevelUP()\n    {\n        currentLevel = Mathf.Clamp(currentLevel + 1, 0, maxLevel);\n        baseExp += (int)(baseExp * LevelMultiplier);\n        maxHealth = (int)(maxHealth * LevelMultiplier);\n        currentHealth = maxHealth;\n    }\n    public float LevelMultiplier\n    {\n        get {return 1+(currentLevel-1)*levelBuff ; }\n    }\n}\n\n```\n\n**Attack_SO**\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName =\"New Attack\",menuName =\"Attack/Attack Data\")]\npublic class AttackSO : ScriptableObject\n{\n    [Header(\"Attack Info\")]\n    public float attackRange;\n    public float skillRange;\n    public float coolDown;\n    public int minDamage;\n    public int maxDamage;\n    public float criticalMultiplier;\n    public float criticalChance;\n    \n}\n\n```\n\n### 泛型单例模式Singleton\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class SingleTon<T> : MonoBehaviour where T:SingleTon<T>\n{\n    private static T instance;\n\n    public static T Instance\n    {\n        get { return instance; }\n    }\n\n    protected virtual void Awake()\n    {\n        if (instance != null)\n        {\n            Destroy(gameObject);\n        }\n        else\n        {\n            instance = (T)this;\n        }\n    }\n    public static bool isInitialized\n    {\n         get { return instance != null; }\n    }\n}\n\n```\n\n### 接口Observer Pattern\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic interface IEndGameObserver\n{\n    //只定义，不实现留给使用的实现这个方法\n    void EndsNotify();\n}\n\n```\n\n### GameManger\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class GameManager : SingleTon<GameManager>\n{\n    public CharacterStats playerStats;\n\t\n    //接口类型\n    List<IEndGameObserver> endGameObeverses = new List<IEndGameObserver>();\n    \n    protected override void Awake()\n    {\n        base.Awake();\n    }\n    public void RigisterPlayer(CharacterStats characterStats)\n    {\n        playerStats = characterStats;\n    }\n\n    public void AddObserver(IEndGameObserver observer)\n    {\n        endGameObeverses.Add(observer);\n    }\n    public void RemoveObserver(IEndGameObserver observer)\n    {\n        endGameObeverses.Remove(observer);\n    }\n\n    public void NotifyObservers()\n    {\n        //遍历添加进来的对象\n        //挨个调用EndsNotify（）方法\n        foreach (var observer in endGameObeverses)\n        {\n            observer.EndsNotify();\n        }\n    }\n}\n\n```\n\n### 设置兽人Grunt\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.AI;\n\n//继承于EnemyController\npublic class Grunt : EnemyController\n{\n    [Header(\"GRUNT推力\")]\n    public float kickForce = 15f;\n    //动画事件\n    void KickOff()\n    {\n        if (attackTarget != null)\n        {\n            transform.LookAt(attackTarget.transform);\n            Vector3 direction = attackTarget.transform.position - transform.position;\n            direction.Normalize();\n            //打断player行动，进行击退\n            attackTarget.GetComponent<NavMeshAgent>().isStopped = true;\n            attackTarget.GetComponent<NavMeshAgent>().velocity = direction * kickForce;\n            attackTarget.GetComponent<Animator>().SetTrigger(\"Dizzy\");\n        }\n    }\n}\n\n```\n\n### 拓展方法Extension Method\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\n//拓展方法 \npublic static class ExtensionMethod \n{\n    private const float dotThreshold = 0.5f;\n\n    //拓展的是this后面的方法,后面的为方法所需要的函数\n    //使用方法 :transform.IsFacingTarget(target)\n    public static bool IsFacingTarget(this Transform transform,Transform target)\n    {\n        //向量OA-OB=BA;O为原点；\n        Vector3 vectorToTarget = target.position - transform.position;\n        vectorToTarget.Normalize();\n        //vector3.dot 为看向的方向与vectortoTarget的方向的夹角，正对着为1，背对着为-1，左右为0；\n        float dot = Vector3.Dot(transform.forward, vectorToTarget);\n        return dot >= dotThreshold;\n    }\n\n}\n```\n\n### 石头人Golem\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.AI;\n\npublic class Golem : EnemyController\n{\n    [Header(\"GRUNT推力\")]\n    public float kickForce = 25f;\n\n    public GameObject rockPerfab;\n    public Transform handTransform;\n    //animation event\n    void KickOff()\n    {\n        if (attackTarget != null && transform.IsFacingTarget(attackTarget.transform))\n        {\n            var targetStats = attackTarget.GetComponent<CharacterStats>();\n            Vector3 direction = attackTarget.transform.position - transform.position;\n            direction.Normalize();\n            transform.LookAt(attackTarget.transform);\n            attackTarget.GetComponent<NavMeshAgent>().isStopped = true;\n            attackTarget.GetComponent<NavMeshAgent>().velocity = direction * kickForce;\n            attackTarget.GetComponent<Animator>().SetTrigger(\"Dizzy\");\n            characterStats.TakeDamage(characterStats, targetStats);\n        }\n    }\n    //animation event\n    void ThrowRock()\n    {\n        if (attackTarget != null)\n        {\n            GameObject rock = Instantiate(rockPerfab, handTransform.position, Quaternion.identity);\n            rock.GetComponent<Rock>().target = attackTarget;\n        }\n    }\n}\n\n```\n\n### 扔石头\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.AI;\nusing UnityEngine.Animations;\n\npublic class Rock : MonoBehaviour\n{\n    public enum RockStates { HitPlayer,HitEnemy,HitNothing}\n    public RockStates rockStates;\n\n    public GameObject target;\n    public GameObject rockBreak;\n    public float force;\n    public int damage;\n    Vector3 direction;\n    Rigidbody rb;\n    void Start()\n    {\n        rb = GetComponent<Rigidbody>();\n        rb.velocity = Vector3.one;\n        rockStates = RockStates.HitPlayer;\n        FlyToTarget();\n    }\n\n    private void FixedUpdate()\n    {\n        if (rb.velocity.sqrMagnitude < 0.5f)\n        {\n            rockStates = RockStates.HitNothing;\n        }\n    }\n   \n    void FlyToTarget()\n    {\n        if (target == null)\n            target = FindObjectOfType<PlayerController>().gameObject;\n        direction = (target.transform.position - transform.position+Vector3.up ).normalized;\n        rb.AddForce(direction * force, ForceMode.Impulse);\n    }\n\n    private void OnCollisionEnter(Collision collision)\n    {\n        switch (rockStates)\n        {\n            case RockStates.HitPlayer:\n                if (collision.collider.CompareTag(\"Player\"))\n                {\n                    collision.gameObject.GetComponent<NavMeshAgent>().isStopped = true;\n                    collision.gameObject.GetComponent<NavMeshAgent>().velocity = direction * force;\n                    collision.gameObject.GetComponent<Animator>().SetTrigger(\"Dizzy\");\n\n                    rockStates = RockStates.HitNothing;\n                    collision.gameObject.GetComponent<CharacterStats>().TakeDamage(damage, collision.gameObject.GetComponent<CharacterStats>());\n                }\n                break;\n            case RockStates.HitEnemy:\n                //如果有这个组件返回true；\n                if (collision.gameObject.GetComponent<Golem>())\n                {\n                    collision.gameObject.GetComponent<CharacterStats>().TakeDamage(damage, collision.gameObject.GetComponent<CharacterStats>());\n                    \n                    //攻击石头人之后，石头碎裂生成粒子特效\n                    Instantiate(rockBreak, transform.position, Quaternion.identity);\n                    Destroy(gameObject);\n                }\n                break;\n            case RockStates.HitNothing:\n                break;\n            default:\n                break;\n        }\n\n\n    }\n}\n\n```\n\n**粒子特效**\n\nHierarchy > Effects > Particle System\n\n### 血条显示 HealthBar\n\n**挂载在enemy身上**\n\n```csharp\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\npublic class HealthBar : MonoBehaviour\n{\n    public GameObject healthBarUiPerfab;\n\t//血条的位置，enemy设置一个空对象，调整位置为头部上方\n    public Transform barPoint;\n    //是否一直显示 显示的时长\n    public bool alwaysVisible;\n    public float visibleTime;\n    float timeLeft;\n\n    Image healthSlider;\n    Transform UIBar;\n    Transform cam;\n    CharacterStats currentStats;\n\n    private void Awake()\n    {\n        //获取组件\n        currentStats = GetComponent<CharacterStats>();\n        //添加事务\n        currentStats.UpdateHealthBarOnAttack += UpdateHealthBar;\n    }\n    private void OnEnable()\n    {\n        cam = Camera.main.transform;\n        foreach (Canvas canvas in FindObjectsOfType<Canvas>())\n        {\n            if (canvas.renderMode == RenderMode.WorldSpace)\n            {\n                UIBar = Instantiate(healthBarUiPerfab, canvas.transform).transform;\n                healthSlider = UIBar.GetChild(0).GetComponent<Image>();\n                UIBar.gameObject.SetActive(alwaysVisible);\n            }\n        }\n\n    }\n\n    private void UpdateHealthBar(int currentHealth, int Maxhealth)\n    {\n        if (currentHealth <= 0)\n            Destroy(UIBar.gameObject);\n\n        UIBar.gameObject.SetActive(true);\n        //攻击时重置显示剩余时间\n        timeLeft = visibleTime;\n        float sliderPercent = (float)currentHealth / Maxhealth;\n        //image Type设置为Filled，fillmethod设置为Horizontal\n        healthSlider.fillAmount = sliderPercent;\n\n    }\n    private void LateUpdate()\n    {\n        if (UIBar != null)\n        {\n            //位置\n            UIBar.position = barPoint.position;\n            //ui的方向与摄像机的方向相反\n            UIBar.forward = -cam.forward;\n\n            if (timeLeft <= 0f&&!alwaysVisible)\n            {\n                UIBar.gameObject.SetActive(false);\n            }\n            else\n            {\n                timeLeft -= Time.deltaTime;\n\n            }\n        }\n\n\n    }\n}\n\n```\n\n### PlayerUI\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class PlayHealthBar : MonoBehaviour\n{\n    Text level;\n    Image healthSlider;\n    Image expSlider;\n\n    private void Awake()\n    {\n        level = transform.GetChild(2).GetComponent<Text>();\n        healthSlider = transform.GetChild(0).GetChild(0).GetComponent<Image>();\n        expSlider = transform.GetChild(1).GetChild(0).GetComponent<Image>();\n    }\n\n    private void LateUpdate()\n    {\n        level.text = \"Level  \" + GameManager.Instance.playerStats.character.currentLevel.ToString(\"00\");\n\n        UpdateHealth();\n\n        UpdateExp();\n    }\n\n    void UpdateHealth()\n    {\n        float sliderPercent = (float)GameManager.Instance.playerStats.CurrentHealth / GameManager.Instance.playerStats.MaxHealth;\n        healthSlider.fillAmount = sliderPercent;\n    }\n    void UpdateExp()\n    {\n        float sliderPercent = (float)GameManager.Instance.playerStats.character.currentExp / GameManager.Instance.playerStats.character.baseExp;\n        expSlider.fillAmount = sliderPercent;\n    }\n}\n\n```\n\n>设置ui时，首先需要调整Canvas的Scaler\n>\n>UI Scale Mode设置为Scale With Screen Size,Match设置为0.5，同时兼顾高度和宽度\n\n>\n>\n>Canvas有个Canvas Group组件，可以设置取消阻挡射线\n>\n>也可以通过调整Alpha的值去做转场\n\n### 传送门\n\n使用lit shader\n\nshader制作成材质，创建一个3D > plane，拖拽赋予这个材质，并生成一个传送点位置\n\n枚举类\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class TransitionDestination : MonoBehaviour\n{\n    public enum DestinationTag { Enter,A,B,C}\n\n    public DestinationTag destinationTag;\n}\n\n```\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class TransiationPoint : MonoBehaviour\n{\n    public enum TransitionType { SameScence,DifferentScence}\n\n    [Header(\"Transition Info\")]\n    public string scenceName;\n    public TransitionType transitionType;\n    //枚举终点编号\n    public TransitionDestination.DestinationTag destinationTag;\n\n    bool canTrans;\n\n    private void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.E) && canTrans)\n        {\n            ScenceController.Instance.TransitionToDestination(this);\n        }\n    }\n    private void OnTriggerStay(Collider other)\n    {\n        if (other.CompareTag(\"Player\"))\n        {\n            canTrans = true;\n        }\n    }\n    private void OnTriggerExit(Collider other)\n    {\n        if (other.CompareTag(\"Player\"))\n        {\n            canTrans = false;\n        }\n    }\n}\n\n```\n\n实现场景转换\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.SceneManagement;\n\nusing UnityEngine.AI;\n\npublic class ScenceController : SingleTon<ScenceController>\n{\n    GameObject player;\n    NavMeshAgent playerAgent;\n    public void TransitionToDestination(TransiationPoint transiationPoint)\n    {\n        switch (transiationPoint.transitionType)\n        {\n            case TransiationPoint.TransitionType.SameScence:\n                StartCoroutine(Transition(SceneManager.GetActiveScene().name, transiationPoint.destinationTag));\n                break;\n            case TransiationPoint.TransitionType.DifferentScence:\n                break;\n            default:\n                break;\n        }\n    }\n\n    IEnumerator Transition(string scenceName,TransitionDestination.DestinationTag destinationTag)\n    {\n        player = GameManager.Instance.playerStats.gameObject;\n\n        playerAgent = player.GetComponent<NavMeshAgent>();\n        playerAgent.isStopped = true;\n\n       //设置位置与方向transform.SetPositionAndRotation（）\n        player.transform.SetPositionAndRotation(GetDestination(destinationTag).transform.position, GetDestination(destinationTag).transform.rotation);\n        yield return null;\n    }\n\t\n    //遍历获取终点的信息\n    TransitionDestination GetDestination(TransitionDestination.DestinationTag destinationTag)\n    {\n        var entrances = FindObjectsOfType<TransitionDestination>();\n        foreach (var item in entrances)\n        {\n            if (item.destinationTag == destinationTag)\n            {\n                return item;\n            }\n        }\n        return null;\n    }\n}\n\n```\n\n### 保存数据\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class SaveManager : SingleTon<SaveManager>\n{\n\n\n    private void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.K))\n        {\n            Save(GameManager.Instance.playerStats.character, GameManager.Instance.playerStats.name);\n            Debug.Log(GameManager.Instance.playerStats.name);\n        }\n        if (Input.GetKeyDown(KeyCode.L))\n        {\n            Load(GameManager.Instance.playerStats.character, GameManager.Instance.playerStats.name);\n            \n        }\n    }\n\n    public void Save(object data,string key)\n    {\n        //数据转成json\n        var jsonData = JsonUtility.ToJson(data, true);\n        //json转成二进制\n        PlayerPrefs.SetString(key, jsonData);\n        PlayerPrefs.Save();\n    }\n    public void Load(object data, string key)\n    {\n        if (PlayerPrefs.HasKey(key))\n        {\n            //PlayerPrefs.GetString(key)将二进制转为json，覆盖到data上\n            JsonUtility.FromJsonOverwrite(PlayerPrefs.GetString(key), data);\n            Debug.Log(\"111\");\n\n        }\n    }\n}\n\n```\n\n","slug":"002_unityRpg","published":1,"updated":"2022-06-21T14:26:21.703Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4o9jzih0007isv90n9sgnuq","content":"<h1 id=\"3DURP游戏制作笔记\"><a href=\"#3DURP游戏制作笔记\" class=\"headerlink\" title=\"3DURP游戏制作笔记\"></a>3DURP游戏制作笔记</h1><blockquote>\n<p>感谢麦扣老师！！！</p>\n<p><a href=\"https://space.bilibili.com/370283072\">b站地址</a></p>\n<p>这些是我跟着学习敲得代码，有些可能不一样，完全复制肯定会有问题，主要用来给学习的同学纠错</p>\n</blockquote>\n<h3 id=\"游戏的创建与地图的铺设\"><a href=\"#游戏的创建与地图的铺设\" class=\"headerlink\" title=\"游戏的创建与地图的铺设\"></a>游戏的创建与地图的铺设</h3><p>使用到的插件有<strong>Pro Grids</strong>,<strong>ProBuilder</strong>,<strong>PloyBrush</strong></p>\n<ol>\n<li><p>使用到的地图模板为正常模板，然后在Project文件夹中新建URP。</p>\n</li>\n<li><p>右上角Edit &gt; Project Setting</p>\n<ol>\n<li>将Graphics的Scirptable Render Pipeline Settings修改为创建的<strong>UniversalRenderPiepelineAsset</strong></li>\n<li>Quality的Rendering修改为创建的<strong>UniversalRenderPiepelineAsset</strong></li>\n</ol>\n</li>\n<li><p>使用素材时，升级素材的URP。Edit &gt; Render Pipeline &gt; Universal Render Pipeline &gt; Upgrade Project Materials To UniversalRP Materials</p>\n</li>\n<li><p>光照的设置 Windows &gt; Rendering &gt;Lighting。在Scene窗口生成一个New Lighting Settings。Lighting Mode一般为Baked Indirect（简介烘焙），Lightmapper一般选择为GPU，取消勾选Auto Generate，然后进行Generate Lighting。</p>\n<blockquote>\n<p>如果发生场景颜色发生改变，不是原本的颜色，可以在Lighting &gt; Environment里选择 Environment Lighting &gt; Source 设置为Color。</p>\n</blockquote>\n</li>\n<li><p>调整摄像机的技巧：Ctrl + Shift + F，调整物体坐标轴吸附 V键。</p>\n</li>\n<li><p>导入插件<strong>PloyBrush</strong>并且在导入时将Sample中的URP文件一并导入。 </p>\n<blockquote>\n<p>使用Ploybrush的笔刷刷颜色的时候，发现刷不上颜色的原因是，物体的材质并没有使用Ploybrush的shader创建的材质，用shader创建一个新的材质并修改物体的材质（拖拽也可以），然后进行颜色的涂抹</p>\n</blockquote>\n</li>\n<li><p>平台的大小和少数的顶点影响了地图的创作，所以需要<strong>Probuilder</strong>来生成更精致的地图平台</p>\n<blockquote>\n<p>同时按住<strong>Ctrl</strong>和<strong>Alt</strong>键点击Icon的齿轮，会调出单独的设置</p>\n<p>使用<strong>Center Pivot</strong>可以调整中心点</p>\n<p>关于如何使用preview package：Edit &gt; Project Setting &gt; Package manager ,<strong>Enable Preview Packages</strong></p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"地图的烘Bake\"><a href=\"#地图的烘Bake\" class=\"headerlink\" title=\"地图的烘Bake\"></a>地图的烘Bake</h3><p>窗口在 Window &gt; AI &gt; Navigation</p>\n<ol>\n<li><p>设置地面为Navigation static，在Navigation &gt; Object里的Navigation Area 设置为Walkable。</p>\n<blockquote>\n<ul>\n<li>选中物体之后，在Inspector窗口里，第一行有选择是否为Static，下拉可选择类型</li>\n<li>选中物体之后，在Navigation &gt; Object里设置Navigation static为<strong>true</strong></li>\n</ul>\n</blockquote>\n</li>\n<li><p>选中不可移动的物体，比如树木石头等，批量设置为Navigation static，特殊的除外。</p>\n</li>\n<li><p>为角色添加Navigation agent 组件，设置人物的圆柱体大小以及宽度。</p>\n</li>\n<li><p>在Navigation &gt; Bake 里同样设置为人物的圆柱体大小以及宽度等其他数据，然后点击bake，在地图上显示为蓝色的为可walk区域。</p>\n</li>\n<li><p>如果有物体可以移动，并且不想发生穿模效果，可选择添加组件Nav Mesh Obstacle,设置Carve为<strong>True</strong>，就会在地面同时切割出一部分，人物不可walk的区域。</p>\n</li>\n</ol>\n<h3 id=\"鼠标控制移动以及贴图\"><a href=\"#鼠标控制移动以及贴图\" class=\"headerlink\" title=\"鼠标控制移动以及贴图\"></a>鼠标控制移动以及贴图</h3><p><strong>所有管理类都不要忘了在游戏里创建一个空对象，添加上脚本</strong></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">MouseManager</span> : <span class=\"title\">SingleTon</span>&lt;<span class=\"title\">MouseManager</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//事务委托</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">event</span> Action&lt;Vector3&gt; OnMouseClicked;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">event</span> Action&lt;GameObject&gt; OnClickedEnemy;</span><br><span class=\"line\"></span><br><span class=\"line\">    RaycastHit hitInfo;</span><br><span class=\"line\">\t<span class=\"comment\">//鼠标贴图</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Texture2D point, doorway, attack, target, arrow;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">base</span>.Awake();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SetCursorTexture();</span><br><span class=\"line\">        MouseControl();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SetCursorTexture</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Physics.Raycast(ray,<span class=\"keyword\">out</span> hitInfo))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//切换鼠标贴图</span></span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (hitInfo.collider.gameObject.tag)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;Ground&quot;</span>:</span><br><span class=\"line\">                    Cursor.SetCursor(target, <span class=\"keyword\">new</span> Vector2(<span class=\"number\">16</span>, <span class=\"number\">16</span>),CursorMode.Auto);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;Enemy&quot;</span>:</span><br><span class=\"line\">                    Cursor.SetCursor(attack, <span class=\"keyword\">new</span> Vector2(<span class=\"number\">2</span>, <span class=\"number\">2</span>), CursorMode.Auto);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;Attackable&quot;</span>:</span><br><span class=\"line\">                    Cursor.SetCursor(attack, <span class=\"keyword\">new</span> Vector2(<span class=\"number\">2</span>, <span class=\"number\">2</span>), CursorMode.Auto);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;Portal&quot;</span>:</span><br><span class=\"line\">                    Cursor.SetCursor(doorway, <span class=\"keyword\">new</span> Vector2(<span class=\"number\">2</span>, <span class=\"number\">2</span>), CursorMode.Auto);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MouseControl</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Input.GetMouseButtonDown(<span class=\"number\">0</span>) &amp;&amp; hitInfo.collider != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (hitInfo.collider.gameObject.CompareTag(<span class=\"string\">&quot;Ground&quot;</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                OnMouseClicked?.Invoke(hitInfo.point);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (hitInfo.collider.gameObject.CompareTag(<span class=\"string\">&quot;Enemy&quot;</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                OnClickedEnemy?.Invoke(hitInfo.collider.gameObject);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (hitInfo.collider.gameObject.CompareTag(<span class=\"string\">&quot;Attackable&quot;</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                OnClickedEnemy?.Invoke(hitInfo.collider.gameObject);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (hitInfo.collider.gameObject.CompareTag(<span class=\"string\">&quot;Portal&quot;</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                OnMouseClicked?.Invoke(hitInfo.point);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>关于鼠标的贴图</strong></p>\n<p>鼠标贴图为<strong>Texture</strong>,一般为无背景的图片，加载到Unity之后，选中贴图并把Texture type修改为<strong>Cursor</strong>。</p>\n<h3 id=\"Cineramachine\"><a href=\"#Cineramachine\" class=\"headerlink\" title=\"Cineramachine\"></a>Cineramachine</h3><p>选中Main camera，Gameobject &gt; Align View to Selected,将主相机锁定视角</p>\n<p>状态栏Cineramachine选择一个合适的摄像机 ，当前选择的为CinemachineVirtualCanmera,取消主摄像机的Audio Listener，Body选择Framing Transposer,Aim选择Nothing</p>\n<p>Follow 选择为人物对象 ，如果人物坐标轴在下方，可以在人物对象里新建一个空物体，然后将坐标轴移动到人物中心位置，将物体拖拽到<strong>Follow</strong>。</p>\n<blockquote>\n<p><strong>BODY</strong></p>\n<ul>\n<li>Do Nothing：不移动虚拟相机</li>\n<li>Framing Transposer：跟随目标移动，并在屏幕空间保持相机和跟随目标的相对位置。</li>\n<li>Hard Lock to Target：虚拟相机和跟随目标使用相同位置。</li>\n<li>Orbital Transposer：相机和跟随目标的相对位置是可变的，还能接收用户的输入。常见于玩家控制的相机。</li>\n<li>Tracked Dolly：相机沿着预先设置的轨道移动。</li>\n<li>Transposer：跟随目标移动，并在世界空间保持相机和跟随目标的相对位置固定。</li>\n</ul>\n<p><strong>AIM</strong></p>\n<ul>\n<li><p>Do Nothing: 不控制相机的旋转。</p>\n</li>\n<li><p>Composer: 保持目标物体在镜头内</p>\n</li>\n<li><p>Group Composer: 保持多个目标在镜头内</p>\n</li>\n<li><p>Hard Look At: 保持目标在镜头的中心</p>\n</li>\n<li><p>POV: 基于玩家的输入旋转相机</p>\n</li>\n</ul>\n</blockquote>\n<p><strong>添加环境迷雾</strong></p>\n<p>Window &gt; Rendering &gt; Lighting &gt; Environment &gt; Fog设置为True</p>\n<blockquote>\n<p>如果Sence场景没有显示Fog，则需要在窗口中打开Fog开关</p>\n<p>Mode：Linear 为最近最远处能见度</p>\n</blockquote>\n<p><strong>Global</strong> <strong>Volume</strong></p>\n<p>对场景进行后处理，add 其他功能对场景进行渲染</p>\n<blockquote>\n<p>如果场景没有显示出效果，在Main Camera &gt; Rendering &gt; Post Peocessing 设置为True</p>\n</blockquote>\n<h3 id=\"遮挡剔除\"><a href=\"#遮挡剔除\" class=\"headerlink\" title=\"遮挡剔除\"></a>遮挡剔除</h3><p>通过<strong>Shader</strong>创建材质放入到URP的 UniversalRenderPipelineAsset_Renderer ，新建Add Renderer Feature,选择被遮挡的Layer Mask，可以多选，然后设置被遮挡后的材质，Depth设置为True，Depth Test设置为Greater。当被遮挡物体层级Greater时，显示被遮挡后的材质。</p>\n<p>同样Add Renderer Feature，选择相同被遮挡的Layer Mask，其他不做修改，当不被遮挡时显示原有材质</p>\n<p><strong>关于遮挡材质的制作</strong></p>\n<p>shader创建：Project &gt; 右键 &gt; Shader &gt; URP &gt;UnLit Shader Graph</p>\n<blockquote>\n<p>Graph Inspector &gt; Grapj Settings &gt; Universal &gt; Alpha Clip,打开Alpha透明通道</p>\n</blockquote>\n<ol>\n<li>使用Fresnel Effect 制作遮挡的效果，通过新建变量Color修改颜色。通过Multiply混合，传给Base color。</li>\n<li>Dither制作噪点效果，新建Float修改Dither的X值，out传给Fragment &gt; Alpha通道</li>\n<li>创建Flaot 修改Alpha Threshold。</li>\n<li>选择Shader创建材质</li>\n</ol>\n<p><strong>关于鼠标射线遮挡</strong></p>\n<ul>\n<li>选中遮挡的物体，设置层级为Ignore Raycast</li>\n<li>关闭遮挡物体的Mesh Collider</li>\n</ul>\n<h3 id=\"EnemyController\"><a href=\"#EnemyController\" class=\"headerlink\" title=\"EnemyController\"></a>EnemyController</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.AI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">enum</span> EnemyStates &#123;GUARD,PARTOL,CHASE,DEAD &#125;</span><br><span class=\"line\"><span class=\"comment\">//通过代码添加组件</span></span><br><span class=\"line\">[<span class=\"meta\">RequireComponent(typeof(NavMeshAgent))</span>]</span><br><span class=\"line\">[<span class=\"meta\">RequireComponent(typeof(CharacterStats))</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">EnemyController</span> : <span class=\"title\">MonoBehaviour</span>,<span class=\"title\">IEndGameObserver</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NavMeshAgent agent;</span><br><span class=\"line\">    EnemyStates enemyStates;</span><br><span class=\"line\">    Animator anim;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> CharacterStats characterStats;</span><br><span class=\"line\">    Collider coll;</span><br><span class=\"line\">    <span class=\"comment\">//攻击范围 </span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> sightRadius;</span><br><span class=\"line\">    <span class=\"comment\">//巡逻范围</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> partolRadius;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">bool</span> isGuard;</span><br><span class=\"line\">    <span class=\"comment\">//巡逻停留时间</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> lookAtTime;</span><br><span class=\"line\">    <span class=\"built_in\">float</span> remainLookAtTime;</span><br><span class=\"line\">    <span class=\"built_in\">float</span> speed;</span><br><span class=\"line\">    <span class=\"comment\">//cd时间</span></span><br><span class=\"line\">    <span class=\"built_in\">float</span> lastAttackTime;</span><br><span class=\"line\">    <span class=\"comment\">//下一个前往的巡逻点</span></span><br><span class=\"line\">    Vector3 wayPoint;</span><br><span class=\"line\">    <span class=\"comment\">//起始点</span></span><br><span class=\"line\">    Vector3 guardPoint;</span><br><span class=\"line\">    Quaternion guardRotation;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> GameObject attackTarget;</span><br><span class=\"line\">    <span class=\"built_in\">bool</span> isWalk, isChase, isFollow, isDie;</span><br><span class=\"line\">    <span class=\"built_in\">bool</span> playerDie;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        agent = GetComponent&lt;NavMeshAgent&gt;();</span><br><span class=\"line\">        anim = GetComponent&lt;Animator&gt;();</span><br><span class=\"line\">        characterStats = GetComponent&lt;CharacterStats&gt;();</span><br><span class=\"line\">        coll = GetComponent&lt;Collider&gt;();</span><br><span class=\"line\">        <span class=\"comment\">//保存原有速度；</span></span><br><span class=\"line\">        speed = agent.speed;</span><br><span class=\"line\">        guardPoint = transform.position;</span><br><span class=\"line\">        remainLookAtTime = lookAtTime;</span><br><span class=\"line\">        lastAttackTime = characterStats.CoolDown;</span><br><span class=\"line\">        guardRotation = transform.rotation;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Start</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isGuard)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            enemyStates = EnemyStates.GUARD;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            enemyStates = EnemyStates.PARTOL;</span><br><span class=\"line\">            GetNewPartolPoint();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//将对象添加进gamemanager里，用于广播</span></span><br><span class=\"line\">        GameManager.Instance.AddObserver(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Update is called once per frame</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (characterStats.CurrentHealth == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            isDie = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!playerDie)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            SwitchStates();</span><br><span class=\"line\">            SwitchAnim();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (lastAttackTime &gt; <span class=\"number\">0f</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                lastAttackTime -= Time.deltaTime;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//private void OnEnable()</span></span><br><span class=\"line\">    <span class=\"comment\">//&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//    Gamemanager.Instance.AddObserver(this);</span></span><br><span class=\"line\">    <span class=\"comment\">//&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnDisable</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!GameManager.isInitialized) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        GameManager.Instance.RemoveObserver(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SwitchStates</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isDie)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            enemyStates = EnemyStates.DEAD;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (FindPlayer())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            enemyStates = EnemyStates.CHASE;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (enemyStates)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> EnemyStates.GUARD:</span><br><span class=\"line\">                isChase = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                isWalk = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (transform.position!=guardPoint)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    isWalk = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    agent.isStopped = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    agent.destination = guardPoint;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(Vector3.SqrMagnitude(guardPoint - transform.position) &lt;= agent.stoppingDistance)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        isWalk = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                        agent.isStopped = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                        <span class=\"comment\">//旋转会初始的角度</span></span><br><span class=\"line\">                        Quaternion.Lerp(transform.rotation, guardRotation, <span class=\"number\">0.1f</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> EnemyStates.PARTOL:</span><br><span class=\"line\">                isChase = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                agent.speed = speed * <span class=\"number\">0.5f</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Vector3.Distance(transform.position, wayPoint) &lt;= <span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    isWalk = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (remainLookAtTime &lt; <span class=\"number\">0f</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        GetNewPartolPoint();</span><br><span class=\"line\">                        remainLookAtTime = lookAtTime;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        remainLookAtTime -= Time.deltaTime;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    isWalk = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    agent.destination = wayPoint;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> EnemyStates.CHASE:</span><br><span class=\"line\"></span><br><span class=\"line\">                agent.speed = speed;</span><br><span class=\"line\">                isWalk = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                isChase = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"comment\">//脱战</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!FindPlayer())</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    isFollow = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    agent.destination = transform.position;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (remainLookAtTime &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        remainLookAtTime -= Time.deltaTime;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (isGuard)</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            enemyStates = EnemyStates.GUARD;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">else</span></span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            enemyStates = EnemyStates.PARTOL;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//追击</span></span><br><span class=\"line\">                    isFollow = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    agent.isStopped = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    agent.destination = attackTarget.transform.position;</span><br><span class=\"line\">                    <span class=\"comment\">//判断是否追击到</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (TargetInAttackRange() || TargetInSkillRange())</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        isFollow = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                        agent.isStopped = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (lastAttackTime &lt; <span class=\"number\">0f</span>)</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            lastAttackTime = characterStats.CoolDown;</span><br><span class=\"line\">                            <span class=\"comment\">//暴击判断</span></span><br><span class=\"line\">                            characterStats.isCritical = Random.<span class=\"keyword\">value</span> &lt; characterStats.CriticalChance;</span><br><span class=\"line\">                            </span><br><span class=\"line\">                            Attack();</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> EnemyStates.DEAD:</span><br><span class=\"line\">                <span class=\"comment\">//enemy死亡时不会发生继续攻击的情况</span></span><br><span class=\"line\">                coll.enabled = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"comment\">//agent.enabled = false;</span></span><br><span class=\"line\">                <span class=\"comment\">//设置之后不会阻挡Player行动</span></span><br><span class=\"line\">                agent.radius = <span class=\"number\">0f</span>;</span><br><span class=\"line\">                Destroy(gameObject, <span class=\"number\">2f</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"literal\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Attack</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        transform.LookAt(attackTarget.transform);</span><br><span class=\"line\">        anim.SetBool(<span class=\"string\">&quot;Critical&quot;</span>, characterStats.isCritical);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (TargetInAttackRange())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            anim.SetTrigger(<span class=\"string\">&quot;Attack&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(TargetInSkillRange())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            anim.SetTrigger(<span class=\"string\">&quot;Skill&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">bool</span> <span class=\"title\">FindPlayer</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Collider[] colliderNum = Physics.OverlapSphere(transform.position, sightRadius);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> collider <span class=\"keyword\">in</span> colliderNum)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (collider.gameObject.CompareTag(<span class=\"string\">&quot;Player&quot;</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                attackTarget = collider.gameObject;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SwitchAnim</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        anim.SetBool(<span class=\"string\">&quot;Walk&quot;</span>, isWalk);</span><br><span class=\"line\">        anim.SetBool(<span class=\"string\">&quot;Chase&quot;</span>, isChase);</span><br><span class=\"line\">        anim.SetBool(<span class=\"string\">&quot;Follow&quot;</span>, isFollow);</span><br><span class=\"line\">        anim.SetBool(<span class=\"string\">&quot;Die&quot;</span>, isDie);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnDrawGizmosSelected</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//画出攻击范围圈</span></span><br><span class=\"line\">        Gizmos.color = Color.green;</span><br><span class=\"line\">        Gizmos.DrawWireSphere(transform.position, sightRadius);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GetNewPartolPoint</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">float</span> ran_x = Random.Range(-partolRadius, partolRadius);</span><br><span class=\"line\">        <span class=\"built_in\">float</span> ran_z = Random.Range(-partolRadius, partolRadius);</span><br><span class=\"line\">        <span class=\"comment\">//不修改高度，防止坑坑洼洼的地面</span></span><br><span class=\"line\">        <span class=\"comment\">//guardPoint是为了随机在初始位置点的随机移动</span></span><br><span class=\"line\">        wayPoint = <span class=\"keyword\">new</span> Vector3(guardPoint.x + ran_x, transform.position.y, guardPoint.z + ran_z);</span><br><span class=\"line\">        NavMeshHit hit;</span><br><span class=\"line\">        <span class=\"comment\">//NavMesh.SamplePosition（）方法的最后一位为窗口 Navigation &gt; Area的序列，从1开始</span></span><br><span class=\"line\">        <span class=\"comment\">//方法为 在waypoint的sightRadius范围内寻找1层级（可移动到）的点</span></span><br><span class=\"line\">        <span class=\"comment\">//方法返回的为True和False</span></span><br><span class=\"line\">        wayPoint = NavMesh.SamplePosition(wayPoint, <span class=\"keyword\">out</span> hit, sightRadius,<span class=\"number\">1</span>) ? hit.position : transform.position;</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">bool</span> <span class=\"title\">TargetInAttackRange</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attackTarget != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Vector3.Distance(attackTarget.transform.position, transform.position) &lt; characterStats.AttackRange;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">bool</span> <span class=\"title\">TargetInSkillRange</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attackTarget != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Vector3.Distance(attackTarget.transform.position, transform.position) &lt; characterStats.SkillRange;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Hit</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attackTarget != <span class=\"literal\">null</span> &amp;&amp; transform.IsFacingTarget(attackTarget.transform))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> targetStats = attackTarget.GetComponent&lt;CharacterStats&gt;();</span><br><span class=\"line\">            characterStats.TakeDamage(characterStats, targetStats);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">EndsNotify</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        isChase = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        isWalk = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        attackTarget = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        playerDie = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        anim.SetBool(<span class=\"string\">&quot;Victory&quot;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"PlayController\"><a href=\"#PlayController\" class=\"headerlink\" title=\"PlayController\"></a>PlayController</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.AI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">PlayerController</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> lastAttackTime;</span><br><span class=\"line\">    <span class=\"comment\">//攻击目标对象</span></span><br><span class=\"line\">    GameObject attackTarget;</span><br><span class=\"line\">    CharacterStats characterStats;</span><br><span class=\"line\">    NavMeshAgent agent;</span><br><span class=\"line\">    Animator anim;</span><br><span class=\"line\">    <span class=\"built_in\">bool</span> isDie;</span><br><span class=\"line\">    <span class=\"built_in\">float</span> stopDistance;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        agent = GetComponent&lt;NavMeshAgent&gt;();</span><br><span class=\"line\">        anim = GetComponent&lt;Animator&gt;();</span><br><span class=\"line\">        characterStats = GetComponent&lt;CharacterStats&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Start</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//添加事件</span></span><br><span class=\"line\">        MouseManager.Instance.OnMouseClicked += MoveToTarget;</span><br><span class=\"line\">        MouseManager.Instance.OnClickedEnemy += EventAttack;</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"comment\">//注册Gamemanager的广播</span></span><br><span class=\"line\">        GameManager.Instance.RigisterPlayer(characterStats);</span><br><span class=\"line\">        stopDistance = agent.stoppingDistance;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        isDie = characterStats.CurrentHealth == <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isDie)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            GameManager.Instance.NotifyObservers();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        AnimationChange();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(lastAttackTime&gt;<span class=\"number\">0f</span>)</span><br><span class=\"line\">            lastAttackTime -= Time.deltaTime;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MoveToTarget</span>(<span class=\"params\">Vector3 target</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isDie) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        agent.isStopped = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        agent.stoppingDistance = stopDistance;</span><br><span class=\"line\">        StopAllCoroutines();</span><br><span class=\"line\">        agent.destination = target;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AnimationChange</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        anim.SetFloat(<span class=\"string\">&quot;Speed&quot;</span>, agent.velocity.sqrMagnitude);</span><br><span class=\"line\">        anim.SetBool(<span class=\"string\">&quot;Die&quot;</span>, isDie);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">EventAttack</span>(<span class=\"params\">GameObject target</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isDie) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            attackTarget = target;</span><br><span class=\"line\">            StartCoroutine(<span class=\"string\">&quot;MoveToAttackTarget&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//动画事件</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Hit</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attackTarget.CompareTag(<span class=\"string\">&quot;Attackable&quot;</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (attackTarget.GetComponent&lt;Rock&gt;())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//在空中也可以击飞</span></span><br><span class=\"line\">                attackTarget.GetComponent&lt;Rock&gt;().rockStates = Rock.RockStates.HitEnemy;</span><br><span class=\"line\">                <span class=\"comment\">//赋予初始速度，防止fixudate时修改rock状态</span></span><br><span class=\"line\">                attackTarget.GetComponent&lt;Rigidbody&gt;().velocity = Vector3.one;</span><br><span class=\"line\">                attackTarget.GetComponent&lt;Rigidbody&gt;().AddForce(transform.forward * <span class=\"number\">20f</span>,ForceMode.Impulse);</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> targetStats = attackTarget.GetComponent&lt;CharacterStats&gt;();</span><br><span class=\"line\">            characterStats.TakeDamage(characterStats, targetStats);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\">IEnumerator <span class=\"title\">MoveToAttackTarget</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        agent.stoppingDistance = characterStats.AttackRange;</span><br><span class=\"line\">        agent.isStopped = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (Vector3.Distance(attackTarget.transform.position, transform.position) &gt; characterStats.AttackRange)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            agent.destination = attackTarget.transform.position;</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        agent.isStopped = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (lastAttackTime &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            transform.LookAt(attackTarget.transform.position);</span><br><span class=\"line\">            <span class=\"comment\">//暴击率的计算</span></span><br><span class=\"line\">            characterStats.isCritical = Random.<span class=\"keyword\">value</span> &lt; characterStats.CriticalChance;</span><br><span class=\"line\">            anim.SetBool(<span class=\"string\">&quot;Critical&quot;</span>,characterStats.isCritical);</span><br><span class=\"line\">            anim.SetTrigger(<span class=\"string\">&quot;Attack&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">//重置冷却时间</span></span><br><span class=\"line\">            lastAttackTime = characterStats.CoolDown;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CharacterStats\"><a href=\"#CharacterStats\" class=\"headerlink\" title=\"CharacterStats\"></a>CharacterStats</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">CharacterStats</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">event</span> Action&lt;<span class=\"built_in\">int</span>, <span class=\"built_in\">int</span>&gt; UpdateHealthBarOnAttack;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Character_SO templateData;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Character_SO character;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> AttackSO attackSO;</span><br><span class=\"line\">    [<span class=\"meta\">HideInInspector</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">bool</span> isCritical;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//用模板为character生成一组数据，防止多个enemy访问同一组数据</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (templateData != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            character = Instantiate(templateData);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> MaxHealth</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">if</span> (character != <span class=\"literal\">null</span>) &#123; <span class=\"keyword\">return</span> character.maxHealth; &#125; <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123; character.maxHealth = <span class=\"keyword\">value</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> CurrentHealth</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">if</span> (character != <span class=\"literal\">null</span>) &#123; <span class=\"keyword\">return</span> character.currentHealth; &#125; <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123; character.currentHealth = <span class=\"keyword\">value</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> BaseDefence</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">if</span> (character != <span class=\"literal\">null</span>) &#123; <span class=\"keyword\">return</span> character.baseDefence; &#125; <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123; character.baseDefence = <span class=\"keyword\">value</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> CurrentDefence</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">if</span> (character != <span class=\"literal\">null</span>) &#123; <span class=\"keyword\">return</span> character.currentDefence; &#125; <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123; character.currentDefence = <span class=\"keyword\">value</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> AttackRange &#123; <span class=\"keyword\">get</span> &#123;  <span class=\"keyword\">return</span> attackSO.attackRange; &#125; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> SkillRange &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> attackSO.skillRange; &#125; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> CoolDown &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> attackSO.coolDown; &#125; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> MinDamage &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> attackSO.minDamage; &#125; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> MaxDamage &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> attackSO.maxDamage; &#125; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> CriticalMultiplier &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> attackSO.criticalMultiplier; &#125; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> CriticalChance &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> attackSO.criticalChance; &#125; &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">TakeDamage</span>(<span class=\"params\">CharacterStats attacker,CharacterStats defender</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">int</span> damage = Mathf.Max(attacker.CurrentDamage() - defender.CurrentDefence, <span class=\"number\">0</span>);</span><br><span class=\"line\">        defender.CurrentHealth = Mathf.Max(defender.CurrentHealth - damage, <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"comment\">//defender受伤的动画 暴击才会有</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attacker.isCritical)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            defender.GetComponent&lt;Animator&gt;().SetTrigger(<span class=\"string\">&quot;Hit&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//修改防御者血条</span></span><br><span class=\"line\">        defender.UpdateHealthBarOnAttack?.Invoke(defender.CurrentHealth, defender.MaxHealth);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (defender.CurrentHealth &lt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//更新攻击者经验</span></span><br><span class=\"line\">            attacker.character.UpdateExp(defender.character.killPoint);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">TakeDamage</span>(<span class=\"params\"><span class=\"built_in\">int</span> damage,CharacterStats defender</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">int</span> currentDamage = Mathf.Max(damage - defender.CurrentDefence, <span class=\"number\">0</span>);</span><br><span class=\"line\">        defender.CurrentHealth = Mathf.Max(defender.CurrentHealth - currentDamage, <span class=\"number\">0</span>);</span><br><span class=\"line\">        UpdateHealthBarOnAttack?.Invoke(defender.CurrentHealth, defender.MaxHealth);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">int</span> <span class=\"title\">CurrentDamage</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">float</span> damage = UnityEngine.Random.Range(MinDamage, MaxDamage); ;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isCritical)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            damage *= CriticalMultiplier;</span><br><span class=\"line\">            Debug.Log(<span class=\"string\">&quot;暴击：&quot;</span> + damage);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"built_in\">int</span>)damage;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>Character_SO</strong></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//filename为创建的文件的文件名，menuName为文件夹目录层级名字</span></span><br><span class=\"line\">[<span class=\"meta\">CreateAssetMenu(fileName = <span class=\"meta-string\">&quot;New Data&quot;</span>, menuName = <span class=\"meta-string\">&quot;Character Stats/Data&quot;</span>)</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Character_SO</span> : <span class=\"title\">ScriptableObject</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;Stats Info&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> maxHealth;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> currentHealth;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> baseDefence;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> currentDefence;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;Kill&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> killPoint;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;Level&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> currentLevel;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> maxLevel;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> baseExp;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> currentExp;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> levelBuff;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">UpdateExp</span>(<span class=\"params\"><span class=\"built_in\">int</span> point</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        currentExp += point;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (currentExp &gt;= baseExp)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            currentExp -= baseExp;</span><br><span class=\"line\">            LevelUP();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">LevelUP</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        currentLevel = Mathf.Clamp(currentLevel + <span class=\"number\">1</span>, <span class=\"number\">0</span>, maxLevel);</span><br><span class=\"line\">        baseExp += (<span class=\"built_in\">int</span>)(baseExp * LevelMultiplier);</span><br><span class=\"line\">        maxHealth = (<span class=\"built_in\">int</span>)(maxHealth * LevelMultiplier);</span><br><span class=\"line\">        currentHealth = maxHealth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> LevelMultiplier</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123;<span class=\"keyword\">return</span> <span class=\"number\">1</span>+(currentLevel<span class=\"number\">-1</span>)*levelBuff ; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>Attack_SO</strong></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"meta\">CreateAssetMenu(fileName =<span class=\"meta-string\">&quot;New Attack&quot;</span>,menuName =<span class=\"meta-string\">&quot;Attack/Attack Data&quot;</span>)</span>]</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">AttackSO</span> : <span class=\"title\">ScriptableObject</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;Attack Info&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> attackRange;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> skillRange;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> coolDown;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> minDamage;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> maxDamage;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> criticalMultiplier;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> criticalChance;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"泛型单例模式Singleton\"><a href=\"#泛型单例模式Singleton\" class=\"headerlink\" title=\"泛型单例模式Singleton\"></a>泛型单例模式Singleton</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SingleTon</span>&lt;<span class=\"title\">T</span>&gt; : <span class=\"title\">MonoBehaviour</span> <span class=\"keyword\">where</span> <span class=\"title\">T</span>:<span class=\"title\">SingleTon</span>&lt;<span class=\"title\">T</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> T instance;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> T Instance</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> instance; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (instance != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Destroy(gameObject);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            instance = (T)<span class=\"keyword\">this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> isInitialized</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">         <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> instance != <span class=\"literal\">null</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"接口Observer-Pattern\"><a href=\"#接口Observer-Pattern\" class=\"headerlink\" title=\"接口Observer Pattern\"></a>接口Observer Pattern</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IEndGameObserver</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//只定义，不实现留给使用的实现这个方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">EndsNotify</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"GameManger\"><a href=\"#GameManger\" class=\"headerlink\" title=\"GameManger\"></a>GameManger</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">GameManager</span> : <span class=\"title\">SingleTon</span>&lt;<span class=\"title\">GameManager</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> CharacterStats playerStats;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">//接口类型</span></span><br><span class=\"line\">    List&lt;IEndGameObserver&gt; endGameObeverses = <span class=\"keyword\">new</span> List&lt;IEndGameObserver&gt;();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">base</span>.Awake();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">RigisterPlayer</span>(<span class=\"params\">CharacterStats characterStats</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        playerStats = characterStats;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">AddObserver</span>(<span class=\"params\">IEndGameObserver observer</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        endGameObeverses.Add(observer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">RemoveObserver</span>(<span class=\"params\">IEndGameObserver observer</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        endGameObeverses.Remove(observer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">NotifyObservers</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//遍历添加进来的对象</span></span><br><span class=\"line\">        <span class=\"comment\">//挨个调用EndsNotify（）方法</span></span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> observer <span class=\"keyword\">in</span> endGameObeverses)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            observer.EndsNotify();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置兽人Grunt\"><a href=\"#设置兽人Grunt\" class=\"headerlink\" title=\"设置兽人Grunt\"></a>设置兽人Grunt</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.AI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//继承于EnemyController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Grunt</span> : <span class=\"title\">EnemyController</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;GRUNT推力&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> kickForce = <span class=\"number\">15f</span>;</span><br><span class=\"line\">    <span class=\"comment\">//动画事件</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">KickOff</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attackTarget != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            transform.LookAt(attackTarget.transform);</span><br><span class=\"line\">            Vector3 direction = attackTarget.transform.position - transform.position;</span><br><span class=\"line\">            direction.Normalize();</span><br><span class=\"line\">            <span class=\"comment\">//打断player行动，进行击退</span></span><br><span class=\"line\">            attackTarget.GetComponent&lt;NavMeshAgent&gt;().isStopped = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            attackTarget.GetComponent&lt;NavMeshAgent&gt;().velocity = direction * kickForce;</span><br><span class=\"line\">            attackTarget.GetComponent&lt;Animator&gt;().SetTrigger(<span class=\"string\">&quot;Dizzy&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"拓展方法Extension-Method\"><a href=\"#拓展方法Extension-Method\" class=\"headerlink\" title=\"拓展方法Extension Method\"></a>拓展方法Extension Method</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//拓展方法 </span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">ExtensionMethod</span> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">float</span> dotThreshold = <span class=\"number\">0.5f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//拓展的是this后面的方法,后面的为方法所需要的函数</span></span><br><span class=\"line\">    <span class=\"comment\">//使用方法 :transform.IsFacingTarget(target)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> <span class=\"title\">IsFacingTarget</span>(<span class=\"params\"><span class=\"keyword\">this</span> Transform transform,Transform target</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//向量OA-OB=BA;O为原点；</span></span><br><span class=\"line\">        Vector3 vectorToTarget = target.position - transform.position;</span><br><span class=\"line\">        vectorToTarget.Normalize();</span><br><span class=\"line\">        <span class=\"comment\">//vector3.dot 为看向的方向与vectortoTarget的方向的夹角，正对着为1，背对着为-1，左右为0；</span></span><br><span class=\"line\">        <span class=\"built_in\">float</span> dot = Vector3.Dot(transform.forward, vectorToTarget);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dot &gt;= dotThreshold;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"石头人Golem\"><a href=\"#石头人Golem\" class=\"headerlink\" title=\"石头人Golem\"></a>石头人Golem</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.AI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Golem</span> : <span class=\"title\">EnemyController</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;GRUNT推力&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> kickForce = <span class=\"number\">25f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject rockPerfab;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Transform handTransform;</span><br><span class=\"line\">    <span class=\"comment\">//animation event</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">KickOff</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attackTarget != <span class=\"literal\">null</span> &amp;&amp; transform.IsFacingTarget(attackTarget.transform))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> targetStats = attackTarget.GetComponent&lt;CharacterStats&gt;();</span><br><span class=\"line\">            Vector3 direction = attackTarget.transform.position - transform.position;</span><br><span class=\"line\">            direction.Normalize();</span><br><span class=\"line\">            transform.LookAt(attackTarget.transform);</span><br><span class=\"line\">            attackTarget.GetComponent&lt;NavMeshAgent&gt;().isStopped = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            attackTarget.GetComponent&lt;NavMeshAgent&gt;().velocity = direction * kickForce;</span><br><span class=\"line\">            attackTarget.GetComponent&lt;Animator&gt;().SetTrigger(<span class=\"string\">&quot;Dizzy&quot;</span>);</span><br><span class=\"line\">            characterStats.TakeDamage(characterStats, targetStats);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//animation event</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ThrowRock</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attackTarget != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            GameObject rock = Instantiate(rockPerfab, handTransform.position, Quaternion.identity);</span><br><span class=\"line\">            rock.GetComponent&lt;Rock&gt;().target = attackTarget;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"扔石头\"><a href=\"#扔石头\" class=\"headerlink\" title=\"扔石头\"></a>扔石头</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.AI;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.Animations;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Rock</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">enum</span> RockStates &#123; HitPlayer,HitEnemy,HitNothing&#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> RockStates rockStates;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject target;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject rockBreak;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> force;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> damage;</span><br><span class=\"line\">    Vector3 direction;</span><br><span class=\"line\">    Rigidbody rb;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Start</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        rb = GetComponent&lt;Rigidbody&gt;();</span><br><span class=\"line\">        rb.velocity = Vector3.one;</span><br><span class=\"line\">        rockStates = RockStates.HitPlayer;</span><br><span class=\"line\">        FlyToTarget();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">FixedUpdate</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rb.velocity.sqrMagnitude &lt; <span class=\"number\">0.5f</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            rockStates = RockStates.HitNothing;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">FlyToTarget</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target == <span class=\"literal\">null</span>)</span><br><span class=\"line\">            target = FindObjectOfType&lt;PlayerController&gt;().gameObject;</span><br><span class=\"line\">        direction = (target.transform.position - transform.position+Vector3.up ).normalized;</span><br><span class=\"line\">        rb.AddForce(direction * force, ForceMode.Impulse);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnCollisionEnter</span>(<span class=\"params\">Collision collision</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (rockStates)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> RockStates.HitPlayer:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (collision.collider.CompareTag(<span class=\"string\">&quot;Player&quot;</span>))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    collision.gameObject.GetComponent&lt;NavMeshAgent&gt;().isStopped = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    collision.gameObject.GetComponent&lt;NavMeshAgent&gt;().velocity = direction * force;</span><br><span class=\"line\">                    collision.gameObject.GetComponent&lt;Animator&gt;().SetTrigger(<span class=\"string\">&quot;Dizzy&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                    rockStates = RockStates.HitNothing;</span><br><span class=\"line\">                    collision.gameObject.GetComponent&lt;CharacterStats&gt;().TakeDamage(damage, collision.gameObject.GetComponent&lt;CharacterStats&gt;());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> RockStates.HitEnemy:</span><br><span class=\"line\">                <span class=\"comment\">//如果有这个组件返回true；</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (collision.gameObject.GetComponent&lt;Golem&gt;())</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    collision.gameObject.GetComponent&lt;CharacterStats&gt;().TakeDamage(damage, collision.gameObject.GetComponent&lt;CharacterStats&gt;());</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    <span class=\"comment\">//攻击石头人之后，石头碎裂生成粒子特效</span></span><br><span class=\"line\">                    Instantiate(rockBreak, transform.position, Quaternion.identity);</span><br><span class=\"line\">                    Destroy(gameObject);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> RockStates.HitNothing:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"literal\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>粒子特效</strong></p>\n<p>Hierarchy &gt; Effects &gt; Particle System</p>\n<h3 id=\"血条显示-HealthBar\"><a href=\"#血条显示-HealthBar\" class=\"headerlink\" title=\"血条显示 HealthBar\"></a>血条显示 HealthBar</h3><p><strong>挂载在enemy身上</strong></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.UI;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">HealthBar</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject healthBarUiPerfab;</span><br><span class=\"line\">\t<span class=\"comment\">//血条的位置，enemy设置一个空对象，调整位置为头部上方</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Transform barPoint;</span><br><span class=\"line\">    <span class=\"comment\">//是否一直显示 显示的时长</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">bool</span> alwaysVisible;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> visibleTime;</span><br><span class=\"line\">    <span class=\"built_in\">float</span> timeLeft;</span><br><span class=\"line\"></span><br><span class=\"line\">    Image healthSlider;</span><br><span class=\"line\">    Transform UIBar;</span><br><span class=\"line\">    Transform cam;</span><br><span class=\"line\">    CharacterStats currentStats;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取组件</span></span><br><span class=\"line\">        currentStats = GetComponent&lt;CharacterStats&gt;();</span><br><span class=\"line\">        <span class=\"comment\">//添加事务</span></span><br><span class=\"line\">        currentStats.UpdateHealthBarOnAttack += UpdateHealthBar;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEnable</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cam = Camera.main.transform;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"function\">Canvas canvas <span class=\"keyword\">in</span> <span class=\"title\">FindObjectsOfType</span>&lt;<span class=\"title\">Canvas</span>&gt;(<span class=\"params\"></span>))</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (canvas.renderMode == RenderMode.WorldSpace)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                UIBar = Instantiate(healthBarUiPerfab, canvas.transform).transform;</span><br><span class=\"line\">                healthSlider = UIBar.GetChild(<span class=\"number\">0</span>).GetComponent&lt;Image&gt;();</span><br><span class=\"line\">                UIBar.gameObject.SetActive(alwaysVisible);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">UpdateHealthBar</span>(<span class=\"params\"><span class=\"built_in\">int</span> currentHealth, <span class=\"built_in\">int</span> Maxhealth</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (currentHealth &lt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">            Destroy(UIBar.gameObject);</span><br><span class=\"line\"></span><br><span class=\"line\">        UIBar.gameObject.SetActive(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"comment\">//攻击时重置显示剩余时间</span></span><br><span class=\"line\">        timeLeft = visibleTime;</span><br><span class=\"line\">        <span class=\"built_in\">float</span> sliderPercent = (<span class=\"built_in\">float</span>)currentHealth / Maxhealth;</span><br><span class=\"line\">        <span class=\"comment\">//image Type设置为Filled，fillmethod设置为Horizontal</span></span><br><span class=\"line\">        healthSlider.fillAmount = sliderPercent;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">LateUpdate</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (UIBar != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//位置</span></span><br><span class=\"line\">            UIBar.position = barPoint.position;</span><br><span class=\"line\">            <span class=\"comment\">//ui的方向与摄像机的方向相反</span></span><br><span class=\"line\">            UIBar.forward = -cam.forward;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (timeLeft &lt;= <span class=\"number\">0f</span>&amp;&amp;!alwaysVisible)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                UIBar.gameObject.SetActive(<span class=\"literal\">false</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                timeLeft -= Time.deltaTime;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"PlayerUI\"><a href=\"#PlayerUI\" class=\"headerlink\" title=\"PlayerUI\"></a>PlayerUI</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.UI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">PlayHealthBar</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Text level;</span><br><span class=\"line\">    Image healthSlider;</span><br><span class=\"line\">    Image expSlider;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        level = transform.GetChild(<span class=\"number\">2</span>).GetComponent&lt;Text&gt;();</span><br><span class=\"line\">        healthSlider = transform.GetChild(<span class=\"number\">0</span>).GetChild(<span class=\"number\">0</span>).GetComponent&lt;Image&gt;();</span><br><span class=\"line\">        expSlider = transform.GetChild(<span class=\"number\">1</span>).GetChild(<span class=\"number\">0</span>).GetComponent&lt;Image&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">LateUpdate</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        level.text = <span class=\"string\">&quot;Level  &quot;</span> + GameManager.Instance.playerStats.character.currentLevel.ToString(<span class=\"string\">&quot;00&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        UpdateHealth();</span><br><span class=\"line\"></span><br><span class=\"line\">        UpdateExp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">UpdateHealth</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">float</span> sliderPercent = (<span class=\"built_in\">float</span>)GameManager.Instance.playerStats.CurrentHealth / GameManager.Instance.playerStats.MaxHealth;</span><br><span class=\"line\">        healthSlider.fillAmount = sliderPercent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">UpdateExp</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">float</span> sliderPercent = (<span class=\"built_in\">float</span>)GameManager.Instance.playerStats.character.currentExp / GameManager.Instance.playerStats.character.baseExp;</span><br><span class=\"line\">        expSlider.fillAmount = sliderPercent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>设置ui时，首先需要调整Canvas的Scaler</p>\n<p>UI Scale Mode设置为Scale With Screen Size,Match设置为0.5，同时兼顾高度和宽度</p>\n</blockquote>\n<blockquote>\n<p>Canvas有个Canvas Group组件，可以设置取消阻挡射线</p>\n<p>也可以通过调整Alpha的值去做转场</p>\n</blockquote>\n<h3 id=\"传送门\"><a href=\"#传送门\" class=\"headerlink\" title=\"传送门\"></a>传送门</h3><p>使用lit shader</p>\n<p>shader制作成材质，创建一个3D &gt; plane，拖拽赋予这个材质，并生成一个传送点位置</p>\n<p>枚举类</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">TransitionDestination</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">enum</span> DestinationTag &#123; Enter,A,B,C&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> DestinationTag destinationTag;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">TransiationPoint</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">enum</span> TransitionType &#123; SameScence,DifferentScence&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;Transition Info&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> scenceName;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> TransitionType transitionType;</span><br><span class=\"line\">    <span class=\"comment\">//枚举终点编号</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> TransitionDestination.DestinationTag destinationTag;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">bool</span> canTrans;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Input.GetKeyDown(KeyCode.E) &amp;&amp; canTrans)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ScenceController.Instance.TransitionToDestination(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnTriggerStay</span>(<span class=\"params\">Collider other</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (other.CompareTag(<span class=\"string\">&quot;Player&quot;</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            canTrans = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnTriggerExit</span>(<span class=\"params\">Collider other</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (other.CompareTag(<span class=\"string\">&quot;Player&quot;</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            canTrans = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>实现场景转换</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.SceneManagement;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.AI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ScenceController</span> : <span class=\"title\">SingleTon</span>&lt;<span class=\"title\">ScenceController</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    GameObject player;</span><br><span class=\"line\">    NavMeshAgent playerAgent;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">TransitionToDestination</span>(<span class=\"params\">TransiationPoint transiationPoint</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (transiationPoint.transitionType)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> TransiationPoint.TransitionType.SameScence:</span><br><span class=\"line\">                StartCoroutine(Transition(SceneManager.GetActiveScene().name, transiationPoint.destinationTag));</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> TransiationPoint.TransitionType.DifferentScence:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"literal\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">IEnumerator <span class=\"title\">Transition</span>(<span class=\"params\"><span class=\"built_in\">string</span> scenceName,TransitionDestination.DestinationTag destinationTag</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        player = GameManager.Instance.playerStats.gameObject;</span><br><span class=\"line\"></span><br><span class=\"line\">        playerAgent = player.GetComponent&lt;NavMeshAgent&gt;();</span><br><span class=\"line\">        playerAgent.isStopped = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">//设置位置与方向transform.SetPositionAndRotation（）</span></span><br><span class=\"line\">        player.transform.SetPositionAndRotation(GetDestination(destinationTag).transform.position, GetDestination(destinationTag).transform.rotation);</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">//遍历获取终点的信息</span></span><br><span class=\"line\">    <span class=\"function\">TransitionDestination <span class=\"title\">GetDestination</span>(<span class=\"params\">TransitionDestination.DestinationTag destinationTag</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> entrances = FindObjectsOfType&lt;TransitionDestination&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> entrances)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (item.destinationTag == destinationTag)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> item;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"保存数据\"><a href=\"#保存数据\" class=\"headerlink\" title=\"保存数据\"></a>保存数据</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SaveManager</span> : <span class=\"title\">SingleTon</span>&lt;<span class=\"title\">SaveManager</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Input.GetKeyDown(KeyCode.K))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Save(GameManager.Instance.playerStats.character, GameManager.Instance.playerStats.name);</span><br><span class=\"line\">            Debug.Log(GameManager.Instance.playerStats.name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Input.GetKeyDown(KeyCode.L))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Load(GameManager.Instance.playerStats.character, GameManager.Instance.playerStats.name);</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Save</span>(<span class=\"params\"><span class=\"built_in\">object</span> data,<span class=\"built_in\">string</span> key</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//数据转成json</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> jsonData = JsonUtility.ToJson(data, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"comment\">//json转成二进制</span></span><br><span class=\"line\">        PlayerPrefs.SetString(key, jsonData);</span><br><span class=\"line\">        PlayerPrefs.Save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Load</span>(<span class=\"params\"><span class=\"built_in\">object</span> data, <span class=\"built_in\">string</span> key</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (PlayerPrefs.HasKey(key))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//PlayerPrefs.GetString(key)将二进制转为json，覆盖到data上</span></span><br><span class=\"line\">            JsonUtility.FromJsonOverwrite(PlayerPrefs.GetString(key), data);</span><br><span class=\"line\">            Debug.Log(<span class=\"string\">&quot;111&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"3DURP游戏制作笔记\"><a href=\"#3DURP游戏制作笔记\" class=\"headerlink\" title=\"3DURP游戏制作笔记\"></a>3DURP游戏制作笔记</h1><blockquote>\n<p>感谢麦扣老师！！！</p>\n<p><a href=\"https://space.bilibili.com/370283072\">b站地址</a></p>\n<p>这些是我跟着学习敲得代码，有些可能不一样，完全复制肯定会有问题，主要用来给学习的同学纠错</p>\n</blockquote>\n<h3 id=\"游戏的创建与地图的铺设\"><a href=\"#游戏的创建与地图的铺设\" class=\"headerlink\" title=\"游戏的创建与地图的铺设\"></a>游戏的创建与地图的铺设</h3><p>使用到的插件有<strong>Pro Grids</strong>,<strong>ProBuilder</strong>,<strong>PloyBrush</strong></p>\n<ol>\n<li><p>使用到的地图模板为正常模板，然后在Project文件夹中新建URP。</p>\n</li>\n<li><p>右上角Edit &gt; Project Setting</p>\n<ol>\n<li>将Graphics的Scirptable Render Pipeline Settings修改为创建的<strong>UniversalRenderPiepelineAsset</strong></li>\n<li>Quality的Rendering修改为创建的<strong>UniversalRenderPiepelineAsset</strong></li>\n</ol>\n</li>\n<li><p>使用素材时，升级素材的URP。Edit &gt; Render Pipeline &gt; Universal Render Pipeline &gt; Upgrade Project Materials To UniversalRP Materials</p>\n</li>\n<li><p>光照的设置 Windows &gt; Rendering &gt;Lighting。在Scene窗口生成一个New Lighting Settings。Lighting Mode一般为Baked Indirect（简介烘焙），Lightmapper一般选择为GPU，取消勾选Auto Generate，然后进行Generate Lighting。</p>\n<blockquote>\n<p>如果发生场景颜色发生改变，不是原本的颜色，可以在Lighting &gt; Environment里选择 Environment Lighting &gt; Source 设置为Color。</p>\n</blockquote>\n</li>\n<li><p>调整摄像机的技巧：Ctrl + Shift + F，调整物体坐标轴吸附 V键。</p>\n</li>\n<li><p>导入插件<strong>PloyBrush</strong>并且在导入时将Sample中的URP文件一并导入。 </p>\n<blockquote>\n<p>使用Ploybrush的笔刷刷颜色的时候，发现刷不上颜色的原因是，物体的材质并没有使用Ploybrush的shader创建的材质，用shader创建一个新的材质并修改物体的材质（拖拽也可以），然后进行颜色的涂抹</p>\n</blockquote>\n</li>\n<li><p>平台的大小和少数的顶点影响了地图的创作，所以需要<strong>Probuilder</strong>来生成更精致的地图平台</p>\n<blockquote>\n<p>同时按住<strong>Ctrl</strong>和<strong>Alt</strong>键点击Icon的齿轮，会调出单独的设置</p>\n<p>使用<strong>Center Pivot</strong>可以调整中心点</p>\n<p>关于如何使用preview package：Edit &gt; Project Setting &gt; Package manager ,<strong>Enable Preview Packages</strong></p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"地图的烘Bake\"><a href=\"#地图的烘Bake\" class=\"headerlink\" title=\"地图的烘Bake\"></a>地图的烘Bake</h3><p>窗口在 Window &gt; AI &gt; Navigation</p>\n<ol>\n<li><p>设置地面为Navigation static，在Navigation &gt; Object里的Navigation Area 设置为Walkable。</p>\n<blockquote>\n<ul>\n<li>选中物体之后，在Inspector窗口里，第一行有选择是否为Static，下拉可选择类型</li>\n<li>选中物体之后，在Navigation &gt; Object里设置Navigation static为<strong>true</strong></li>\n</ul>\n</blockquote>\n</li>\n<li><p>选中不可移动的物体，比如树木石头等，批量设置为Navigation static，特殊的除外。</p>\n</li>\n<li><p>为角色添加Navigation agent 组件，设置人物的圆柱体大小以及宽度。</p>\n</li>\n<li><p>在Navigation &gt; Bake 里同样设置为人物的圆柱体大小以及宽度等其他数据，然后点击bake，在地图上显示为蓝色的为可walk区域。</p>\n</li>\n<li><p>如果有物体可以移动，并且不想发生穿模效果，可选择添加组件Nav Mesh Obstacle,设置Carve为<strong>True</strong>，就会在地面同时切割出一部分，人物不可walk的区域。</p>\n</li>\n</ol>\n<h3 id=\"鼠标控制移动以及贴图\"><a href=\"#鼠标控制移动以及贴图\" class=\"headerlink\" title=\"鼠标控制移动以及贴图\"></a>鼠标控制移动以及贴图</h3><p><strong>所有管理类都不要忘了在游戏里创建一个空对象，添加上脚本</strong></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">MouseManager</span> : <span class=\"title\">SingleTon</span>&lt;<span class=\"title\">MouseManager</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//事务委托</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">event</span> Action&lt;Vector3&gt; OnMouseClicked;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">event</span> Action&lt;GameObject&gt; OnClickedEnemy;</span><br><span class=\"line\"></span><br><span class=\"line\">    RaycastHit hitInfo;</span><br><span class=\"line\">\t<span class=\"comment\">//鼠标贴图</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Texture2D point, doorway, attack, target, arrow;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">base</span>.Awake();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        SetCursorTexture();</span><br><span class=\"line\">        MouseControl();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SetCursorTexture</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Physics.Raycast(ray,<span class=\"keyword\">out</span> hitInfo))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//切换鼠标贴图</span></span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (hitInfo.collider.gameObject.tag)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;Ground&quot;</span>:</span><br><span class=\"line\">                    Cursor.SetCursor(target, <span class=\"keyword\">new</span> Vector2(<span class=\"number\">16</span>, <span class=\"number\">16</span>),CursorMode.Auto);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;Enemy&quot;</span>:</span><br><span class=\"line\">                    Cursor.SetCursor(attack, <span class=\"keyword\">new</span> Vector2(<span class=\"number\">2</span>, <span class=\"number\">2</span>), CursorMode.Auto);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;Attackable&quot;</span>:</span><br><span class=\"line\">                    Cursor.SetCursor(attack, <span class=\"keyword\">new</span> Vector2(<span class=\"number\">2</span>, <span class=\"number\">2</span>), CursorMode.Auto);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;Portal&quot;</span>:</span><br><span class=\"line\">                    Cursor.SetCursor(doorway, <span class=\"keyword\">new</span> Vector2(<span class=\"number\">2</span>, <span class=\"number\">2</span>), CursorMode.Auto);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MouseControl</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Input.GetMouseButtonDown(<span class=\"number\">0</span>) &amp;&amp; hitInfo.collider != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (hitInfo.collider.gameObject.CompareTag(<span class=\"string\">&quot;Ground&quot;</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                OnMouseClicked?.Invoke(hitInfo.point);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (hitInfo.collider.gameObject.CompareTag(<span class=\"string\">&quot;Enemy&quot;</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                OnClickedEnemy?.Invoke(hitInfo.collider.gameObject);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (hitInfo.collider.gameObject.CompareTag(<span class=\"string\">&quot;Attackable&quot;</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                OnClickedEnemy?.Invoke(hitInfo.collider.gameObject);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (hitInfo.collider.gameObject.CompareTag(<span class=\"string\">&quot;Portal&quot;</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                OnMouseClicked?.Invoke(hitInfo.point);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>关于鼠标的贴图</strong></p>\n<p>鼠标贴图为<strong>Texture</strong>,一般为无背景的图片，加载到Unity之后，选中贴图并把Texture type修改为<strong>Cursor</strong>。</p>\n<h3 id=\"Cineramachine\"><a href=\"#Cineramachine\" class=\"headerlink\" title=\"Cineramachine\"></a>Cineramachine</h3><p>选中Main camera，Gameobject &gt; Align View to Selected,将主相机锁定视角</p>\n<p>状态栏Cineramachine选择一个合适的摄像机 ，当前选择的为CinemachineVirtualCanmera,取消主摄像机的Audio Listener，Body选择Framing Transposer,Aim选择Nothing</p>\n<p>Follow 选择为人物对象 ，如果人物坐标轴在下方，可以在人物对象里新建一个空物体，然后将坐标轴移动到人物中心位置，将物体拖拽到<strong>Follow</strong>。</p>\n<blockquote>\n<p><strong>BODY</strong></p>\n<ul>\n<li>Do Nothing：不移动虚拟相机</li>\n<li>Framing Transposer：跟随目标移动，并在屏幕空间保持相机和跟随目标的相对位置。</li>\n<li>Hard Lock to Target：虚拟相机和跟随目标使用相同位置。</li>\n<li>Orbital Transposer：相机和跟随目标的相对位置是可变的，还能接收用户的输入。常见于玩家控制的相机。</li>\n<li>Tracked Dolly：相机沿着预先设置的轨道移动。</li>\n<li>Transposer：跟随目标移动，并在世界空间保持相机和跟随目标的相对位置固定。</li>\n</ul>\n<p><strong>AIM</strong></p>\n<ul>\n<li><p>Do Nothing: 不控制相机的旋转。</p>\n</li>\n<li><p>Composer: 保持目标物体在镜头内</p>\n</li>\n<li><p>Group Composer: 保持多个目标在镜头内</p>\n</li>\n<li><p>Hard Look At: 保持目标在镜头的中心</p>\n</li>\n<li><p>POV: 基于玩家的输入旋转相机</p>\n</li>\n</ul>\n</blockquote>\n<p><strong>添加环境迷雾</strong></p>\n<p>Window &gt; Rendering &gt; Lighting &gt; Environment &gt; Fog设置为True</p>\n<blockquote>\n<p>如果Sence场景没有显示Fog，则需要在窗口中打开Fog开关</p>\n<p>Mode：Linear 为最近最远处能见度</p>\n</blockquote>\n<p><strong>Global</strong> <strong>Volume</strong></p>\n<p>对场景进行后处理，add 其他功能对场景进行渲染</p>\n<blockquote>\n<p>如果场景没有显示出效果，在Main Camera &gt; Rendering &gt; Post Peocessing 设置为True</p>\n</blockquote>\n<h3 id=\"遮挡剔除\"><a href=\"#遮挡剔除\" class=\"headerlink\" title=\"遮挡剔除\"></a>遮挡剔除</h3><p>通过<strong>Shader</strong>创建材质放入到URP的 UniversalRenderPipelineAsset_Renderer ，新建Add Renderer Feature,选择被遮挡的Layer Mask，可以多选，然后设置被遮挡后的材质，Depth设置为True，Depth Test设置为Greater。当被遮挡物体层级Greater时，显示被遮挡后的材质。</p>\n<p>同样Add Renderer Feature，选择相同被遮挡的Layer Mask，其他不做修改，当不被遮挡时显示原有材质</p>\n<p><strong>关于遮挡材质的制作</strong></p>\n<p>shader创建：Project &gt; 右键 &gt; Shader &gt; URP &gt;UnLit Shader Graph</p>\n<blockquote>\n<p>Graph Inspector &gt; Grapj Settings &gt; Universal &gt; Alpha Clip,打开Alpha透明通道</p>\n</blockquote>\n<ol>\n<li>使用Fresnel Effect 制作遮挡的效果，通过新建变量Color修改颜色。通过Multiply混合，传给Base color。</li>\n<li>Dither制作噪点效果，新建Float修改Dither的X值，out传给Fragment &gt; Alpha通道</li>\n<li>创建Flaot 修改Alpha Threshold。</li>\n<li>选择Shader创建材质</li>\n</ol>\n<p><strong>关于鼠标射线遮挡</strong></p>\n<ul>\n<li>选中遮挡的物体，设置层级为Ignore Raycast</li>\n<li>关闭遮挡物体的Mesh Collider</li>\n</ul>\n<h3 id=\"EnemyController\"><a href=\"#EnemyController\" class=\"headerlink\" title=\"EnemyController\"></a>EnemyController</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.AI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">enum</span> EnemyStates &#123;GUARD,PARTOL,CHASE,DEAD &#125;</span><br><span class=\"line\"><span class=\"comment\">//通过代码添加组件</span></span><br><span class=\"line\">[<span class=\"meta\">RequireComponent(typeof(NavMeshAgent))</span>]</span><br><span class=\"line\">[<span class=\"meta\">RequireComponent(typeof(CharacterStats))</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">EnemyController</span> : <span class=\"title\">MonoBehaviour</span>,<span class=\"title\">IEndGameObserver</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NavMeshAgent agent;</span><br><span class=\"line\">    EnemyStates enemyStates;</span><br><span class=\"line\">    Animator anim;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> CharacterStats characterStats;</span><br><span class=\"line\">    Collider coll;</span><br><span class=\"line\">    <span class=\"comment\">//攻击范围 </span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> sightRadius;</span><br><span class=\"line\">    <span class=\"comment\">//巡逻范围</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> partolRadius;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">bool</span> isGuard;</span><br><span class=\"line\">    <span class=\"comment\">//巡逻停留时间</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> lookAtTime;</span><br><span class=\"line\">    <span class=\"built_in\">float</span> remainLookAtTime;</span><br><span class=\"line\">    <span class=\"built_in\">float</span> speed;</span><br><span class=\"line\">    <span class=\"comment\">//cd时间</span></span><br><span class=\"line\">    <span class=\"built_in\">float</span> lastAttackTime;</span><br><span class=\"line\">    <span class=\"comment\">//下一个前往的巡逻点</span></span><br><span class=\"line\">    Vector3 wayPoint;</span><br><span class=\"line\">    <span class=\"comment\">//起始点</span></span><br><span class=\"line\">    Vector3 guardPoint;</span><br><span class=\"line\">    Quaternion guardRotation;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> GameObject attackTarget;</span><br><span class=\"line\">    <span class=\"built_in\">bool</span> isWalk, isChase, isFollow, isDie;</span><br><span class=\"line\">    <span class=\"built_in\">bool</span> playerDie;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        agent = GetComponent&lt;NavMeshAgent&gt;();</span><br><span class=\"line\">        anim = GetComponent&lt;Animator&gt;();</span><br><span class=\"line\">        characterStats = GetComponent&lt;CharacterStats&gt;();</span><br><span class=\"line\">        coll = GetComponent&lt;Collider&gt;();</span><br><span class=\"line\">        <span class=\"comment\">//保存原有速度；</span></span><br><span class=\"line\">        speed = agent.speed;</span><br><span class=\"line\">        guardPoint = transform.position;</span><br><span class=\"line\">        remainLookAtTime = lookAtTime;</span><br><span class=\"line\">        lastAttackTime = characterStats.CoolDown;</span><br><span class=\"line\">        guardRotation = transform.rotation;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Start</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isGuard)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            enemyStates = EnemyStates.GUARD;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            enemyStates = EnemyStates.PARTOL;</span><br><span class=\"line\">            GetNewPartolPoint();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//将对象添加进gamemanager里，用于广播</span></span><br><span class=\"line\">        GameManager.Instance.AddObserver(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Update is called once per frame</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (characterStats.CurrentHealth == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            isDie = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!playerDie)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            SwitchStates();</span><br><span class=\"line\">            SwitchAnim();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (lastAttackTime &gt; <span class=\"number\">0f</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                lastAttackTime -= Time.deltaTime;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//private void OnEnable()</span></span><br><span class=\"line\">    <span class=\"comment\">//&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//    Gamemanager.Instance.AddObserver(this);</span></span><br><span class=\"line\">    <span class=\"comment\">//&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnDisable</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!GameManager.isInitialized) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        GameManager.Instance.RemoveObserver(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SwitchStates</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isDie)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            enemyStates = EnemyStates.DEAD;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (FindPlayer())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            enemyStates = EnemyStates.CHASE;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (enemyStates)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> EnemyStates.GUARD:</span><br><span class=\"line\">                isChase = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                isWalk = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (transform.position!=guardPoint)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    isWalk = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    agent.isStopped = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    agent.destination = guardPoint;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(Vector3.SqrMagnitude(guardPoint - transform.position) &lt;= agent.stoppingDistance)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        isWalk = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                        agent.isStopped = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                        <span class=\"comment\">//旋转会初始的角度</span></span><br><span class=\"line\">                        Quaternion.Lerp(transform.rotation, guardRotation, <span class=\"number\">0.1f</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> EnemyStates.PARTOL:</span><br><span class=\"line\">                isChase = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                agent.speed = speed * <span class=\"number\">0.5f</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Vector3.Distance(transform.position, wayPoint) &lt;= <span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    isWalk = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (remainLookAtTime &lt; <span class=\"number\">0f</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        GetNewPartolPoint();</span><br><span class=\"line\">                        remainLookAtTime = lookAtTime;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        remainLookAtTime -= Time.deltaTime;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    isWalk = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    agent.destination = wayPoint;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> EnemyStates.CHASE:</span><br><span class=\"line\"></span><br><span class=\"line\">                agent.speed = speed;</span><br><span class=\"line\">                isWalk = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                isChase = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"comment\">//脱战</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!FindPlayer())</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    isFollow = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    agent.destination = transform.position;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (remainLookAtTime &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        remainLookAtTime -= Time.deltaTime;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (isGuard)</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            enemyStates = EnemyStates.GUARD;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">else</span></span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            enemyStates = EnemyStates.PARTOL;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//追击</span></span><br><span class=\"line\">                    isFollow = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    agent.isStopped = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    agent.destination = attackTarget.transform.position;</span><br><span class=\"line\">                    <span class=\"comment\">//判断是否追击到</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (TargetInAttackRange() || TargetInSkillRange())</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        isFollow = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                        agent.isStopped = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (lastAttackTime &lt; <span class=\"number\">0f</span>)</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            lastAttackTime = characterStats.CoolDown;</span><br><span class=\"line\">                            <span class=\"comment\">//暴击判断</span></span><br><span class=\"line\">                            characterStats.isCritical = Random.<span class=\"keyword\">value</span> &lt; characterStats.CriticalChance;</span><br><span class=\"line\">                            </span><br><span class=\"line\">                            Attack();</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> EnemyStates.DEAD:</span><br><span class=\"line\">                <span class=\"comment\">//enemy死亡时不会发生继续攻击的情况</span></span><br><span class=\"line\">                coll.enabled = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"comment\">//agent.enabled = false;</span></span><br><span class=\"line\">                <span class=\"comment\">//设置之后不会阻挡Player行动</span></span><br><span class=\"line\">                agent.radius = <span class=\"number\">0f</span>;</span><br><span class=\"line\">                Destroy(gameObject, <span class=\"number\">2f</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"literal\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Attack</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        transform.LookAt(attackTarget.transform);</span><br><span class=\"line\">        anim.SetBool(<span class=\"string\">&quot;Critical&quot;</span>, characterStats.isCritical);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (TargetInAttackRange())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            anim.SetTrigger(<span class=\"string\">&quot;Attack&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(TargetInSkillRange())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            anim.SetTrigger(<span class=\"string\">&quot;Skill&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">bool</span> <span class=\"title\">FindPlayer</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Collider[] colliderNum = Physics.OverlapSphere(transform.position, sightRadius);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> collider <span class=\"keyword\">in</span> colliderNum)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (collider.gameObject.CompareTag(<span class=\"string\">&quot;Player&quot;</span>))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                attackTarget = collider.gameObject;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SwitchAnim</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        anim.SetBool(<span class=\"string\">&quot;Walk&quot;</span>, isWalk);</span><br><span class=\"line\">        anim.SetBool(<span class=\"string\">&quot;Chase&quot;</span>, isChase);</span><br><span class=\"line\">        anim.SetBool(<span class=\"string\">&quot;Follow&quot;</span>, isFollow);</span><br><span class=\"line\">        anim.SetBool(<span class=\"string\">&quot;Die&quot;</span>, isDie);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnDrawGizmosSelected</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//画出攻击范围圈</span></span><br><span class=\"line\">        Gizmos.color = Color.green;</span><br><span class=\"line\">        Gizmos.DrawWireSphere(transform.position, sightRadius);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GetNewPartolPoint</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">float</span> ran_x = Random.Range(-partolRadius, partolRadius);</span><br><span class=\"line\">        <span class=\"built_in\">float</span> ran_z = Random.Range(-partolRadius, partolRadius);</span><br><span class=\"line\">        <span class=\"comment\">//不修改高度，防止坑坑洼洼的地面</span></span><br><span class=\"line\">        <span class=\"comment\">//guardPoint是为了随机在初始位置点的随机移动</span></span><br><span class=\"line\">        wayPoint = <span class=\"keyword\">new</span> Vector3(guardPoint.x + ran_x, transform.position.y, guardPoint.z + ran_z);</span><br><span class=\"line\">        NavMeshHit hit;</span><br><span class=\"line\">        <span class=\"comment\">//NavMesh.SamplePosition（）方法的最后一位为窗口 Navigation &gt; Area的序列，从1开始</span></span><br><span class=\"line\">        <span class=\"comment\">//方法为 在waypoint的sightRadius范围内寻找1层级（可移动到）的点</span></span><br><span class=\"line\">        <span class=\"comment\">//方法返回的为True和False</span></span><br><span class=\"line\">        wayPoint = NavMesh.SamplePosition(wayPoint, <span class=\"keyword\">out</span> hit, sightRadius,<span class=\"number\">1</span>) ? hit.position : transform.position;</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">bool</span> <span class=\"title\">TargetInAttackRange</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attackTarget != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Vector3.Distance(attackTarget.transform.position, transform.position) &lt; characterStats.AttackRange;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">bool</span> <span class=\"title\">TargetInSkillRange</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attackTarget != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Vector3.Distance(attackTarget.transform.position, transform.position) &lt; characterStats.SkillRange;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Hit</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attackTarget != <span class=\"literal\">null</span> &amp;&amp; transform.IsFacingTarget(attackTarget.transform))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> targetStats = attackTarget.GetComponent&lt;CharacterStats&gt;();</span><br><span class=\"line\">            characterStats.TakeDamage(characterStats, targetStats);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">EndsNotify</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        isChase = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        isWalk = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        attackTarget = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        playerDie = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        anim.SetBool(<span class=\"string\">&quot;Victory&quot;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"PlayController\"><a href=\"#PlayController\" class=\"headerlink\" title=\"PlayController\"></a>PlayController</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.AI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">PlayerController</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> lastAttackTime;</span><br><span class=\"line\">    <span class=\"comment\">//攻击目标对象</span></span><br><span class=\"line\">    GameObject attackTarget;</span><br><span class=\"line\">    CharacterStats characterStats;</span><br><span class=\"line\">    NavMeshAgent agent;</span><br><span class=\"line\">    Animator anim;</span><br><span class=\"line\">    <span class=\"built_in\">bool</span> isDie;</span><br><span class=\"line\">    <span class=\"built_in\">float</span> stopDistance;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        agent = GetComponent&lt;NavMeshAgent&gt;();</span><br><span class=\"line\">        anim = GetComponent&lt;Animator&gt;();</span><br><span class=\"line\">        characterStats = GetComponent&lt;CharacterStats&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Start</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//添加事件</span></span><br><span class=\"line\">        MouseManager.Instance.OnMouseClicked += MoveToTarget;</span><br><span class=\"line\">        MouseManager.Instance.OnClickedEnemy += EventAttack;</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"comment\">//注册Gamemanager的广播</span></span><br><span class=\"line\">        GameManager.Instance.RigisterPlayer(characterStats);</span><br><span class=\"line\">        stopDistance = agent.stoppingDistance;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        isDie = characterStats.CurrentHealth == <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isDie)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            GameManager.Instance.NotifyObservers();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        AnimationChange();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(lastAttackTime&gt;<span class=\"number\">0f</span>)</span><br><span class=\"line\">            lastAttackTime -= Time.deltaTime;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MoveToTarget</span>(<span class=\"params\">Vector3 target</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isDie) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        agent.isStopped = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        agent.stoppingDistance = stopDistance;</span><br><span class=\"line\">        StopAllCoroutines();</span><br><span class=\"line\">        agent.destination = target;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AnimationChange</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        anim.SetFloat(<span class=\"string\">&quot;Speed&quot;</span>, agent.velocity.sqrMagnitude);</span><br><span class=\"line\">        anim.SetBool(<span class=\"string\">&quot;Die&quot;</span>, isDie);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">EventAttack</span>(<span class=\"params\">GameObject target</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isDie) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            attackTarget = target;</span><br><span class=\"line\">            StartCoroutine(<span class=\"string\">&quot;MoveToAttackTarget&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//动画事件</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Hit</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attackTarget.CompareTag(<span class=\"string\">&quot;Attackable&quot;</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (attackTarget.GetComponent&lt;Rock&gt;())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//在空中也可以击飞</span></span><br><span class=\"line\">                attackTarget.GetComponent&lt;Rock&gt;().rockStates = Rock.RockStates.HitEnemy;</span><br><span class=\"line\">                <span class=\"comment\">//赋予初始速度，防止fixudate时修改rock状态</span></span><br><span class=\"line\">                attackTarget.GetComponent&lt;Rigidbody&gt;().velocity = Vector3.one;</span><br><span class=\"line\">                attackTarget.GetComponent&lt;Rigidbody&gt;().AddForce(transform.forward * <span class=\"number\">20f</span>,ForceMode.Impulse);</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> targetStats = attackTarget.GetComponent&lt;CharacterStats&gt;();</span><br><span class=\"line\">            characterStats.TakeDamage(characterStats, targetStats);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\">IEnumerator <span class=\"title\">MoveToAttackTarget</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        agent.stoppingDistance = characterStats.AttackRange;</span><br><span class=\"line\">        agent.isStopped = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (Vector3.Distance(attackTarget.transform.position, transform.position) &gt; characterStats.AttackRange)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            agent.destination = attackTarget.transform.position;</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        agent.isStopped = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (lastAttackTime &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            transform.LookAt(attackTarget.transform.position);</span><br><span class=\"line\">            <span class=\"comment\">//暴击率的计算</span></span><br><span class=\"line\">            characterStats.isCritical = Random.<span class=\"keyword\">value</span> &lt; characterStats.CriticalChance;</span><br><span class=\"line\">            anim.SetBool(<span class=\"string\">&quot;Critical&quot;</span>,characterStats.isCritical);</span><br><span class=\"line\">            anim.SetTrigger(<span class=\"string\">&quot;Attack&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">//重置冷却时间</span></span><br><span class=\"line\">            lastAttackTime = characterStats.CoolDown;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CharacterStats\"><a href=\"#CharacterStats\" class=\"headerlink\" title=\"CharacterStats\"></a>CharacterStats</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">CharacterStats</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">event</span> Action&lt;<span class=\"built_in\">int</span>, <span class=\"built_in\">int</span>&gt; UpdateHealthBarOnAttack;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Character_SO templateData;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Character_SO character;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> AttackSO attackSO;</span><br><span class=\"line\">    [<span class=\"meta\">HideInInspector</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">bool</span> isCritical;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//用模板为character生成一组数据，防止多个enemy访问同一组数据</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (templateData != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            character = Instantiate(templateData);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> MaxHealth</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">if</span> (character != <span class=\"literal\">null</span>) &#123; <span class=\"keyword\">return</span> character.maxHealth; &#125; <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123; character.maxHealth = <span class=\"keyword\">value</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> CurrentHealth</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">if</span> (character != <span class=\"literal\">null</span>) &#123; <span class=\"keyword\">return</span> character.currentHealth; &#125; <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123; character.currentHealth = <span class=\"keyword\">value</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> BaseDefence</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">if</span> (character != <span class=\"literal\">null</span>) &#123; <span class=\"keyword\">return</span> character.baseDefence; &#125; <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123; character.baseDefence = <span class=\"keyword\">value</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> CurrentDefence</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">if</span> (character != <span class=\"literal\">null</span>) &#123; <span class=\"keyword\">return</span> character.currentDefence; &#125; <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> <span class=\"number\">0</span>; &#125; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span> &#123; character.currentDefence = <span class=\"keyword\">value</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> AttackRange &#123; <span class=\"keyword\">get</span> &#123;  <span class=\"keyword\">return</span> attackSO.attackRange; &#125; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> SkillRange &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> attackSO.skillRange; &#125; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> CoolDown &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> attackSO.coolDown; &#125; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> MinDamage &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> attackSO.minDamage; &#125; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> MaxDamage &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> attackSO.maxDamage; &#125; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> CriticalMultiplier &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> attackSO.criticalMultiplier; &#125; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> CriticalChance &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> attackSO.criticalChance; &#125; &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">TakeDamage</span>(<span class=\"params\">CharacterStats attacker,CharacterStats defender</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">int</span> damage = Mathf.Max(attacker.CurrentDamage() - defender.CurrentDefence, <span class=\"number\">0</span>);</span><br><span class=\"line\">        defender.CurrentHealth = Mathf.Max(defender.CurrentHealth - damage, <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"comment\">//defender受伤的动画 暴击才会有</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attacker.isCritical)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            defender.GetComponent&lt;Animator&gt;().SetTrigger(<span class=\"string\">&quot;Hit&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//修改防御者血条</span></span><br><span class=\"line\">        defender.UpdateHealthBarOnAttack?.Invoke(defender.CurrentHealth, defender.MaxHealth);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (defender.CurrentHealth &lt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//更新攻击者经验</span></span><br><span class=\"line\">            attacker.character.UpdateExp(defender.character.killPoint);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">TakeDamage</span>(<span class=\"params\"><span class=\"built_in\">int</span> damage,CharacterStats defender</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">int</span> currentDamage = Mathf.Max(damage - defender.CurrentDefence, <span class=\"number\">0</span>);</span><br><span class=\"line\">        defender.CurrentHealth = Mathf.Max(defender.CurrentHealth - currentDamage, <span class=\"number\">0</span>);</span><br><span class=\"line\">        UpdateHealthBarOnAttack?.Invoke(defender.CurrentHealth, defender.MaxHealth);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">int</span> <span class=\"title\">CurrentDamage</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">float</span> damage = UnityEngine.Random.Range(MinDamage, MaxDamage); ;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isCritical)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            damage *= CriticalMultiplier;</span><br><span class=\"line\">            Debug.Log(<span class=\"string\">&quot;暴击：&quot;</span> + damage);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"built_in\">int</span>)damage;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>Character_SO</strong></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//filename为创建的文件的文件名，menuName为文件夹目录层级名字</span></span><br><span class=\"line\">[<span class=\"meta\">CreateAssetMenu(fileName = <span class=\"meta-string\">&quot;New Data&quot;</span>, menuName = <span class=\"meta-string\">&quot;Character Stats/Data&quot;</span>)</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Character_SO</span> : <span class=\"title\">ScriptableObject</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;Stats Info&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> maxHealth;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> currentHealth;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> baseDefence;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> currentDefence;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;Kill&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> killPoint;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;Level&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> currentLevel;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> maxLevel;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> baseExp;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> currentExp;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> levelBuff;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">UpdateExp</span>(<span class=\"params\"><span class=\"built_in\">int</span> point</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        currentExp += point;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (currentExp &gt;= baseExp)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            currentExp -= baseExp;</span><br><span class=\"line\">            LevelUP();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">LevelUP</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        currentLevel = Mathf.Clamp(currentLevel + <span class=\"number\">1</span>, <span class=\"number\">0</span>, maxLevel);</span><br><span class=\"line\">        baseExp += (<span class=\"built_in\">int</span>)(baseExp * LevelMultiplier);</span><br><span class=\"line\">        maxHealth = (<span class=\"built_in\">int</span>)(maxHealth * LevelMultiplier);</span><br><span class=\"line\">        currentHealth = maxHealth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> LevelMultiplier</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123;<span class=\"keyword\">return</span> <span class=\"number\">1</span>+(currentLevel<span class=\"number\">-1</span>)*levelBuff ; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>Attack_SO</strong></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"meta\">CreateAssetMenu(fileName =<span class=\"meta-string\">&quot;New Attack&quot;</span>,menuName =<span class=\"meta-string\">&quot;Attack/Attack Data&quot;</span>)</span>]</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">AttackSO</span> : <span class=\"title\">ScriptableObject</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;Attack Info&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> attackRange;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> skillRange;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> coolDown;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> minDamage;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> maxDamage;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> criticalMultiplier;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> criticalChance;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"泛型单例模式Singleton\"><a href=\"#泛型单例模式Singleton\" class=\"headerlink\" title=\"泛型单例模式Singleton\"></a>泛型单例模式Singleton</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SingleTon</span>&lt;<span class=\"title\">T</span>&gt; : <span class=\"title\">MonoBehaviour</span> <span class=\"keyword\">where</span> <span class=\"title\">T</span>:<span class=\"title\">SingleTon</span>&lt;<span class=\"title\">T</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> T instance;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> T Instance</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> instance; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (instance != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Destroy(gameObject);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            instance = (T)<span class=\"keyword\">this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> isInitialized</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">         <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> instance != <span class=\"literal\">null</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"接口Observer-Pattern\"><a href=\"#接口Observer-Pattern\" class=\"headerlink\" title=\"接口Observer Pattern\"></a>接口Observer Pattern</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IEndGameObserver</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//只定义，不实现留给使用的实现这个方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">EndsNotify</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"GameManger\"><a href=\"#GameManger\" class=\"headerlink\" title=\"GameManger\"></a>GameManger</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">GameManager</span> : <span class=\"title\">SingleTon</span>&lt;<span class=\"title\">GameManager</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> CharacterStats playerStats;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">//接口类型</span></span><br><span class=\"line\">    List&lt;IEndGameObserver&gt; endGameObeverses = <span class=\"keyword\">new</span> List&lt;IEndGameObserver&gt;();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">base</span>.Awake();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">RigisterPlayer</span>(<span class=\"params\">CharacterStats characterStats</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        playerStats = characterStats;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">AddObserver</span>(<span class=\"params\">IEndGameObserver observer</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        endGameObeverses.Add(observer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">RemoveObserver</span>(<span class=\"params\">IEndGameObserver observer</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        endGameObeverses.Remove(observer);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">NotifyObservers</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//遍历添加进来的对象</span></span><br><span class=\"line\">        <span class=\"comment\">//挨个调用EndsNotify（）方法</span></span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> observer <span class=\"keyword\">in</span> endGameObeverses)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            observer.EndsNotify();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置兽人Grunt\"><a href=\"#设置兽人Grunt\" class=\"headerlink\" title=\"设置兽人Grunt\"></a>设置兽人Grunt</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.AI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//继承于EnemyController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Grunt</span> : <span class=\"title\">EnemyController</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;GRUNT推力&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> kickForce = <span class=\"number\">15f</span>;</span><br><span class=\"line\">    <span class=\"comment\">//动画事件</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">KickOff</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attackTarget != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            transform.LookAt(attackTarget.transform);</span><br><span class=\"line\">            Vector3 direction = attackTarget.transform.position - transform.position;</span><br><span class=\"line\">            direction.Normalize();</span><br><span class=\"line\">            <span class=\"comment\">//打断player行动，进行击退</span></span><br><span class=\"line\">            attackTarget.GetComponent&lt;NavMeshAgent&gt;().isStopped = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            attackTarget.GetComponent&lt;NavMeshAgent&gt;().velocity = direction * kickForce;</span><br><span class=\"line\">            attackTarget.GetComponent&lt;Animator&gt;().SetTrigger(<span class=\"string\">&quot;Dizzy&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"拓展方法Extension-Method\"><a href=\"#拓展方法Extension-Method\" class=\"headerlink\" title=\"拓展方法Extension Method\"></a>拓展方法Extension Method</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//拓展方法 </span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">ExtensionMethod</span> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">float</span> dotThreshold = <span class=\"number\">0.5f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//拓展的是this后面的方法,后面的为方法所需要的函数</span></span><br><span class=\"line\">    <span class=\"comment\">//使用方法 :transform.IsFacingTarget(target)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">bool</span> <span class=\"title\">IsFacingTarget</span>(<span class=\"params\"><span class=\"keyword\">this</span> Transform transform,Transform target</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//向量OA-OB=BA;O为原点；</span></span><br><span class=\"line\">        Vector3 vectorToTarget = target.position - transform.position;</span><br><span class=\"line\">        vectorToTarget.Normalize();</span><br><span class=\"line\">        <span class=\"comment\">//vector3.dot 为看向的方向与vectortoTarget的方向的夹角，正对着为1，背对着为-1，左右为0；</span></span><br><span class=\"line\">        <span class=\"built_in\">float</span> dot = Vector3.Dot(transform.forward, vectorToTarget);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dot &gt;= dotThreshold;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"石头人Golem\"><a href=\"#石头人Golem\" class=\"headerlink\" title=\"石头人Golem\"></a>石头人Golem</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.AI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Golem</span> : <span class=\"title\">EnemyController</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;GRUNT推力&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> kickForce = <span class=\"number\">25f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject rockPerfab;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Transform handTransform;</span><br><span class=\"line\">    <span class=\"comment\">//animation event</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">KickOff</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attackTarget != <span class=\"literal\">null</span> &amp;&amp; transform.IsFacingTarget(attackTarget.transform))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> targetStats = attackTarget.GetComponent&lt;CharacterStats&gt;();</span><br><span class=\"line\">            Vector3 direction = attackTarget.transform.position - transform.position;</span><br><span class=\"line\">            direction.Normalize();</span><br><span class=\"line\">            transform.LookAt(attackTarget.transform);</span><br><span class=\"line\">            attackTarget.GetComponent&lt;NavMeshAgent&gt;().isStopped = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            attackTarget.GetComponent&lt;NavMeshAgent&gt;().velocity = direction * kickForce;</span><br><span class=\"line\">            attackTarget.GetComponent&lt;Animator&gt;().SetTrigger(<span class=\"string\">&quot;Dizzy&quot;</span>);</span><br><span class=\"line\">            characterStats.TakeDamage(characterStats, targetStats);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//animation event</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ThrowRock</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (attackTarget != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            GameObject rock = Instantiate(rockPerfab, handTransform.position, Quaternion.identity);</span><br><span class=\"line\">            rock.GetComponent&lt;Rock&gt;().target = attackTarget;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"扔石头\"><a href=\"#扔石头\" class=\"headerlink\" title=\"扔石头\"></a>扔石头</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.AI;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.Animations;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Rock</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">enum</span> RockStates &#123; HitPlayer,HitEnemy,HitNothing&#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> RockStates rockStates;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject target;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject rockBreak;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> force;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> damage;</span><br><span class=\"line\">    Vector3 direction;</span><br><span class=\"line\">    Rigidbody rb;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Start</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        rb = GetComponent&lt;Rigidbody&gt;();</span><br><span class=\"line\">        rb.velocity = Vector3.one;</span><br><span class=\"line\">        rockStates = RockStates.HitPlayer;</span><br><span class=\"line\">        FlyToTarget();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">FixedUpdate</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rb.velocity.sqrMagnitude &lt; <span class=\"number\">0.5f</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            rockStates = RockStates.HitNothing;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">FlyToTarget</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (target == <span class=\"literal\">null</span>)</span><br><span class=\"line\">            target = FindObjectOfType&lt;PlayerController&gt;().gameObject;</span><br><span class=\"line\">        direction = (target.transform.position - transform.position+Vector3.up ).normalized;</span><br><span class=\"line\">        rb.AddForce(direction * force, ForceMode.Impulse);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnCollisionEnter</span>(<span class=\"params\">Collision collision</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (rockStates)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> RockStates.HitPlayer:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (collision.collider.CompareTag(<span class=\"string\">&quot;Player&quot;</span>))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    collision.gameObject.GetComponent&lt;NavMeshAgent&gt;().isStopped = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                    collision.gameObject.GetComponent&lt;NavMeshAgent&gt;().velocity = direction * force;</span><br><span class=\"line\">                    collision.gameObject.GetComponent&lt;Animator&gt;().SetTrigger(<span class=\"string\">&quot;Dizzy&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                    rockStates = RockStates.HitNothing;</span><br><span class=\"line\">                    collision.gameObject.GetComponent&lt;CharacterStats&gt;().TakeDamage(damage, collision.gameObject.GetComponent&lt;CharacterStats&gt;());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> RockStates.HitEnemy:</span><br><span class=\"line\">                <span class=\"comment\">//如果有这个组件返回true；</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (collision.gameObject.GetComponent&lt;Golem&gt;())</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    collision.gameObject.GetComponent&lt;CharacterStats&gt;().TakeDamage(damage, collision.gameObject.GetComponent&lt;CharacterStats&gt;());</span><br><span class=\"line\">                    </span><br><span class=\"line\">                    <span class=\"comment\">//攻击石头人之后，石头碎裂生成粒子特效</span></span><br><span class=\"line\">                    Instantiate(rockBreak, transform.position, Quaternion.identity);</span><br><span class=\"line\">                    Destroy(gameObject);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> RockStates.HitNothing:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"literal\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>粒子特效</strong></p>\n<p>Hierarchy &gt; Effects &gt; Particle System</p>\n<h3 id=\"血条显示-HealthBar\"><a href=\"#血条显示-HealthBar\" class=\"headerlink\" title=\"血条显示 HealthBar\"></a>血条显示 HealthBar</h3><p><strong>挂载在enemy身上</strong></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.UI;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">HealthBar</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> GameObject healthBarUiPerfab;</span><br><span class=\"line\">\t<span class=\"comment\">//血条的位置，enemy设置一个空对象，调整位置为头部上方</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Transform barPoint;</span><br><span class=\"line\">    <span class=\"comment\">//是否一直显示 显示的时长</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">bool</span> alwaysVisible;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> visibleTime;</span><br><span class=\"line\">    <span class=\"built_in\">float</span> timeLeft;</span><br><span class=\"line\"></span><br><span class=\"line\">    Image healthSlider;</span><br><span class=\"line\">    Transform UIBar;</span><br><span class=\"line\">    Transform cam;</span><br><span class=\"line\">    CharacterStats currentStats;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取组件</span></span><br><span class=\"line\">        currentStats = GetComponent&lt;CharacterStats&gt;();</span><br><span class=\"line\">        <span class=\"comment\">//添加事务</span></span><br><span class=\"line\">        currentStats.UpdateHealthBarOnAttack += UpdateHealthBar;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEnable</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cam = Camera.main.transform;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"function\">Canvas canvas <span class=\"keyword\">in</span> <span class=\"title\">FindObjectsOfType</span>&lt;<span class=\"title\">Canvas</span>&gt;(<span class=\"params\"></span>))</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (canvas.renderMode == RenderMode.WorldSpace)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                UIBar = Instantiate(healthBarUiPerfab, canvas.transform).transform;</span><br><span class=\"line\">                healthSlider = UIBar.GetChild(<span class=\"number\">0</span>).GetComponent&lt;Image&gt;();</span><br><span class=\"line\">                UIBar.gameObject.SetActive(alwaysVisible);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">UpdateHealthBar</span>(<span class=\"params\"><span class=\"built_in\">int</span> currentHealth, <span class=\"built_in\">int</span> Maxhealth</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (currentHealth &lt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">            Destroy(UIBar.gameObject);</span><br><span class=\"line\"></span><br><span class=\"line\">        UIBar.gameObject.SetActive(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"comment\">//攻击时重置显示剩余时间</span></span><br><span class=\"line\">        timeLeft = visibleTime;</span><br><span class=\"line\">        <span class=\"built_in\">float</span> sliderPercent = (<span class=\"built_in\">float</span>)currentHealth / Maxhealth;</span><br><span class=\"line\">        <span class=\"comment\">//image Type设置为Filled，fillmethod设置为Horizontal</span></span><br><span class=\"line\">        healthSlider.fillAmount = sliderPercent;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">LateUpdate</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (UIBar != <span class=\"literal\">null</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//位置</span></span><br><span class=\"line\">            UIBar.position = barPoint.position;</span><br><span class=\"line\">            <span class=\"comment\">//ui的方向与摄像机的方向相反</span></span><br><span class=\"line\">            UIBar.forward = -cam.forward;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (timeLeft &lt;= <span class=\"number\">0f</span>&amp;&amp;!alwaysVisible)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                UIBar.gameObject.SetActive(<span class=\"literal\">false</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                timeLeft -= Time.deltaTime;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"PlayerUI\"><a href=\"#PlayerUI\" class=\"headerlink\" title=\"PlayerUI\"></a>PlayerUI</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.UI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">PlayHealthBar</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Text level;</span><br><span class=\"line\">    Image healthSlider;</span><br><span class=\"line\">    Image expSlider;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        level = transform.GetChild(<span class=\"number\">2</span>).GetComponent&lt;Text&gt;();</span><br><span class=\"line\">        healthSlider = transform.GetChild(<span class=\"number\">0</span>).GetChild(<span class=\"number\">0</span>).GetComponent&lt;Image&gt;();</span><br><span class=\"line\">        expSlider = transform.GetChild(<span class=\"number\">1</span>).GetChild(<span class=\"number\">0</span>).GetComponent&lt;Image&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">LateUpdate</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        level.text = <span class=\"string\">&quot;Level  &quot;</span> + GameManager.Instance.playerStats.character.currentLevel.ToString(<span class=\"string\">&quot;00&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        UpdateHealth();</span><br><span class=\"line\"></span><br><span class=\"line\">        UpdateExp();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">UpdateHealth</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">float</span> sliderPercent = (<span class=\"built_in\">float</span>)GameManager.Instance.playerStats.CurrentHealth / GameManager.Instance.playerStats.MaxHealth;</span><br><span class=\"line\">        healthSlider.fillAmount = sliderPercent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">UpdateExp</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">float</span> sliderPercent = (<span class=\"built_in\">float</span>)GameManager.Instance.playerStats.character.currentExp / GameManager.Instance.playerStats.character.baseExp;</span><br><span class=\"line\">        expSlider.fillAmount = sliderPercent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>设置ui时，首先需要调整Canvas的Scaler</p>\n<p>UI Scale Mode设置为Scale With Screen Size,Match设置为0.5，同时兼顾高度和宽度</p>\n</blockquote>\n<blockquote>\n<p>Canvas有个Canvas Group组件，可以设置取消阻挡射线</p>\n<p>也可以通过调整Alpha的值去做转场</p>\n</blockquote>\n<h3 id=\"传送门\"><a href=\"#传送门\" class=\"headerlink\" title=\"传送门\"></a>传送门</h3><p>使用lit shader</p>\n<p>shader制作成材质，创建一个3D &gt; plane，拖拽赋予这个材质，并生成一个传送点位置</p>\n<p>枚举类</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">TransitionDestination</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">enum</span> DestinationTag &#123; Enter,A,B,C&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> DestinationTag destinationTag;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">TransiationPoint</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">enum</span> TransitionType &#123; SameScence,DifferentScence&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;Transition Info&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> scenceName;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> TransitionType transitionType;</span><br><span class=\"line\">    <span class=\"comment\">//枚举终点编号</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> TransitionDestination.DestinationTag destinationTag;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">bool</span> canTrans;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Input.GetKeyDown(KeyCode.E) &amp;&amp; canTrans)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ScenceController.Instance.TransitionToDestination(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnTriggerStay</span>(<span class=\"params\">Collider other</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (other.CompareTag(<span class=\"string\">&quot;Player&quot;</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            canTrans = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnTriggerExit</span>(<span class=\"params\">Collider other</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (other.CompareTag(<span class=\"string\">&quot;Player&quot;</span>))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            canTrans = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>实现场景转换</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.SceneManagement;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.AI;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ScenceController</span> : <span class=\"title\">SingleTon</span>&lt;<span class=\"title\">ScenceController</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    GameObject player;</span><br><span class=\"line\">    NavMeshAgent playerAgent;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">TransitionToDestination</span>(<span class=\"params\">TransiationPoint transiationPoint</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (transiationPoint.transitionType)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> TransiationPoint.TransitionType.SameScence:</span><br><span class=\"line\">                StartCoroutine(Transition(SceneManager.GetActiveScene().name, transiationPoint.destinationTag));</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> TransiationPoint.TransitionType.DifferentScence:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"literal\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">IEnumerator <span class=\"title\">Transition</span>(<span class=\"params\"><span class=\"built_in\">string</span> scenceName,TransitionDestination.DestinationTag destinationTag</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        player = GameManager.Instance.playerStats.gameObject;</span><br><span class=\"line\"></span><br><span class=\"line\">        playerAgent = player.GetComponent&lt;NavMeshAgent&gt;();</span><br><span class=\"line\">        playerAgent.isStopped = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">//设置位置与方向transform.SetPositionAndRotation（）</span></span><br><span class=\"line\">        player.transform.SetPositionAndRotation(GetDestination(destinationTag).transform.position, GetDestination(destinationTag).transform.rotation);</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">//遍历获取终点的信息</span></span><br><span class=\"line\">    <span class=\"function\">TransitionDestination <span class=\"title\">GetDestination</span>(<span class=\"params\">TransitionDestination.DestinationTag destinationTag</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> entrances = FindObjectsOfType&lt;TransitionDestination&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> entrances)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (item.destinationTag == destinationTag)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> item;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"保存数据\"><a href=\"#保存数据\" class=\"headerlink\" title=\"保存数据\"></a>保存数据</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SaveManager</span> : <span class=\"title\">SingleTon</span>&lt;<span class=\"title\">SaveManager</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Input.GetKeyDown(KeyCode.K))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Save(GameManager.Instance.playerStats.character, GameManager.Instance.playerStats.name);</span><br><span class=\"line\">            Debug.Log(GameManager.Instance.playerStats.name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Input.GetKeyDown(KeyCode.L))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Load(GameManager.Instance.playerStats.character, GameManager.Instance.playerStats.name);</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Save</span>(<span class=\"params\"><span class=\"built_in\">object</span> data,<span class=\"built_in\">string</span> key</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//数据转成json</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> jsonData = JsonUtility.ToJson(data, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"comment\">//json转成二进制</span></span><br><span class=\"line\">        PlayerPrefs.SetString(key, jsonData);</span><br><span class=\"line\">        PlayerPrefs.Save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Load</span>(<span class=\"params\"><span class=\"built_in\">object</span> data, <span class=\"built_in\">string</span> key</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (PlayerPrefs.HasKey(key))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//PlayerPrefs.GetString(key)将二进制转为json，覆盖到data上</span></span><br><span class=\"line\">            JsonUtility.FromJsonOverwrite(PlayerPrefs.GetString(key), data);</span><br><span class=\"line\">            Debug.Log(<span class=\"string\">&quot;111&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"对话系统——Dialog System","description":null,"date":"2022-06-03T16:00:00.000Z","top_image":"/img/004.png","cover":"/img/004.png","_content":"\n# Introduce\n\n首先还是要感谢麦扣老师，[视频链接](https://www.bilibili.com/video/BV1WJ411Y71J/?spm_id_from=333.788.recommend_more_video.1)。\n\n![image-20220604181812326](image-20220604181812326.png)\n\n# 文本读取与显示\n\n**这是个txt文件**，记录了对话的内容，根据 A or B 判断说话的人物\n\n```\nA\n1:zheshidiyijv1?\nB\n2:zheshidierjv2!!!!!\nA\n3:disanjvzaizheli.......\nB\n4:disijvyaojiehsule////\nA\n5:ending'''''\n```\n\n\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\npublic class Dialog : MonoBehaviour\n{\n    \n    [Header(\"组件\")]\n    public Text textLabel;\n    public Image image;\n\n    [Header(\"文本\")]\n    public TextAsset textAsset;\n    public int index;\n\n    //存储文本\n    List<string> textList = new List<string>();\n    void Awake()\n    {\n        GetTextFormFilr(textAsset);\n    }\n    private void OnEnable()\n    {\n        //当启用时，显示第一句话\n        textLabel.text = textList[index++];\n    }\n    // Update is called once per frame\n    void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.Space))\n        {\n            if (index == textList.Count)\n            {\n                gameObject.SetActive(false);\n                index = 0;\n            }\n            else\n                textLabel.text = textList[index++];\n        }\n    }\n\n    void GetTextFormFilr(TextAsset text)\n    {\n        textList.Clear();\n        index = 0;\n        //通过回车符分割\n        var list = text.text.Split('\\n');\n        foreach (var item in list)\n        {\n            textList.Add(item);\n        }\n    }\n}\n\n```\n\n# 协程逐字显示\n\n使用协程，通过设置变量`timeSpeed`去设置每个字的间隔时间\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\npublic class Dialog : MonoBehaviour\n{\n    \n    [Header(\"组件\")]\n    public Text textLabel;\n    public Image image;\n\n    [Header(\"文本\")]\n    public TextAsset textAsset;\n    public int index;\n    [Header(\"头像\")]\n    public Sprite headA, headB;\n\n    public float timeSpeed;\n    //判断协程是否结束，防止多个协程同时出现\n    //初始时设置为true\n    bool textFinshed = true;\n    //存储文本\n    List<string> textList = new List<string>();\n    void Awake()\n    {\n        GetTextFormFilr(textAsset);\n    }\n    private void OnEnable()\n    {\n        //当启用时，显示第一句话\n        StartCoroutine(SetText());\n    }\n    // Update is called once per frame\n    void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.Space))\n        {\n            if (index == textList.Count)\n            {\n                gameObject.SetActive(false);\n                index = 0;\n            }\n            else if(textFinshed)\n                StartCoroutine(SetText());\n        }\n    }\n\n    void GetTextFormFilr(TextAsset text)\n    {\n        textList.Clear();\n        index = 0;\n        //通过回车符分割\n        var list = text.text.Split('\\n');\n        foreach (var item in list)\n        {\n            textList.Add(item);\n        }\n    }\n\n    IEnumerator SetText()\n    {\n        textFinshed = false;\n        //清空textLabel里的文字\n        textLabel.text = \"\";\n        //这里不清楚是不是我的文本的问题，获取时总是获取到两个字符，但不知道第二个字符是什么\n        switch (textList[index][0])\n        {\n            case 'A':\n                image.sprite = headA;\n                index++;\n                break;\n\n            case 'B':\n                image.sprite = headB;\n                index++;\n                break;\n        }\n        //每隔timeSpeed秒进行显示一次\n        for (int i = 0; i < textList[index].Length; i++)\n        {\n            textLabel.text += textList[index][i];\n\n            yield return new WaitForSeconds(timeSpeed);\n        }\n        //更改index值，并更改状态\n        index++;\n        textFinshed = true;\n\n    }\n\n}\n\n```\n\n# 中断协程\n\n通过判断输入时的状态判断，选择是否中断协程直接显示\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\npublic class Dialog : MonoBehaviour\n{\n    \n    [Header(\"组件\")]\n    public Text textLabel;\n    public Image image;\n\n    [Header(\"文本\")]\n    public TextAsset textAsset;\n    public int index;\n    [Header(\"头像\")]\n    public Sprite headA, headB;\n\n    public float timeSpeed;\n    //判断协程是否结束，防止多个协程同时出现\n    //初始时设置为true\n    bool textFinshed = true;\n    //存储文本\n    List<string> textList = new List<string>();\n    void Awake()\n    {\n        GetTextFormFilr(textAsset);\n    }\n    private void OnEnable()\n    {\n        //当启用时，显示第一句话\n        StartCoroutine(SetText());\n    }\n    // Update is called once per frame\n    void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.Space))\n        {\n            if (index >= textList.Count)\n            {\n                gameObject.SetActive(false);\n                index = 0;\n            }\n            else if (textFinshed)\n            {\n                //逐字显示\n                StartCoroutine(SetText());\n            }\n            else if (!textFinshed)\n            {\n                //结束协程，直接显示\n                StopCoroutine(SetText());\n                textFinshed = true;\n                \n                textLabel.text = textList[index];\n                index++;\n            }\n\n\n        }\n    }\n\n    void GetTextFormFilr(TextAsset text)\n    {\n        textList.Clear();\n        index = 0;\n        //通过回车符分割\n        var list = text.text.Split('\\n');\n        foreach (var item in list)\n        {\n            textList.Add(item);\n        }\n    }\n\n    IEnumerator SetText()\n    {\n        textFinshed = false;\n        //清空textLabel里的文字\n        textLabel.text = \"\";\n        //这里不清楚是不是我的文本的问题，获取时总是获取到两个字符，但不知道第二个字符是什么\n        switch (textList[index][0])\n        {\n            case 'A':\n                image.sprite = headA;\n                index++;\n                break;\n\n            case 'B':\n                image.sprite = headB;\n                index++;\n                break;\n        }\n        //每隔timeSpeed秒进行显示一次\n        for (int i = 0; i < textList[index].Length; i++)\n        {\n            textLabel.text += textList[index][i];\n\n            yield return new WaitForSeconds(timeSpeed);\n        }\n        //更改index值，并更改状态\n        \n        textFinshed = true;\n        index++;\n\n    }\n\n}\n\n```\n\n","source":"_posts/004_Dialog.md","raw":"---\ntitle: 对话系统——Dialog System\ndescription: \ndate: 2022-6-4\ntop_image: /img/004.png\ncover: /img/004.png\ncategories: \n- Unity\ntag: \n- Games\n- 游戏制作\n- M_studio\n\n---\n\n# Introduce\n\n首先还是要感谢麦扣老师，[视频链接](https://www.bilibili.com/video/BV1WJ411Y71J/?spm_id_from=333.788.recommend_more_video.1)。\n\n![image-20220604181812326](image-20220604181812326.png)\n\n# 文本读取与显示\n\n**这是个txt文件**，记录了对话的内容，根据 A or B 判断说话的人物\n\n```\nA\n1:zheshidiyijv1?\nB\n2:zheshidierjv2!!!!!\nA\n3:disanjvzaizheli.......\nB\n4:disijvyaojiehsule////\nA\n5:ending'''''\n```\n\n\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\npublic class Dialog : MonoBehaviour\n{\n    \n    [Header(\"组件\")]\n    public Text textLabel;\n    public Image image;\n\n    [Header(\"文本\")]\n    public TextAsset textAsset;\n    public int index;\n\n    //存储文本\n    List<string> textList = new List<string>();\n    void Awake()\n    {\n        GetTextFormFilr(textAsset);\n    }\n    private void OnEnable()\n    {\n        //当启用时，显示第一句话\n        textLabel.text = textList[index++];\n    }\n    // Update is called once per frame\n    void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.Space))\n        {\n            if (index == textList.Count)\n            {\n                gameObject.SetActive(false);\n                index = 0;\n            }\n            else\n                textLabel.text = textList[index++];\n        }\n    }\n\n    void GetTextFormFilr(TextAsset text)\n    {\n        textList.Clear();\n        index = 0;\n        //通过回车符分割\n        var list = text.text.Split('\\n');\n        foreach (var item in list)\n        {\n            textList.Add(item);\n        }\n    }\n}\n\n```\n\n# 协程逐字显示\n\n使用协程，通过设置变量`timeSpeed`去设置每个字的间隔时间\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\npublic class Dialog : MonoBehaviour\n{\n    \n    [Header(\"组件\")]\n    public Text textLabel;\n    public Image image;\n\n    [Header(\"文本\")]\n    public TextAsset textAsset;\n    public int index;\n    [Header(\"头像\")]\n    public Sprite headA, headB;\n\n    public float timeSpeed;\n    //判断协程是否结束，防止多个协程同时出现\n    //初始时设置为true\n    bool textFinshed = true;\n    //存储文本\n    List<string> textList = new List<string>();\n    void Awake()\n    {\n        GetTextFormFilr(textAsset);\n    }\n    private void OnEnable()\n    {\n        //当启用时，显示第一句话\n        StartCoroutine(SetText());\n    }\n    // Update is called once per frame\n    void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.Space))\n        {\n            if (index == textList.Count)\n            {\n                gameObject.SetActive(false);\n                index = 0;\n            }\n            else if(textFinshed)\n                StartCoroutine(SetText());\n        }\n    }\n\n    void GetTextFormFilr(TextAsset text)\n    {\n        textList.Clear();\n        index = 0;\n        //通过回车符分割\n        var list = text.text.Split('\\n');\n        foreach (var item in list)\n        {\n            textList.Add(item);\n        }\n    }\n\n    IEnumerator SetText()\n    {\n        textFinshed = false;\n        //清空textLabel里的文字\n        textLabel.text = \"\";\n        //这里不清楚是不是我的文本的问题，获取时总是获取到两个字符，但不知道第二个字符是什么\n        switch (textList[index][0])\n        {\n            case 'A':\n                image.sprite = headA;\n                index++;\n                break;\n\n            case 'B':\n                image.sprite = headB;\n                index++;\n                break;\n        }\n        //每隔timeSpeed秒进行显示一次\n        for (int i = 0; i < textList[index].Length; i++)\n        {\n            textLabel.text += textList[index][i];\n\n            yield return new WaitForSeconds(timeSpeed);\n        }\n        //更改index值，并更改状态\n        index++;\n        textFinshed = true;\n\n    }\n\n}\n\n```\n\n# 中断协程\n\n通过判断输入时的状态判断，选择是否中断协程直接显示\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\npublic class Dialog : MonoBehaviour\n{\n    \n    [Header(\"组件\")]\n    public Text textLabel;\n    public Image image;\n\n    [Header(\"文本\")]\n    public TextAsset textAsset;\n    public int index;\n    [Header(\"头像\")]\n    public Sprite headA, headB;\n\n    public float timeSpeed;\n    //判断协程是否结束，防止多个协程同时出现\n    //初始时设置为true\n    bool textFinshed = true;\n    //存储文本\n    List<string> textList = new List<string>();\n    void Awake()\n    {\n        GetTextFormFilr(textAsset);\n    }\n    private void OnEnable()\n    {\n        //当启用时，显示第一句话\n        StartCoroutine(SetText());\n    }\n    // Update is called once per frame\n    void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.Space))\n        {\n            if (index >= textList.Count)\n            {\n                gameObject.SetActive(false);\n                index = 0;\n            }\n            else if (textFinshed)\n            {\n                //逐字显示\n                StartCoroutine(SetText());\n            }\n            else if (!textFinshed)\n            {\n                //结束协程，直接显示\n                StopCoroutine(SetText());\n                textFinshed = true;\n                \n                textLabel.text = textList[index];\n                index++;\n            }\n\n\n        }\n    }\n\n    void GetTextFormFilr(TextAsset text)\n    {\n        textList.Clear();\n        index = 0;\n        //通过回车符分割\n        var list = text.text.Split('\\n');\n        foreach (var item in list)\n        {\n            textList.Add(item);\n        }\n    }\n\n    IEnumerator SetText()\n    {\n        textFinshed = false;\n        //清空textLabel里的文字\n        textLabel.text = \"\";\n        //这里不清楚是不是我的文本的问题，获取时总是获取到两个字符，但不知道第二个字符是什么\n        switch (textList[index][0])\n        {\n            case 'A':\n                image.sprite = headA;\n                index++;\n                break;\n\n            case 'B':\n                image.sprite = headB;\n                index++;\n                break;\n        }\n        //每隔timeSpeed秒进行显示一次\n        for (int i = 0; i < textList[index].Length; i++)\n        {\n            textLabel.text += textList[index][i];\n\n            yield return new WaitForSeconds(timeSpeed);\n        }\n        //更改index值，并更改状态\n        \n        textFinshed = true;\n        index++;\n\n    }\n\n}\n\n```\n\n","slug":"004_Dialog","published":1,"updated":"2022-06-21T14:26:21.706Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4o9jzik0009isv9f1rvheda","content":"<h1 id=\"Introduce\"><a href=\"#Introduce\" class=\"headerlink\" title=\"Introduce\"></a>Introduce</h1><p>首先还是要感谢麦扣老师，<a href=\"https://www.bilibili.com/video/BV1WJ411Y71J/?spm_id_from=333.788.recommend_more_video.1\">视频链接</a>。</p>\n<p><img src=\"/2022/06/04/004_Dialog/image-20220604181812326.png\" alt=\"image-20220604181812326\"></p>\n<h1 id=\"文本读取与显示\"><a href=\"#文本读取与显示\" class=\"headerlink\" title=\"文本读取与显示\"></a>文本读取与显示</h1><p><strong>这是个txt文件</strong>，记录了对话的内容，根据 A or B 判断说话的人物</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A</span><br><span class=\"line\">1:zheshidiyijv1?</span><br><span class=\"line\">B</span><br><span class=\"line\">2:zheshidierjv2!!!!!</span><br><span class=\"line\">A</span><br><span class=\"line\">3:disanjvzaizheli.......</span><br><span class=\"line\">B</span><br><span class=\"line\">4:disijvyaojiehsule////</span><br><span class=\"line\">A</span><br><span class=\"line\">5:ending&#x27;&#x27;&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.UI;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Dialog</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;组件&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Text textLabel;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Image image;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;文本&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> TextAsset textAsset;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> index;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//存储文本</span></span><br><span class=\"line\">    List&lt;<span class=\"built_in\">string</span>&gt; textList = <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">string</span>&gt;();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        GetTextFormFilr(textAsset);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEnable</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//当启用时，显示第一句话</span></span><br><span class=\"line\">        textLabel.text = textList[index++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// Update is called once per frame</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index == textList.Count)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                gameObject.SetActive(<span class=\"literal\">false</span>);</span><br><span class=\"line\">                index = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                textLabel.text = textList[index++];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GetTextFormFilr</span>(<span class=\"params\">TextAsset text</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        textList.Clear();</span><br><span class=\"line\">        index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//通过回车符分割</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> list = text.text.Split(<span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> list)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            textList.Add(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"协程逐字显示\"><a href=\"#协程逐字显示\" class=\"headerlink\" title=\"协程逐字显示\"></a>协程逐字显示</h1><p>使用协程，通过设置变量<code>timeSpeed</code>去设置每个字的间隔时间</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.UI;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Dialog</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;组件&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Text textLabel;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Image image;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;文本&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> TextAsset textAsset;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> index;</span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;头像&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Sprite headA, headB;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> timeSpeed;</span><br><span class=\"line\">    <span class=\"comment\">//判断协程是否结束，防止多个协程同时出现</span></span><br><span class=\"line\">    <span class=\"comment\">//初始时设置为true</span></span><br><span class=\"line\">    <span class=\"built_in\">bool</span> textFinshed = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"comment\">//存储文本</span></span><br><span class=\"line\">    List&lt;<span class=\"built_in\">string</span>&gt; textList = <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">string</span>&gt;();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        GetTextFormFilr(textAsset);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEnable</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//当启用时，显示第一句话</span></span><br><span class=\"line\">        StartCoroutine(SetText());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// Update is called once per frame</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index == textList.Count)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                gameObject.SetActive(<span class=\"literal\">false</span>);</span><br><span class=\"line\">                index = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(textFinshed)</span><br><span class=\"line\">                StartCoroutine(SetText());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GetTextFormFilr</span>(<span class=\"params\">TextAsset text</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        textList.Clear();</span><br><span class=\"line\">        index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//通过回车符分割</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> list = text.text.Split(<span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> list)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            textList.Add(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">IEnumerator <span class=\"title\">SetText</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        textFinshed = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"comment\">//清空textLabel里的文字</span></span><br><span class=\"line\">        textLabel.text = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//这里不清楚是不是我的文本的问题，获取时总是获取到两个字符，但不知道第二个字符是什么</span></span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (textList[index][<span class=\"number\">0</span>])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;A&#x27;</span>:</span><br><span class=\"line\">                image.sprite = headA;</span><br><span class=\"line\">                index++;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;B&#x27;</span>:</span><br><span class=\"line\">                image.sprite = headB;</span><br><span class=\"line\">                index++;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//每隔timeSpeed秒进行显示一次</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; textList[index].Length; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            textLabel.text += textList[index][i];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">yield</span> <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title\">WaitForSeconds</span>(<span class=\"params\">timeSpeed</span>)</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//更改index值，并更改状态</span></span><br><span class=\"line\">        index++;</span><br><span class=\"line\">        textFinshed = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"中断协程\"><a href=\"#中断协程\" class=\"headerlink\" title=\"中断协程\"></a>中断协程</h1><p>通过判断输入时的状态判断，选择是否中断协程直接显示</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.UI;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Dialog</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;组件&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Text textLabel;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Image image;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;文本&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> TextAsset textAsset;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> index;</span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;头像&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Sprite headA, headB;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> timeSpeed;</span><br><span class=\"line\">    <span class=\"comment\">//判断协程是否结束，防止多个协程同时出现</span></span><br><span class=\"line\">    <span class=\"comment\">//初始时设置为true</span></span><br><span class=\"line\">    <span class=\"built_in\">bool</span> textFinshed = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"comment\">//存储文本</span></span><br><span class=\"line\">    List&lt;<span class=\"built_in\">string</span>&gt; textList = <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">string</span>&gt;();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        GetTextFormFilr(textAsset);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEnable</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//当启用时，显示第一句话</span></span><br><span class=\"line\">        StartCoroutine(SetText());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// Update is called once per frame</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index &gt;= textList.Count)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                gameObject.SetActive(<span class=\"literal\">false</span>);</span><br><span class=\"line\">                index = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (textFinshed)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//逐字显示</span></span><br><span class=\"line\">                StartCoroutine(SetText());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!textFinshed)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//结束协程，直接显示</span></span><br><span class=\"line\">                StopCoroutine(SetText());</span><br><span class=\"line\">                textFinshed = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                </span><br><span class=\"line\">                textLabel.text = textList[index];</span><br><span class=\"line\">                index++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GetTextFormFilr</span>(<span class=\"params\">TextAsset text</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        textList.Clear();</span><br><span class=\"line\">        index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//通过回车符分割</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> list = text.text.Split(<span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> list)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            textList.Add(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">IEnumerator <span class=\"title\">SetText</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        textFinshed = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"comment\">//清空textLabel里的文字</span></span><br><span class=\"line\">        textLabel.text = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//这里不清楚是不是我的文本的问题，获取时总是获取到两个字符，但不知道第二个字符是什么</span></span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (textList[index][<span class=\"number\">0</span>])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;A&#x27;</span>:</span><br><span class=\"line\">                image.sprite = headA;</span><br><span class=\"line\">                index++;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;B&#x27;</span>:</span><br><span class=\"line\">                image.sprite = headB;</span><br><span class=\"line\">                index++;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//每隔timeSpeed秒进行显示一次</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; textList[index].Length; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            textLabel.text += textList[index][i];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">yield</span> <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title\">WaitForSeconds</span>(<span class=\"params\">timeSpeed</span>)</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//更改index值，并更改状态</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        textFinshed = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        index++;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Introduce\"><a href=\"#Introduce\" class=\"headerlink\" title=\"Introduce\"></a>Introduce</h1><p>首先还是要感谢麦扣老师，<a href=\"https://www.bilibili.com/video/BV1WJ411Y71J/?spm_id_from=333.788.recommend_more_video.1\">视频链接</a>。</p>\n<p><img src=\"/2022/06/04/004_Dialog/image-20220604181812326.png\" alt=\"image-20220604181812326\"></p>\n<h1 id=\"文本读取与显示\"><a href=\"#文本读取与显示\" class=\"headerlink\" title=\"文本读取与显示\"></a>文本读取与显示</h1><p><strong>这是个txt文件</strong>，记录了对话的内容，根据 A or B 判断说话的人物</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A</span><br><span class=\"line\">1:zheshidiyijv1?</span><br><span class=\"line\">B</span><br><span class=\"line\">2:zheshidierjv2!!!!!</span><br><span class=\"line\">A</span><br><span class=\"line\">3:disanjvzaizheli.......</span><br><span class=\"line\">B</span><br><span class=\"line\">4:disijvyaojiehsule////</span><br><span class=\"line\">A</span><br><span class=\"line\">5:ending&#x27;&#x27;&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.UI;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Dialog</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;组件&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Text textLabel;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Image image;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;文本&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> TextAsset textAsset;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> index;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//存储文本</span></span><br><span class=\"line\">    List&lt;<span class=\"built_in\">string</span>&gt; textList = <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">string</span>&gt;();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        GetTextFormFilr(textAsset);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEnable</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//当启用时，显示第一句话</span></span><br><span class=\"line\">        textLabel.text = textList[index++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// Update is called once per frame</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index == textList.Count)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                gameObject.SetActive(<span class=\"literal\">false</span>);</span><br><span class=\"line\">                index = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                textLabel.text = textList[index++];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GetTextFormFilr</span>(<span class=\"params\">TextAsset text</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        textList.Clear();</span><br><span class=\"line\">        index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//通过回车符分割</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> list = text.text.Split(<span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> list)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            textList.Add(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"协程逐字显示\"><a href=\"#协程逐字显示\" class=\"headerlink\" title=\"协程逐字显示\"></a>协程逐字显示</h1><p>使用协程，通过设置变量<code>timeSpeed</code>去设置每个字的间隔时间</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.UI;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Dialog</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;组件&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Text textLabel;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Image image;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;文本&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> TextAsset textAsset;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> index;</span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;头像&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Sprite headA, headB;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> timeSpeed;</span><br><span class=\"line\">    <span class=\"comment\">//判断协程是否结束，防止多个协程同时出现</span></span><br><span class=\"line\">    <span class=\"comment\">//初始时设置为true</span></span><br><span class=\"line\">    <span class=\"built_in\">bool</span> textFinshed = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"comment\">//存储文本</span></span><br><span class=\"line\">    List&lt;<span class=\"built_in\">string</span>&gt; textList = <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">string</span>&gt;();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        GetTextFormFilr(textAsset);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEnable</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//当启用时，显示第一句话</span></span><br><span class=\"line\">        StartCoroutine(SetText());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// Update is called once per frame</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index == textList.Count)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                gameObject.SetActive(<span class=\"literal\">false</span>);</span><br><span class=\"line\">                index = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(textFinshed)</span><br><span class=\"line\">                StartCoroutine(SetText());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GetTextFormFilr</span>(<span class=\"params\">TextAsset text</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        textList.Clear();</span><br><span class=\"line\">        index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//通过回车符分割</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> list = text.text.Split(<span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> list)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            textList.Add(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">IEnumerator <span class=\"title\">SetText</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        textFinshed = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"comment\">//清空textLabel里的文字</span></span><br><span class=\"line\">        textLabel.text = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//这里不清楚是不是我的文本的问题，获取时总是获取到两个字符，但不知道第二个字符是什么</span></span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (textList[index][<span class=\"number\">0</span>])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;A&#x27;</span>:</span><br><span class=\"line\">                image.sprite = headA;</span><br><span class=\"line\">                index++;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;B&#x27;</span>:</span><br><span class=\"line\">                image.sprite = headB;</span><br><span class=\"line\">                index++;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//每隔timeSpeed秒进行显示一次</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; textList[index].Length; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            textLabel.text += textList[index][i];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">yield</span> <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title\">WaitForSeconds</span>(<span class=\"params\">timeSpeed</span>)</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//更改index值，并更改状态</span></span><br><span class=\"line\">        index++;</span><br><span class=\"line\">        textFinshed = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"中断协程\"><a href=\"#中断协程\" class=\"headerlink\" title=\"中断协程\"></a>中断协程</h1><p>通过判断输入时的状态判断，选择是否中断协程直接显示</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine;</span><br><span class=\"line\"><span class=\"keyword\">using</span> UnityEngine.UI;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Dialog</span> : <span class=\"title\">MonoBehaviour</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;组件&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Text textLabel;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Image image;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;文本&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> TextAsset textAsset;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> index;</span><br><span class=\"line\">    [<span class=\"meta\">Header(<span class=\"meta-string\">&quot;头像&quot;</span>)</span>]</span><br><span class=\"line\">    <span class=\"keyword\">public</span> Sprite headA, headB;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">float</span> timeSpeed;</span><br><span class=\"line\">    <span class=\"comment\">//判断协程是否结束，防止多个协程同时出现</span></span><br><span class=\"line\">    <span class=\"comment\">//初始时设置为true</span></span><br><span class=\"line\">    <span class=\"built_in\">bool</span> textFinshed = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"comment\">//存储文本</span></span><br><span class=\"line\">    List&lt;<span class=\"built_in\">string</span>&gt; textList = <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">string</span>&gt;();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Awake</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        GetTextFormFilr(textAsset);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">OnEnable</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//当启用时，显示第一句话</span></span><br><span class=\"line\">        StartCoroutine(SetText());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// Update is called once per frame</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Update</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index &gt;= textList.Count)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                gameObject.SetActive(<span class=\"literal\">false</span>);</span><br><span class=\"line\">                index = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (textFinshed)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//逐字显示</span></span><br><span class=\"line\">                StartCoroutine(SetText());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!textFinshed)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//结束协程，直接显示</span></span><br><span class=\"line\">                StopCoroutine(SetText());</span><br><span class=\"line\">                textFinshed = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                </span><br><span class=\"line\">                textLabel.text = textList[index];</span><br><span class=\"line\">                index++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">GetTextFormFilr</span>(<span class=\"params\">TextAsset text</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        textList.Clear();</span><br><span class=\"line\">        index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//通过回车符分割</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> list = text.text.Split(<span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> list)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            textList.Add(item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">IEnumerator <span class=\"title\">SetText</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        textFinshed = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"comment\">//清空textLabel里的文字</span></span><br><span class=\"line\">        textLabel.text = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//这里不清楚是不是我的文本的问题，获取时总是获取到两个字符，但不知道第二个字符是什么</span></span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (textList[index][<span class=\"number\">0</span>])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;A&#x27;</span>:</span><br><span class=\"line\">                image.sprite = headA;</span><br><span class=\"line\">                index++;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;B&#x27;</span>:</span><br><span class=\"line\">                image.sprite = headB;</span><br><span class=\"line\">                index++;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//每隔timeSpeed秒进行显示一次</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; textList[index].Length; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            textLabel.text += textList[index][i];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">yield</span> <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title\">WaitForSeconds</span>(<span class=\"params\">timeSpeed</span>)</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//更改index值，并更改状态</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        textFinshed = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        index++;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"}],"PostAsset":[{"_id":"source/_posts/001_hexo/image-20210123190241565.png","post":"cl4o9jzi70003isv9d3rm2zck","slug":"image-20210123190241565.png","modified":1,"renderable":1},{"_id":"source/_posts/001_hexo/image-20210123190247657.png","post":"cl4o9jzi70003isv9d3rm2zck","slug":"image-20210123190247657.png","modified":1,"renderable":1},{"_id":"source/_posts/001_hexo/image-20210123190444101.png","post":"cl4o9jzi70003isv9d3rm2zck","slug":"image-20210123190444101.png","modified":1,"renderable":1},{"_id":"source/_posts/001_hexo/image-20210123203426310.png","post":"cl4o9jzi70003isv9d3rm2zck","slug":"image-20210123203426310.png","modified":1,"renderable":1},{"_id":"source/_posts/001_hexo/image-20220110162452660.png","post":"cl4o9jzi70003isv9d3rm2zck","slug":"image-20220110162452660.png","modified":1,"renderable":1},{"_id":"source/_posts/001_hexo/image-20220110162645465.png","post":"cl4o9jzi70003isv9d3rm2zck","slug":"image-20220110162645465.png","modified":1,"renderable":1},{"_id":"source/_posts/001_hexo/image-20220110164357577.png","post":"cl4o9jzi70003isv9d3rm2zck","slug":"image-20220110164357577.png","modified":1,"renderable":1},{"_id":"source/_posts/001_hexo/image-20220110165134907.png","post":"cl4o9jzi70003isv9d3rm2zck","slug":"image-20220110165134907.png","modified":1,"renderable":1},{"_id":"source/_posts/001_hexo/image-20220110165549516.png","post":"cl4o9jzi70003isv9d3rm2zck","slug":"image-20220110165549516.png","modified":1,"renderable":1},{"_id":"source/_posts/001_hexo/image-20220111112820182.png","post":"cl4o9jzi70003isv9d3rm2zck","slug":"image-20220111112820182.png","modified":1,"renderable":1},{"_id":"source/_posts/001_hexo/image-20220111114426389.png","post":"cl4o9jzi70003isv9d3rm2zck","slug":"image-20220111114426389.png","modified":1,"renderable":1},{"_id":"source/_posts/001_hexo/image-20220111114517951.png","post":"cl4o9jzi70003isv9d3rm2zck","slug":"image-20220111114517951.png","modified":1,"renderable":1},{"_id":"source/_posts/001_hexo/image-20220111115043380.png","post":"cl4o9jzi70003isv9d3rm2zck","slug":"image-20220111115043380.png","modified":1,"renderable":1},{"_id":"source/_posts/003_Inventory/image-20220603143654206.png","post":"cl4o9jzic0005isv9f3ktffid","slug":"image-20220603143654206.png","modified":1,"renderable":1},{"_id":"source/_posts/004_Dialog/image-20220604181812326.png","post":"cl4o9jzik0009isv9f1rvheda","slug":"image-20220604181812326.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cl4o9jzi70003isv9d3rm2zck","category_id":"cl4o9jzie0006isv9bo5633n3","_id":"cl4o9jzim000cisv95anyec0x"},{"post_id":"cl4o9jzic0005isv9f3ktffid","category_id":"cl4o9jzil000aisv97ytucirq","_id":"cl4o9jziq000gisv9aqsogw6i"},{"post_id":"cl4o9jzih0007isv90n9sgnuq","category_id":"cl4o9jzil000aisv97ytucirq","_id":"cl4o9jzir000jisv94vif564z"},{"post_id":"cl4o9jzik0009isv9f1rvheda","category_id":"cl4o9jzil000aisv97ytucirq","_id":"cl4o9jzis000nisv92e8qd7pj"}],"PostTag":[{"post_id":"cl4o9jzic0005isv9f3ktffid","tag_id":"cl4o9jzii0008isv95yszcmhr","_id":"cl4o9jzir000iisv95f4o8bh5"},{"post_id":"cl4o9jzic0005isv9f3ktffid","tag_id":"cl4o9jzim000bisv9gsr9cn6f","_id":"cl4o9jzir000kisv913z5dfyf"},{"post_id":"cl4o9jzic0005isv9f3ktffid","tag_id":"cl4o9jzip000eisv9bp2z5tqh","_id":"cl4o9jzis000misv9bux2gxeg"},{"post_id":"cl4o9jzih0007isv90n9sgnuq","tag_id":"cl4o9jzii0008isv95yszcmhr","_id":"cl4o9jzit000qisv9hn7zgbds"},{"post_id":"cl4o9jzih0007isv90n9sgnuq","tag_id":"cl4o9jzim000bisv9gsr9cn6f","_id":"cl4o9jzit000risv96n1z5igl"},{"post_id":"cl4o9jzih0007isv90n9sgnuq","tag_id":"cl4o9jzip000eisv9bp2z5tqh","_id":"cl4o9jziu000tisv93xdnh1i6"},{"post_id":"cl4o9jzik0009isv9f1rvheda","tag_id":"cl4o9jzii0008isv95yszcmhr","_id":"cl4o9jziu000visv93t2zgt3m"},{"post_id":"cl4o9jzik0009isv9f1rvheda","tag_id":"cl4o9jzim000bisv9gsr9cn6f","_id":"cl4o9jziv000wisv95rsj3kr1"},{"post_id":"cl4o9jzik0009isv9f1rvheda","tag_id":"cl4o9jzip000eisv9bp2z5tqh","_id":"cl4o9jziv000xisv997auenda"}],"Tag":[{"name":"Games","_id":"cl4o9jzii0008isv95yszcmhr"},{"name":"游戏制作","_id":"cl4o9jzim000bisv9gsr9cn6f"},{"name":"M_studio","_id":"cl4o9jzip000eisv9bp2z5tqh"}]}}